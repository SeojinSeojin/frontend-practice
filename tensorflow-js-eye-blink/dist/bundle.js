/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={851:function(e,t,n){!function(e,t,n){"use strict";const r=e=>({startEndTensor:e,startPoint:n.slice(e,[0,0],[-1,2]),endPoint:n.slice(e,[0,2],[-1,2])}),a={strides:[8,16],anchors:[2,6]};function s(e,t){let r,a,s;if(e.topLeft instanceof n.Tensor&&e.bottomRight instanceof n.Tensor){const[i,o]=n.tidy((()=>[n.concat([n.sub(t-1,e.topLeft.slice(0,1)),e.topLeft.slice(1,1)]),n.concat([n.sub(t-1,e.bottomRight.slice(0,1)),e.bottomRight.slice(1,1)])]));r=i,a=o,null!=e.landmarks&&(s=n.tidy((()=>{const r=n.sub(n.tensor1d([t-1,0]),e.landmarks),a=n.tensor1d([1,-1]);return n.mul(r,a)})))}else{const[n,i]=e.topLeft,[o,u]=e.bottomRight;r=[t-1-n,i],a=[t-1-o,u],null!=e.landmarks&&(s=e.landmarks.map((e=>[t-1-e[0],e[1]])))}const i={topLeft:r,bottomRight:a};return null!=s&&(i.landmarks=s),null!=e.probability&&(i.probability=e.probability instanceof n.Tensor?e.probability.clone():e.probability),i}function i(e,t){return n.tidy((()=>{let a;return a=e.hasOwnProperty("box")?e.box:e,((e,t)=>{const a=n.mul(e.startPoint,t),s=n.mul(e.endPoint,t),i=n.concat2d([a,s],1);return r(i)})(a,t).startEndTensor.squeeze()}))}class o{constructor(e,t,r,s,i,o){this.blazeFaceModel=e,this.width=t,this.height=r,this.maxFaces=s,this.anchorsData=function(e,t,n){const r=[];for(let a=0;a<n.strides.length;a++){const s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[a];for(let e=0;e<i;e++){const t=s*(e+.5);for(let e=0;e<o;e++){const n=s*(e+.5);for(let e=0;e<u;e++)r.push([n,t])}}}return r}(t,r,a),this.anchors=n.tensor2d(this.anchorsData),this.inputSizeData=[t,r],this.inputSize=n.tensor1d([t,r]),this.iouThreshold=i,this.scoreThreshold=o}async getBoundingBoxes(e,t,a=!0){const[s,i,o]=n.tidy((()=>{const t=e.resizeBilinear([this.width,this.height]),r=n.mul(n.sub(t.div(255),.5),2),a=this.blazeFaceModel.predict(r).squeeze(),s=function(e,t,r){const a=n.slice(e,[0,1],[-1,2]),s=n.add(a,t),i=n.slice(e,[0,3],[-1,2]),o=n.div(i,r),u=n.div(s,r),l=n.div(o,2),c=n.sub(u,l),h=n.add(u,l),p=n.mul(c,r),d=n.mul(h,r);return n.concat2d([p,d],1)}(a,this.anchors,this.inputSize),i=n.slice(a,[0,0],[-1,1]);return[a,s,n.sigmoid(i).squeeze()]})),u=console.warn;console.warn=()=>{};const l=n.image.nonMaxSuppression(i,o,this.maxFaces,this.iouThreshold,this.scoreThreshold);console.warn=u;const c=await l.array();l.dispose();let h=c.map((e=>n.slice(i,[e,0],[1,-1])));t||(h=await Promise.all(h.map((async e=>{const t=await e.array();return e.dispose(),t}))));const p=e.shape[1],d=e.shape[2];let f;f=t?n.div([d,p],this.inputSize):[d/this.inputSizeData[0],p/this.inputSizeData[1]];const m=[];for(let e=0;e<h.length;e++){const i=h[e],u=n.tidy((()=>{const u=r(i instanceof n.Tensor?i:n.tensor2d(i));if(!a)return u;const l=c[e];let h;return h=t?this.anchors.slice([l,0],[1,2]):this.anchorsData[l],{box:u,landmarks:n.slice(s,[l,5],[1,-1]).squeeze().reshape([6,-1]),probability:n.slice(o,[l],[1]),anchor:h}}));m.push(u)}return i.dispose(),o.dispose(),s.dispose(),{boxes:m,scaleFactor:f}}async estimateFaces(e,t=!1,r=!1,a=!0){const[,o]=function(e){return e instanceof n.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),u=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),e.toFloat().expandDims(0)))),{boxes:l,scaleFactor:c}=await this.getBoundingBoxes(u,t,a);return u.dispose(),t?l.map((e=>{const t=i(e,c);let n={topLeft:t.slice([0],[2]),bottomRight:t.slice([2],[2])};if(a){const{landmarks:t,probability:r,anchor:a}=e,s=t.add(a).mul(c);n.landmarks=s,n.probability=r}return r&&(n=s(n,o)),n})):Promise.all(l.map((async e=>{const t=i(e,c);let n;if(a){const[r,a,s]=await Promise.all([e.landmarks,t,e.probability].map((async e=>e.array()))),i=e.anchor,[o,u]=c,l=r.map((e=>[(e[0]+i[0])*o,(e[1]+i[1])*u]));n={topLeft:a.slice(0,2),bottomRight:a.slice(2),landmarks:l,probability:s},(e=>{e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()})(e.box),e.landmarks.dispose(),e.probability.dispose()}else{const e=await t.array();n={topLeft:e.slice(0,2),bottomRight:e.slice(2)}}return t.dispose(),r&&(n=s(n,o)),n})))}}const u={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function l(e){null!=e&&null!=e.startPoint&&(e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose())}function c(e,t,r){return{startEndTensor:e,startPoint:null!=t?t:n.slice(e,[0,0],[-1,2]),endPoint:null!=r?r:n.slice(e,[0,2],[-1,2])}}function h(e){return n.tidy((()=>{const t=n.sub(e.endPoint,e.startPoint);return n.abs(t)}))}function p(e,t=1.5){return n.tidy((()=>{const r=function(e){return n.tidy((()=>{const t=n.div(n.sub(e.endPoint,e.startPoint),2);return n.add(e.startPoint,t)}))}(e),a=h(e),s=n.mul(n.div(a,2),t),i=n.sub(r,s),o=n.add(r,s);return c(n.concat2d([i,o],1),i,o)}))}class d{constructor(e,t,n,r,a,s){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=e,this.meshDetector=t,this.meshWidth=n,this.meshHeight=r,this.maxContinuousChecks=a,this.maxFaces=s}async predict(e){if(this.shouldUpdateRegionsOfInterest()){const t=!0,r=!1,{boxes:a,scaleFactor:s}=await this.boundingBoxDetector.getBoundingBoxes(e,t,r);if(0===a.length)return s.dispose(),this.clearAllRegionsOfInterest(),null;const i=a.map((e=>p(function(e,t){const r=n.mul(e.startPoint,t),a=n.mul(e.endPoint,t);return c(n.concat2d([r,a],1))}(e,s))));a.forEach(l),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0}else this.runsWithoutFaceDetector++;return n.tidy((()=>this.regionsOfInterest.map(((t,r)=>{const a=function(e,t,r){const a=t.shape[1],s=t.shape[2],i=e.startEndTensor;return n.tidy((()=>{const e=n.concat2d([i.slice([0,1],[-1,1]),i.slice([0,0],[-1,1]),i.slice([0,3],[-1,1]),i.slice([0,2],[-1,1])],0),o=n.div(e.transpose(),[a,s,a,s]);return n.image.cropAndResize(t,o,[0],r)}))}(t,e,[this.meshHeight,this.meshWidth]).div(255),[,s,i]=this.meshDetector.predict(a),o=n.reshape(i,[-1,3]),u=n.div(h(t),[this.meshWidth,this.meshHeight]),c=n.mul(o,u.concat(n.tensor2d([1],[1,1]),1)).add(t.startPoint.concat(n.tensor2d([0],[1,1]),1)),p=this.calculateLandmarksBoundingBox(c);return l(this.regionsOfInterest[r]),this.regionsOfInterest[r]=p,{coords:o,scaledCoords:c,box:p,flag:s.squeeze()}}))))}updateRegionsOfInterest(e){for(let t=0;t<e.length;t++){const n=e[t],r=this.regionsOfInterest[t];let a=0;if(r&&r.startPoint){const[e,t,s,i]=n.startEndTensor.arraySync()[0],[o,u,l,c]=r.startEndTensor.arraySync()[0],h=Math.max(e,o),p=Math.max(t,u),d=(Math.min(s,l)-h)*(Math.min(i,c)-p);a=d/((s-e)*(i-t)+(l-o)*(c-t)-d)}a>.25?l(n):(this.regionsOfInterest[t]=n,l(r))}for(let t=e.length;t<this.regionsOfInterest.length;t++)l(this.regionsOfInterest[t]);this.regionsOfInterest=this.regionsOfInterest.slice(0,e.length)}clearRegionOfInterest(e){null!=this.regionsOfInterest[e]&&(l(this.regionsOfInterest[e]),this.regionsOfInterest=[...this.regionsOfInterest.slice(0,e),...this.regionsOfInterest.slice(e+1)])}clearAllRegionsOfInterest(){for(let e=0;e<this.regionsOfInterest.length;e++)l(this.regionsOfInterest[e]);this.regionsOfInterest=[]}shouldUpdateRegionsOfInterest(){const e=this.regionsOfInterest.length,t=0===e;return 1===this.maxFaces||t?t:e!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks}calculateLandmarksBoundingBox(e){const t=e.slice([0,0],[468,1]),r=e.slice([0,1],[468,1]);return p(c(n.stack([t.min(),r.min(),t.max(),r.max()]).expandDims(0)))}}const f=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];async function m(e,n,r){return async function({maxFaces:e=10,inputWidth:n=128,inputHeight:r=128,iouThreshold:a=.3,scoreThreshold:s=.75}={}){const i=await t.loadGraphModel("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0});return new o(i,n,r,e,a,s)}({maxFaces:e,iouThreshold:n,scoreThreshold:r})}async function g(){return t.loadGraphModel("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})}function v(e,t){if(e.mesh instanceof n.Tensor){const[r,a,s,i]=n.tidy((()=>{const r=n.tensor1d([t-1,0,0]),a=n.tensor1d([1,-1,1]);return n.tidy((()=>[n.concat([n.sub(t-1,e.boundingBox.topLeft.slice(0,1)),e.boundingBox.topLeft.slice(1,1)]),n.concat([n.sub(t-1,e.boundingBox.bottomRight.slice(0,1)),e.boundingBox.bottomRight.slice(1,1)]),n.sub(r,e.mesh).mul(a),n.sub(r,e.scaledMesh).mul(a)]))}));return Object.assign({},e,{boundingBox:{topLeft:r,bottomRight:a},mesh:s,scaledMesh:i})}return Object.assign({},e,{boundingBox:{topLeft:[t-1-e.boundingBox.topLeft[0],e.boundingBox.topLeft[1]],bottomRight:[t-1-e.boundingBox.bottomRight[0],e.boundingBox.bottomRight[1]]},mesh:e.mesh.map((e=>{const n=e.slice(0);return n[0]=t-1-e[0],n})),scaledMesh:e.scaledMesh.map((e=>{const n=e.slice(0);return n[0]=t-1-e[0],n}))})}class y{constructor(e,t,n,r,a){this.pipeline=new d(e,t,192,192,n,a),this.detectionConfidence=r}static getAnnotations(){return u}static getUVCoords(){return f}async estimateFaces(e,t=!1,r=!1){const[,a]=function(e){return e instanceof n.Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),e.toFloat().expandDims(0)))),i=n.env().get("WEBGL_PACK_DEPTHWISECONV");n.env().set("WEBGL_PACK_DEPTHWISECONV",!0);const o=await this.pipeline.predict(s);return n.env().set("WEBGL_PACK_DEPTHWISECONV",i),s.dispose(),null!=o&&o.length>0?Promise.all(o.map((async(e,n)=>{const{coords:s,scaledCoords:i,box:o,flag:l}=e;let c=[l];t||(c=c.concat([s,i,o.startPoint,o.endPoint]));const h=await Promise.all(c.map((async e=>e.array()))),p=h[0];if(l.dispose(),p<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(n),t){const e={faceInViewConfidence:p,mesh:s,scaledMesh:i,boundingBox:{topLeft:o.startPoint.squeeze(),bottomRight:o.endPoint.squeeze()}};return r?v(e,a):e}const[d,f,m,g]=h.slice(1);i.dispose(),s.dispose();let y={faceInViewConfidence:p,boundingBox:{topLeft:m,bottomRight:g},mesh:d,scaledMesh:f};r&&(y=v(y,a));const b={};for(const e in u)b[e]=u[e].map((e=>y.scaledMesh[e]));return y.annotations=b,y}))):[]}}class b{constructor(e,t){this.eyeblinkModel=e,this.facemeshModel=t}extractEyeBoundingBox(e,[t,n,r,a]){const s=e.scaledMesh[t][1],i=e.scaledMesh[n][0],o=e.scaledMesh[r][1];return{topLeft:[e.scaledMesh[a][0],s],bottomRight:[i,o]}}async getPredictionWithinBoundingBox(e,t){const r=n.tidy((()=>{const r=t.map((t=>[t.topLeft[1]/e.shape[0],t.topLeft[0]/e.shape[1],t.bottomRight[1]/e.shape[0],t.bottomRight[0]/e.shape[1]])),a=n.image.cropAndResize(e.expandDims(0),r,r.map((()=>0)),[26,34]).toFloat().mean(3).expandDims(3).toFloat().div(255);return this.eyeblinkModel.predict(a)})),a=await r.data();return r.dispose(),a}async predictEyeOpenness(e,t){if(!(e instanceof n.Tensor)){const r=n.browser.fromPixels(e),a=await this.predictEyeOpenness(r,t);return r.dispose(),a}if(!t){const n=await this.facemeshModel.estimateFaces(e);if(0===n.length)return null;t=n[0]}const r=this.extractEyeBoundingBox(t,[27,243,23,130]),a=this.extractEyeBoundingBox(t,[257,359,253,362]),[s,i]=await this.getPredictionWithinBoundingBox(e,[r,a]);return{right:s,left:i}}}const x="https://mirrory-dev.github.io/eyeblink/models/model.json";async function w(e=x){return t.loadGraphModel(e)}e.Eyeblink=b,e.getImageData=function(e){const t=e.width,n=e.height,r=new OffscreenCanvas(t,n),a=r.getContext("2d");return a.drawImage(e,0,0,r.width,r.height),a.getImageData(0,0,r.width,r.height)},e.load=async function(e=x){const t=await w(e),n=await async function({maxContinuousChecks:e=5,detectionConfidence:t=.9,maxFaces:n=10,iouThreshold:r=.3,scoreThreshold:a=.75}={}){const[s,i]=await Promise.all([m(n,r,a),g()]);return new y(s,i,e,t,n)}({maxFaces:1});return new b(t,n)},e.loadModel=w,Object.defineProperty(e,"__esModule",{value:!0})}(t,n(946),n(75))},946:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>ie,loadGraphModel:()=>oe,deregisterOp:()=>d,registerOp:()=>h,version_converter:()=>ue});var r,a,s,i=n(75),o=function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function u(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function l(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}(s=r||(r={}))[s.DT_INVALID=0]="DT_INVALID",s[s.DT_FLOAT=1]="DT_FLOAT",s[s.DT_DOUBLE=2]="DT_DOUBLE",s[s.DT_INT32=3]="DT_INT32",s[s.DT_UINT8=4]="DT_UINT8",s[s.DT_INT16=5]="DT_INT16",s[s.DT_INT8=6]="DT_INT8",s[s.DT_STRING=7]="DT_STRING",s[s.DT_COMPLEX64=8]="DT_COMPLEX64",s[s.DT_INT64=9]="DT_INT64",s[s.DT_BOOL=10]="DT_BOOL",s[s.DT_QINT8=11]="DT_QINT8",s[s.DT_QUINT8=12]="DT_QUINT8",s[s.DT_QINT32=13]="DT_QINT32",s[s.DT_BFLOAT16=14]="DT_BFLOAT16",s[s.DT_FLOAT_REF=101]="DT_FLOAT_REF",s[s.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",s[s.DT_INT32_REF=103]="DT_INT32_REF",s[s.DT_UINT8_REF=104]="DT_UINT8_REF",s[s.DT_INT16_REF=105]="DT_INT16_REF",s[s.DT_INT8_REF=106]="DT_INT8_REF",s[s.DT_STRING_REF=107]="DT_STRING_REF",s[s.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",s[s.DT_INT64_REF=109]="DT_INT64_REF",s[s.DT_BOOL_REF=110]="DT_BOOL_REF",s[s.DT_QINT8_REF=111]="DT_QINT8_REF",s[s.DT_QUINT8_REF=112]="DT_QUINT8_REF",s[s.DT_QINT32_REF=113]="DT_QINT32_REF",s[s.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",function(e){!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}));var c={};function h(e,t){var n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};c[e]=n}function p(e){return c[e]}function d(e){delete c[e]}function f(e,t,n,r){var a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){var s=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?s+1:a.inputIndexEnd;if("tensor"===a.type)return m(t.inputNames[a.inputIndexStart],n,r);if("tensors"===a.type)return t.inputNames.slice(s,i).map((function(e){return m(e,n,r)}));var o=Array.prototype.slice.call(m(t.inputNames.slice(s)[0],n,r).dataSync());return"number"===a.type?o[0]:o}var u=t.attrParams[e];return u&&u.value}function m(e,t,n){var r=y(e),a=r[0],s=r[1],i=n.currentContextIds.find((function(e){return!!t[v(a,e)]}));return void 0!==i?t[v(a,i)][s]:void 0}function g(e,t){var n=y(e),r=n[0],a=n[1];return[v(r,t&&t.currentContextId),a]}function v(e,t){return t?e+"-"+t:e}function y(e){var t=e.lastIndexOf(":");return-1===t?[e,0]:[e.substring(0,t),Number(e.substring(t+1))]}function b(e,t){for(var n=[],r=0;r<e.length;r+=t)n.push(e.slice(r,r+t));return n}var x=Object.freeze({json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),w=Object.freeze({json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),k=Object.freeze({json:[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"number"}]}]}),I=Object.freeze({json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]}]}),C=Object.freeze({json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]}),N=Object.freeze({json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),S=Object.freeze({json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]}]}),E=Object.freeze({json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]}),T=Object.freeze({json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]}),R=Object.freeze({json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),A=Object.freeze({json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]}),D=Object.freeze({json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]}),F=Object.freeze({json:[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]}]}),_=Object.freeze({json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]}),$=Object.freeze({json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]}),O=Object.freeze({json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]}]}),M=function(){function e(){var e=[x,w,k,I,C,N,S,R,T,E,A,D,F,_,$,O],t=[].concat.apply([],e.map((function(e){return e.json})));this.opMappers=t.reduce((function(e,t){return e[t.tfOpName]=t,e}),{})}return Object.defineProperty(e,"Instance",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.transformGraph=function(e,t){var n=this;void 0===t&&(t={});var r=[],a=[],s=e.node.reduce((function(e,t){return e[t.name]=n.mapNode(t),t.op.startsWith("Placeholder")&&r.push(e[t.name]),"Const"===t.op&&a.push(e[t.name]),e}),{}),i=[],o=[],u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));var c=Object.keys(s);return c.forEach((function(e){var t=s[e];t.inputNames.forEach((function(e){var n=g(e)[0];t.inputs.push(s[n]),s[n].children.push(t)}))})),0===Object.keys(l).length?c.forEach((function(e){var t=s[e];0===t.children.length&&o.push(t)})):Object.keys(l).forEach((function(e){var t=g(e)[0],n=s[t];null!=n&&(n.signatureKey=l[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((function(e){var t=g(e)[0],n=s[t];n&&(n.signatureKey=u[e],i.push(n))})):i=r,{nodes:s,inputs:i,outputs:o,weights:a,placeholders:r,signature:t}},e.prototype.mapSignatureEntries=function(e){return Object.keys(e||{}).reduce((function(t,n){return t[e[n].name]=n,t}),{})},e.prototype.mapNode=function(e){var t=p(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});var n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((function(e){return e.startsWith("^")?e.substr(1):e})),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((function(e,t){return e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e}),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((function(t,n){var r=n.type,a=void 0;switch(n.type){case"string":void 0===(a=B(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=B(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":void 0===(a=j(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=j(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":void 0===(a=z(e.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(a=z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":void 0===(a=q(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=q(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":void 0===(a=P(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=P(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":void 0===(a=X(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=X(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":void 0===(a=H(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=H(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":void 0===(a=K(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=K(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":void 0===(a=V(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=V(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":void 0===(a=U(e.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(a=U(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: "+n.type+" for op: "+e.op)}return t[n.name]={value:a,type:r},t}),{})),n},e}();function L(e,t){var n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var t=(0,i.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function B(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return null!=a?L(a.s,r):n}function P(e,t,n){var r=e[t];return r?r.b:n}function z(e,t,n){var r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function W(e){switch("string"==typeof e&&(e=r[e]),e){case r.DT_FLOAT:return"float32";case r.DT_INT32:case r.DT_INT64:case r.DT_INT8:case r.DT_UINT8:return"int32";case r.DT_BOOL:return"bool";case r.DT_DOUBLE:return"float32";case r.DT_STRING:return"string";default:return null}}function V(e,t,n){var r=e[t];return r&&r.type?W(r.type):n}function U(e,t,n){var r=e[t];return r&&r.list&&r.list.type?r.list.type.map((function(e){return W(e)})):n}function G(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((function(e){return"number"==typeof e.size?e.size:parseInt(e.size,10)})):[]}function H(e,t,n){var r=e[t];return r&&r.shape?G(r.shape):n}function q(e,t,n){var r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((function(e){return"number"==typeof e?e:parseInt(e,10)})):n}function j(e,t,n,r){void 0===r&&(r=!1);var a=e[t];return a&&a.list&&a.list.s?a.list.s.map((function(e){return L(e,r)})):n}function K(e,t,n){var r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((function(e){return G(e)})):n}function X(e,t,n){var r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var Y=function(){function e(e,t,n){var r=this;this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((function(e){return r.getInput(e)})),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((function(e,t){return e[t]=r.getAttr(t),e}),{}))}return e.prototype.getInput=function(e){return m(e,this.tensorMap,this.context)},e.prototype.getAttr=function(e,t){var n=this.node.rawAttrs[e];if(null!=n.tensor)return m(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return z(this.node.rawAttrs,e,t);if(null!=n.s)return B(this.node.rawAttrs,e,t);if(null!=n.b)return P(this.node.rawAttrs,e,t);if(null!=n.shape)return H(this.node.rawAttrs,e,t);if(null!=n.type)return V(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return q(this.node.rawAttrs,e,t);if(null!=n.list.s)return j(this.node.rawAttrs,e,t);if(null!=n.list.shape)return K(this.node.rawAttrs,e,t);if(null!=n.list.b)return X(this.node.rawAttrs,e,t);if(null!=n.list.type)return U(this.node.rawAttrs,e,t)}return t},e}(),J=function(){function e(t,n,r,a,s,i,o){this.name=t,this.dtype=n,this.maxSize=r,this.elementShape=a,this.identicalElementShapes=s,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.id=e.nextId++}return Object.defineProperty(e.prototype,"closed",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),e.prototype.clearAndClose=function(){this.tensors.forEach((function(e){return e.tensor.dispose()})),this.tensors=[],this.closed_=!0},e.prototype.size=function(){return this.tensors.length},e.prototype.read=function(e){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||e>=this.tensors.length)throw new Error("Tried to read from index "+e+", but array size is: "+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error("TensorArray "+this.name+": Could not read index "+e+" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},e.prototype.readMany=function(e){var t=this;return e.map((function(e){return t.read(e)}))},e.prototype.write=function(e,t){if(this.closed_)throw new Error("TensorArray "+this.name+" has already been closed.");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index "+e+", but array is not resizeable and size is: "+this.maxSize);var n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+",\n          because the value dtype is "+t.dtype+", but TensorArray dtype is "+this.dtype+".");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,"TensorArray "+this.name+": Could not write to TensorArray index "+e+"."),n&&n.read)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been read.");if(n&&n.written)throw new Error("TensorArray "+this.name+": Could not write to TensorArray index "+e+", because it has already been written.");n.tensor=t,n.written=!0,this.tensors[e]=n},e.prototype.writeMany=function(e,t){var n=this;if(e.length!==t.length)throw new Error("TensorArray "+this.name+": could not write multiple tensors,because the index size: "+e.length+" is not the same as tensors size: "+t.length+".");e.forEach((function(e,r){return n.write(e,t[r])}))},e.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but gather requested dtype "+t);if(!e){e=[];for(var n=0;n<this.size();n++)e.push(n)}if(0===e.length)return(0,i.tensor)([],[0].concat(this.elementShape));var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),(0,i.stack)(r,0)},e.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but concat requested dtype "+e);if(0===this.size())return(0,i.tensor)([],[0].concat(this.elementShape));for(var t=[],n=0;n<this.size();n++)t.push(n);var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,"TensorArray shape mismatch: tensor array shape ("+this.elementShape+") vs first tensor shape ("+r[0].shape+")"),(0,i.concat)(r,0)},e.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: "+e.length+" vs. "+t.shape[0]);var n=Math.max.apply(Math,e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size ("+n+"  vs. "+this.maxSize+")");this.writeMany(e,(0,i.unstack)(t,0))},e.prototype.split=function(e,t){var n=this;if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is "+this.dtype+" but tensor has dtype "+t.dtype);var r=0,a=e.map((function(e){return r+=e}));if(r!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        "+r+", and tensor's shape is: "+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths ("+this.maxSize+" vs. "+e.length+"), and the TensorArray is not marked as dynamically resizeable");var s=0===r?0:t.size/r,o=[];(0,i.tidy)((function(){t=t.reshape([1,r,s]);for(var u=0;u<e.length;++u){var l=[0,0===u?0:a[u-1],0],c=[1,e[u],s];o[u]=(0,i.slice)(t,l,c).reshape(n.elementShape)}return o}));for(var u=[],l=0;l<e.length;l++)u[l]=l;this.writeMany(u,o)},e.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,n){void 0===n&&(n=""),i.util.assert(this.shapesEqualAllowUndefinedSize(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))},e.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(-1!==e[n]&&-1!==t[n]&&e[n]!==t[n])return!1;return!0},e.nextId=0,e}();function Z(e,t,n){var r=function(e,t,n){switch(e.category){case"arithmetic":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[(0,i.add)(f("a",e,t,n),f("b",e,t,n))];case"AddN":return[(0,i.addN)(f("tensors",e,t,n))];case"FloorMod":case"Mod":return[(0,i.mod)(f("a",e,t,n),f("b",e,t,n))];case"Mul":return[(0,i.mul)(f("a",e,t,n),f("b",e,t,n))];case"RealDiv":case"Div":return[(0,i.div)(f("a",e,t,n),f("b",e,t,n))];case"DivNoNan":return[(0,i.divNoNan)(f("a",e,t,n),f("b",e,t,n))];case"FloorDiv":return[(0,i.floorDiv)(f("a",e,t,n),f("b",e,t,n))];case"Sub":return[(0,i.sub)(f("a",e,t,n),f("b",e,t,n))];case"Minimum":return[(0,i.minimum)(f("a",e,t,n),f("b",e,t,n))];case"Maximum":return[(0,i.maximum)(f("a",e,t,n),f("b",e,t,n))];case"Pow":return[(0,i.pow)(f("a",e,t,n),f("b",e,t,n))];case"SquaredDifference":return[(0,i.squaredDifference)(f("a",e,t,n),f("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"basic_math":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Abs":case"ComplexAbs":return[(0,i.abs)(f("x",e,t,n))];case"Acos":return[(0,i.acos)(f("x",e,t,n))];case"Acosh":return[(0,i.acosh)(f("x",e,t,n))];case"Asin":return[(0,i.asin)(f("x",e,t,n))];case"Asinh":return[(0,i.asinh)(f("x",e,t,n))];case"Atan":return[(0,i.atan)(f("x",e,t,n))];case"Atan2":return[(0,i.atan2)(f("x",e,t,n),f("y",e,t,n))];case"Atanh":return[(0,i.atanh)(f("x",e,t,n))];case"Ceil":return[(0,i.ceil)(f("x",e,t,n))];case"Complex":return[(0,i.complex)(f("real",e,t,n),f("imag",e,t,n))];case"Cos":return[(0,i.cos)(f("x",e,t,n))];case"Cosh":return[(0,i.cosh)(f("x",e,t,n))];case"Elu":return[(0,i.elu)(f("x",e,t,n))];case"Erf":return[(0,i.erf)(f("x",e,t,n))];case"Exp":return[(0,i.exp)(f("x",e,t,n))];case"Expm1":return[(0,i.expm1)(f("x",e,t,n))];case"Floor":return[(0,i.floor)(f("x",e,t,n))];case"Log":return[(0,i.log)(f("x",e,t,n))];case"Log1p":return[(0,i.log1p)(f("x",e,t,n))];case"Imag":return[(0,i.imag)(f("x",e,t,n))];case"Neg":return[(0,i.neg)(f("x",e,t,n))];case"Reciprocal":return[(0,i.reciprocal)(f("x",e,t,n))];case"Real":return[(0,i.real)(f("x",e,t,n))];case"Relu":return[(0,i.relu)(f("x",e,t,n))];case"Round":return[(0,i.round)(f("x",e,t,n))];case"Selu":return[(0,i.selu)(f("x",e,t,n))];case"Sigmoid":return[(0,i.sigmoid)(f("x",e,t,n))];case"Sin":return[(0,i.sin)(f("x",e,t,n))];case"Sign":return[(0,i.sign)(f("x",e,t,n))];case"Sinh":return[(0,i.sinh)(f("x",e,t,n))];case"Softplus":return[(0,i.softplus)(f("x",e,t,n))];case"Sqrt":return[(0,i.sqrt)(f("x",e,t,n))];case"Square":return[(0,i.square)(f("x",e,t,n))];case"Tanh":return[(0,i.tanh)(f("x",e,t,n))];case"Tan":return[(0,i.tan)(f("x",e,t,n))];case"Relu6":case"ClipByValue":return[(0,i.clipByValue)(f("x",e,t,n),f("clipValueMin",e,t,n),f("clipValueMax",e,t,n))];case"Rsqrt":return[(0,i.rsqrt)(m(e.inputNames[0],t,n))];case"Prod":return[(0,i.prod)(f("x",e,t,n),f("axes",e,t,n))];case"LeakyRelu":return[(0,i.leakyRelu)(f("x",e,t,n),f("alpha",e,t,n))];case"Prelu":return[(0,i.prelu)(f("x",e,t,n),f("alpha",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"control":return function(e,t,n){return u(void 0,void 0,void 0,(function(){var r,a,s,o,u,c,h,p,d,g,v,y,b,x,w,k,I,C,N,S,E,T,R,A,D,F,_,$,O,M,L,B,P,z,W;return l(this,(function(l){switch(l.label){case 0:switch(e.op){case"LoopCond":return[3,1];case"Switch":return[3,2];case"Merge":return[3,4];case"Enter":return[3,5];case"Exit":return[3,6];case"NextIteration":return[3,7];case"TensorArrayV3":return[3,8];case"TensorArrayWriteV3":return[3,9];case"TensorArrayReadV3":return[3,10];case"TensorArrayGatherV3":return[3,11];case"TensorArrayScatterV3":return[3,12];case"TensorArrayConcatV3":return[3,13];case"TensorArraySplitV3":return[3,14];case"TensorArraySizeV3":return[3,15];case"TensorArrayCloseV3":return[3,16]}return[3,17];case 1:return[2,[f("pred",e,t,n).clone()]];case 2:return r=f("pred",e,t,n),a=f("data",e,t,n),[4,r.data()];case 3:return[2,l.sent()[0]?[void 0,a.clone()]:[a.clone(),void 0]];case 4:return[2,(s=e.inputNames.find((function(e){return void 0!==m(e,t,n)})))?[m(s,t,n).clone()]:void 0];case 5:return o=f("frameName",e,t,n),u=f("tensor",e,t,n),n.enterFrame(o),[2,[u.clone()]];case 6:return c=f("tensor",e,t,n),n.exitFrame(),[2,[c.clone()]];case 7:return h=f("tensor",e,t,n),n.nextIteration(),[2,[h.clone()]];case 8:return p=f("size",e,t,n),d=f("dtype",e,t,n),g=f("elementShape",e,t,n),v=f("dynamicSize",e,t,n),y=f("clearAfterRead",e,t,n),b=f("identicalElementShapes",e,t,n),x=f("name",e,t,n),w=new J(x,d,p,g,b,v,y),n.addTensorArray(w),[2,[(0,i.scalar)(w.id),(0,i.scalar)(1)]];case 9:return k=f("tensorArrayId",e,t,n),I=f("index",e,t,n),C=f("tensor",e,t,n),n.getTensorArray(k).write(I,C),[2,[(0,i.scalar)(1)]];case 10:return N=f("tensorArrayId",e,t,n),S=f("index",e,t,n),[2,[n.getTensorArray(N).read(S)]];case 11:return E=f("tensorArrayId",e,t,n),T=f("indices",e,t,n),R=f("dtype",e,t,n),[2,[n.getTensorArray(E).gather(T,R)]];case 12:return A=f("tensorArrayId",e,t,n),D=f("indices",e,t,n),F=f("tensor",e,t,n),n.getTensorArray(A).scatter(D,F),[2,[(0,i.scalar)(1)]];case 13:return _=f("tensorArrayId",e,t,n),$=n.getTensorArray(_),O=f("dtype",e,t,n),[2,[$.concat(O)]];case 14:return M=f("tensorArrayId",e,t,n),L=f("tensor",e,t,n),B=f("lengths",e,t,n),n.getTensorArray(M).split(B,L),[2,[(0,i.scalar)(1)]];case 15:return P=f("tensorArrayId",e,t,n),z=n.getTensorArray(P),[2,[(0,i.scalar)(z.size(),"int32")]];case 16:return W=f("tensorArrayId",e,t,n),n.getTensorArray(W).clearAndClose(),[2,[(0,i.scalar)(0)]];case 17:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"convolution":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Conv1D":var r=f("stride",e,t,n),a=f("pad",e,t,n),s=f("dataFormat",e,t,n).toUpperCase(),o=f("dilation",e,t,n);return[(0,i.conv1d)(f("x",e,t,n),f("filter",e,t,n),r,a,s,o)];case"Conv2D":r=f("strides",e,t,n),a=f("pad",e,t,n),s=f("dataFormat",e,t,n).toUpperCase();var u=f("dilations",e,t,n);return[(0,i.conv2d)(f("x",e,t,n),f("filter",e,t,n),[r[1],r[2]],a,s,[u[1],u[2]])];case"_FusedConv2D":case"FusedDepthwiseConv2dNative":var l=f("fusedOps",e,t,n),c=l[0],h=l[1],p="biasadd"===c,d="prelu"===h,m="fusedbatchnorm"===c,g=f("numArgs",e,t,n);if(p){if(d&&2!==g)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!d&&1!==g)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(m)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");r=f("strides",e,t,n),a=f("pad",e,t,n),s=f("dataFormat",e,t,n).toUpperCase(),u=f("dilations",e,t,n);var v=f("args",e,t,n),y=v[0],b=v[1];return[("_FusedConv2D"===e.op?i.fused.conv2d:i.fused.depthwiseConv2d)({x:f("x",e,t,n),filter:f("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[u[1],u[2]],bias:y,activation:h,preluActivationWeights:b})];case"Conv2DBackpropInput":case"Conv2dTranspose":var x=f("outputShape",e,t,n);return r=f("strides",e,t,n),a=f("pad",e,t,n),[(0,i.conv2dTranspose)(f("x",e,t,n),f("filter",e,t,n),x,[r[1],r[2]],a)];case"DepthwiseConv2dNative":case"DepthwiseConv2d":return r=f("strides",e,t,n),a=f("pad",e,t,n),u=f("dilations",e,t,n),s=f("dataFormat",e,t,n).toUpperCase(),[(0,i.depthwiseConv2d)(f("input",e,t,n),f("filter",e,t,n),[r[1],r[2]],a,s,[u[1],u[2]])];case"Conv3D":return r=f("strides",e,t,n),a=f("pad",e,t,n),s=f("dataFormat",e,t,n).toUpperCase(),u=f("dilations",e,t,n),[(0,i.conv3d)(f("x",e,t,n),f("filter",e,t,n),[r[1],r[2],r[3]],a,s,[u[1],u[2],u[3]])];case"AvgPool":r=f("strides",e,t,n),a=f("pad",e,t,n);var w=f("kernelSize",e,t,n);return[(0,i.avgPool)(f("x",e,t,n),[w[1],w[2]],[r[1],r[2]],a)];case"MaxPool":return r=f("strides",e,t,n),a=f("pad",e,t,n),w=f("kernelSize",e,t,n),[(0,i.maxPool)(f("x",e,t,n),[w[1],w[2]],[r[1],r[2]],a)];case"MaxPoolWithArgmax":r=f("strides",e,t,n),a=f("pad",e,t,n),w=f("kernelSize",e,t,n);var k=f("includeBatchInIndex",e,t,n),I=(0,i.maxPoolWithArgmax)(f("x",e,t,n),[w[1],w[2]],[r[1],r[2]],a,k);return[I.result,I.indexes];case"AvgPool3D":return r=f("strides",e,t,n),a=f("pad",e,t,n),w=f("kernelSize",e,t,n),[(0,i.avgPool3d)(f("x",e,t,n),[w[1],w[2],w[3]],[r[1],r[2],r[3]],a)];case"MaxPool3D":return r=f("strides",e,t,n),a=f("pad",e,t,n),w=f("kernelSize",e,t,n),[(0,i.maxPool3d)(f("x",e,t,n),[w[1],w[2],w[3]],[r[1],r[2],r[3]],a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"creation":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Fill":var r=f("shape",e,t,n),a=f("dtype",e,t,n),s=f("value",e,t,n);return[(0,i.fill)(r,s,a)];case"LinSpace":var o=f("start",e,t,n),u=f("stop",e,t,n),l=f("num",e,t,n);return[(0,i.linspace)(o,u,l)];case"Multinomial":var c=f("logits",e,t,n),h=f("numSamples",e,t,n),p=f("seed",e,t,n);return[(0,i.multinomial)(c,h,p)];case"OneHot":var d=f("indices",e,t,n),m=f("depth",e,t,n),g=f("onValue",e,t,n),v=f("offValue",e,t,n);return[(0,i.oneHot)(d,m,g,v)];case"Ones":return[(0,i.ones)(f("shape",e,t,n),f("dtype",e,t,n))];case"OnesLike":return[(0,i.onesLike)(f("x",e,t,n))];case"RandomUniform":return[(0,i.randomUniform)(f("shape",e,t,n),f("minval",e,t,n),f("maxval",e,t,n),f("dtype",e,t,n))];case"Range":o=f("start",e,t,n);var y=f("stop",e,t,n),b=f("step",e,t,n);return[(0,i.range)(o,y,b,f("dtype",e,t,n))];case"TruncatedNormal":r=f("shape",e,t,n);var x=f("mean",e,t,n),w=f("stdDev",e,t,n);return p=f("seed",e,t,n),[(0,i.truncatedNormal)(r,x,w,f("dtype",e,t,n),p)];case"Zeros":return[(0,i.zeros)(f("shape",e,t,n),f("dtype",e,t,n))];case"ZerosLike":return[(0,i.zerosLike)(f("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"dynamic":return function(e,t,n){return u(void 0,void 0,void 0,(function(){var r,a,s,o,u,c,h,p;return l(this,(function(l){switch(l.label){case 0:switch(e.op){case"NonMaxSuppressionV5":case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":return[3,1];case"Where":return[3,5];case"ListDiff":return[3,7]}return[3,8];case 1:return r=f("boxes",e,t,n),a=f("scores",e,t,n),s=f("maxOutputSize",e,t,n),o=f("iouThreshold",e,t,n),u=f("scoreThreshold",e,t,n),"NonMaxSuppressionV5"!==e.op?[3,3]:(c=f("softNmsSigma",e,t,n),[4,i.image.nonMaxSuppressionWithScoreAsync(r,a,s,o,u,c)]);case 2:return[2,[(p=l.sent()).selectedIndices,p.selectedScores]];case 3:return[4,i.image.nonMaxSuppressionAsync(r,a,s,o,u)];case 4:return[2,[l.sent()]];case 5:return h=f("condition",e,t,n).asType("bool"),[4,(0,i.whereAsync)(h)];case 6:return p=[l.sent()],h.dispose(),[2,p];case 7:return[2,(0,i.setdiff1dAsync)(f("x",e,t,n),f("y",e,t,n))];case 8:throw TypeError("Node type "+e.op+" is not implemented")}}))}))}(e,t,n);case"evaluation":return(0,i.tidy)((function(){return function(e,t,n){if("TopKV2"===e.op){var r=f("x",e,t,n),a=f("k",e,t,n),s=f("sorted",e,t,n),o=(0,i.topk)(r,a,s);return[o.values,o.indices]}throw TypeError("Node type "+e.op+" is not implemented")}(e,t,n)}));case"image":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"ResizeBilinear":var r=f("images",e,t,n),a=f("size",e,t,n),s=f("alignCorners",e,t,n);return[i.image.resizeBilinear(r,[a[0],a[1]],s)];case"ResizeNearestNeighbor":return r=f("images",e,t,n),a=f("size",e,t,n),s=f("alignCorners",e,t,n),[i.image.resizeNearestNeighbor(r,[a[0],a[1]],s)];case"CropAndResize":var o=f("image",e,t,n),u=f("boxes",e,t,n),l=f("boxInd",e,t,n),c=f("cropSize",e,t,n),h=f("method",e,t,n),p=f("extrapolationValue",e,t,n);return[i.image.cropAndResize(o,u,l,c,h,p)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"graph":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":var r=f("default",e,t,n);return[m(e.name,t,n)||r];case"Placeholder":return[m(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[f("x",e,t,n).clone()];case"IdentityN":return f("x",e,t,n).map((function(e){return e.clone()}));case"Shape":return[(0,i.tensor1d)(f("x",e,t,n).shape,"int32")];case"ShapeN":return f("x",e,t,n).map((function(e){return(0,i.tensor1d)(e.shape)}));case"Size":return[(0,i.scalar)(f("x",e,t,n).size,"int32")];case"Rank":return[(0,i.scalar)(f("x",e,t,n).rank,"int32")];case"NoOp":return[(0,i.scalar)(1)];case"Print":var a=f("x",e,t,n),s=f("data",e,t,n),o=f("message",e,t,n),u=f("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(var l=0;l<s.length;l++)console.log(Array.prototype.slice.call(s[l].dataSync()).slice(0,u));return[a];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"logical":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Equal":return[(0,i.equal)(f("a",e,t,n),f("b",e,t,n))];case"NotEqual":return[(0,i.notEqual)(f("a",e,t,n),f("b",e,t,n))];case"Greater":return[(0,i.greater)(f("a",e,t,n),f("b",e,t,n))];case"GreaterEqual":return[(0,i.greaterEqual)(f("a",e,t,n),f("b",e,t,n))];case"Less":return[(0,i.less)(f("a",e,t,n),f("b",e,t,n))];case"LessEqual":return[(0,i.lessEqual)(f("a",e,t,n),f("b",e,t,n))];case"LogicalAnd":return[(0,i.logicalAnd)(f("a",e,t,n),f("b",e,t,n))];case"LogicalNot":return[(0,i.logicalNot)(f("a",e,t,n))];case"LogicalOr":return[(0,i.logicalOr)(f("a",e,t,n),f("b",e,t,n))];case"Select":case"SelectV2":return[(0,i.where)(f("condition",e,t,n),f("a",e,t,n),f("b",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"matrices":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[(0,i.matMul)(f("a",e,t,n),f("b",e,t,n),f("transposeA",e,t,n),f("transposeB",e,t,n))];case"Transpose":return[(0,i.transpose)(f("x",e,t,n),f("perm",e,t,n))];case"_FusedMatMul":var r=f("fusedOps",e,t,n),a=r[0],s=r[1],o="biasadd"===a,u="prelu"===s,l=f("numArgs",e,t,n);if(o){if(u&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!u&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}var c=f("args",e,t,n),h=c[0],p=c[1];return[i.fused.matMul({a:f("a",e,t,n),b:f("b",e,t,n),transposeA:f("transposeA",e,t,n),transposeB:f("transposeB",e,t,n),bias:h,activation:s,preluActivationWeights:p})];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"normalization":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[(0,i.batchNorm)(f("x",e,t,n),f("mean",e,t,n),f("variance",e,t,n),f("offset",e,t,n),f("scale",e,t,n),f("epsilon",e,t,n))];case"LRN":return[(0,i.localResponseNormalization)(f("x",e,t,n),f("radius",e,t,n),f("bias",e,t,n),f("alpha",e,t,n),f("beta",e,t,n))];case"Softmax":return[(0,i.softmax)(f("x",e,t,n))];case"LogSoftmax":return[(0,i.logSoftmax)(f("x",e,t,n))];case"SparseToDense":return[(0,i.sparseToDense)(f("sparseIndices",e,t,n),f("outputShape",e,t,n),f("sparseValues",e,t,n),f("defaultValue",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"reduction":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Max":var r=f("axis",e,t,n),a=f("keepDims",e,t,n);return[(0,i.max)(f("x",e,t,n),r,a)];case"Mean":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.mean)(f("x",e,t,n),r,a)];case"Min":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.min)(f("x",e,t,n),r,a)];case"Sum":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.sum)(f("x",e,t,n),r,a)];case"All":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.all)(f("x",e,t,n),r,a)];case"Any":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.any)(f("x",e,t,n),r,a)];case"ArgMax":return r=f("axis",e,t,n),[(0,i.argMax)(f("x",e,t,n),r)];case"ArgMin":return r=f("axis",e,t,n),[(0,i.argMin)(f("x",e,t,n),r)];case"Prod":return r=f("axis",e,t,n),a=f("keepDims",e,t,n),[(0,i.prod)(f("x",e,t,n),r,a)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"slice_join":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"ConcatV2":case"Concat":var r=f("n",e,t,n),a=f("axis",e,t,n),s=f("tensors",e,t,n);return s=s.slice(0,r),[(0,i.concat)(s,a)];case"GatherV2":case"Gather":a=f("axis",e,t,n);var o=f("x",e,t,n),u=f("indices",e,t,n);return[(0,i.gather)(o,u.asType("int32"),a)];case"ReverseV2":case"Reverse":return a=f("axis",e,t,n),o=f("x",e,t,n),[(0,i.reverse)(o,a)];case"Slice":var l=f("begin",e,t,n),c=f("size",e,t,n);return[(0,i.slice)(f("x",e,t,n),l,c)];case"StridedSlice":l=f("begin",e,t,n);var h=f("end",e,t,n),p=f("strides",e,t,n),d=f("beginMask",e,t,n),m=f("endMask",e,t,n),g=f("ellipsisMask",e,t,n),v=f("newAxisMask",e,t,n),y=f("shrinkAxisMask",e,t,n),b=f("x",e,t,n);if(1===l.length&&b.shape.length>1)for(var x=1;x<b.shape.length;x++)l.push(0),h.push(b.shape[x]),p.push(p[0]);return[(0,i.stridedSlice)(b,l,h,p,d,m,g,v,y)];case"Pack":return(0,i.tidy)((function(){var r=f("axis",e,t,n),a=f("tensors",e,t,n),s=a[0].shape,o=a[0].squeeze().shape,u=a.map((function(e){var t=i.util.arraysEqual(e.shape,s);if(!t&&!i.util.arraysEqual(e.squeeze().shape,o))throw new Error("the input tensors shape does not match");return t?e:e.reshape(s)}));return[(0,i.stack)(u,r)]}));case"Unpack":return(0,i.tidy)((function(){var r=f("axis",e,t,n),a=f("tensor",e,t,n);return(0,i.unstack)(a,r)}));case"Tile":var w=f("reps",e,t,n);return[(0,i.tile)(f("x",e,t,n),w)];case"Split":case"SplitV":a=f("axis",e,t,n);var k=f("numOrSizeSplits",e,t,n);return(0,i.split)(f("x",e,t,n),k,a);case"ScatterNd":u=f("indices",e,t,n);var I=f("values",e,t,n),C=f("shape",e,t,n);return[(0,i.scatterND)(u,I,C)];case"GatherNd":var N=f("x",e,t,n);return u=f("indices",e,t,n),[(0,i.gatherND)(N,u)];case"SparseToDense":u=f("sparseIndices",e,t,n),C=f("outputShape",e,t,n);var S=f("sparseValues",e,t,n),E=f("defaultValue",e,t,n);return[(0,i.sparseToDense)(u,S,C,S.dtype===E.dtype?E:E.asType(S.dtype))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"spectral":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"FFT":return[(0,i.fft)(f("x",e,t,n))];case"IFFT":return[(0,i.ifft)(f("x",e,t,n))];case"RFFT":return[(0,i.rfft)(f("x",e,t,n))];case"IRFFT":return[(0,i.irfft)(f("x",e,t,n))];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"transformation":return(0,i.tidy)((function(){return function(e,t,n){switch(e.op){case"Cast":return[(0,i.cast)(f("x",e,t,n),f("dtype",e,t,n))];case"ExpandDims":var r=f("axis",e,t,n);return[(0,i.expandDims)(f("x",e,t,n),r)];case"Squeeze":return r=f("axis",e,t,n),[(0,i.squeeze)(f("x",e,t,n),r)];case"Reshape":return[(0,i.reshape)(f("x",e,t,n),f("shape",e,t,n))];case"PadV2":case"Pad":return[(0,i.pad)(f("x",e,t,n),b(f("padding",e,t,n),2),f("constantValue",e,t,n))];case"SpaceToBatchND":var a=f("blockShape",e,t,n),s=b(f("paddings",e,t,n),2);return[(0,i.spaceToBatchND)(f("x",e,t,n),a,s)];case"BatchToSpaceND":a=f("blockShape",e,t,n);var o=b(f("crops",e,t,n),2);return[(0,i.batchToSpaceND)(f("x",e,t,n),a,o)];case"DepthToSpace":var u=f("blockSize",e,t,n),l=f("dataFormat",e,t,n).toUpperCase();return[(0,i.depthToSpace)(f("x",e,t,n),u,l)];default:throw TypeError("Node type "+e.op+" is not implemented")}}(e,t,n)}));case"custom":var r=p(e.op);if(r&&r.customExecutor)return r.customExecutor(new Y(e,t,n));throw TypeError("Custom op "+e.op+" is not registered.");default:throw TypeError("Unknown op '"+e.op+"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}}(e,t,n);return r instanceof Promise?r.then((function(e){return[].concat(e)})):[].concat(r)}var Q=function(){function e(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return e.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(e.prototype,"currentContext",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextId",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"currentContextIds",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),e.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e},e.prototype.contextIdforContexts=function(e){return e?e.map((function(e){return 0===e.id&&0===e.iterationId?"":e.frameName+"-"+e.iterationId})).join("/"):""},e.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},e.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},e.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},e.prototype.getWeight=function(e){return this.weightMap[e]},e.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},e.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},e}();function ee(e,t,n){for(var r=new Set,a=[],s=null,i=null,o=new Set,u=Object.keys(e).map((function(e){return y(e)[0]})),l=t.slice();l.length>0;){var c=l.pop();(re(c)||ae(c))&&null==s&&(i=(s=c).children.map((function(e){return e.name})).filter((function(e){return r.has(e)}))),r.add(c.name),null==n[c.name]&&-1===u.indexOf(c.name)&&(0!==c.inputs.length?c.inputs.forEach((function(e){o.has(e.name)||(o.add(e.name),l.push(e))})):a.push(c.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:s,syncInputs:i}}var te=["Switch","Merge","Enter","Exit","NextIteration"],ne=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"];function re(e){return te.indexOf(e.op)>=0}function ae(e){return ne.indexOf(e.op)>=0}var se=function(){function e(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._outputs=e.outputs,this._inputs=e.inputs,this._signature=e.signature}return Object.defineProperty(e.prototype,"weightMap",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map((function(t){return e[t].map((function(e){return e.id}))}));this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this._inputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this._outputs.map((function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this._inputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this._outputs.map((function(e){return e.signatureKey||e.name}))},enumerable:!0,configurable:!0}),e.prototype.getCompilationKey=function(e,t){var n=e.map((function(e){return e.name})).sort(),r=t.map((function(e){return e.name})).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)},e.prototype.compile=function(e,t){var n=ee(e,t,this.weightMap),r=n.missingInputs,a=n.dynamicNode,s=n.syncInputs;if(null!=a)throw new Error("This execution contains the node '"+a.name+"', which has the dynamic op '"+a.op+"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs ["+s+"]");if(r.length>0){var i=t.map((function(e){return e.name})),o=Object.keys(e);throw new Error("Cannot compute the outputs ["+i+"] from the provided inputs ["+o+"]. Missing the following inputs: ["+r+"]")}return function(e,t,n){var r=n.usedNodes,a=n.inputs,s=[];Object.keys(a).map((function(e){return y(e)[0]})).map((function(t){return e.nodes[t]})).forEach((function(e){r.has(e.name)&&s.push(e)})),e.weights.forEach((function(e){r.has(e.name)&&s.push(e)}));for(var i=new Set,o=[];s.length>0;){var u=s.pop();i.add(u.name),t[u.name]||o.push(u),u.children.forEach((function(e){!i.has(e.name)&&r.has(e.name)&&e.inputs.every((function(e){return i.has(e.name)}))&&s.push(e)}))}return o}(this.graph,this.weightMap,n)},e.prototype.execute=function(e,t){var n=this;e=this.mapInputs(e);var r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);var a=r.map((function(e){return n.graph.nodes[y(e)[0]]})),s=t.map((function(e){return n.graph.nodes[y(e)[0]]})),u=this.getCompilationKey(a,s),l=this.compiledMap.get(u);null==l&&(l=this.compile(e,s),this.compiledMap.set(u,l));var c={};return(0,i.tidy)((function(){var r=new Q(n._weightMap,c),a=o({},n.weightMap);Object.keys(e).forEach((function(t){var n=y(t),r=n[0],s=[];s[n[1]]=e[t],a[r]=s}));for(var s=n.getFrozenTensorIds(a),i={},u=0;u<l.length;u++){var h=l[u];if(!a[h.name]){var p=Z(h,a,r);if(p instanceof Promise)throw new Error("The execution of the op '"+h.op+"' returned a promise. Please use model.executeAsync() instead.");a[h.name]=p,n.checkTensorForDisposal(h.name,h,a,r,s,t,i)}}return t.map((function(e){return m(e,a,r)}))}))},e.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map((function(t){return e[t]})).map((function(e){return e.map((function(e){return e.id}))})));return new Set(t)},e.prototype.checkTensorForDisposal=function(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((function(e){null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((function(e){if("control"!==e.category){var t=function(e,t,n){return t[v(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((function(e){if(e&&!a.has(e.id)){var t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))},e.prototype.executeAsync=function(e,t){return u(this,void 0,void 0,(function(){var n,r,a,s,i,o,u=this;return l(this,(function(l){switch(l.label){case 0:return e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t),n={},r=new Q(this._weightMap,n),[4,this.executeWithControlFlow(e,r,t)];case 1:return a=l.sent(),s=t.map((function(e){return m(e,a,r)})),i=new Set(s.map((function(e){return e.id}))),o=new Set(Object.keys(e).map((function(t){return e[t].id}))),Object.keys(a).forEach((function(e){a[e].forEach((function(e){!e||e.isDisposed||i.has(e.id)||o.has(e.id)||-1!==u.weightIds.indexOf(e.id)||e.dispose()}))})),[2,s]}}))}))},e.prototype.executeWithControlFlow=function(e,t,n){return u(this,void 0,void 0,(function(){var r,a,s,i,u,c,h,p,d,f,g,v,b,x,w,k,I=this;return l(this,(function(l){switch(l.label){case 0:r=Object.keys(e),a=r.map((function(e){return I.graph.nodes[y(e)[0]]})),s=n.map((function(e){return I.graph.nodes[y(e)[0]]})),i=ee(e,s,this.weightMap),u=i.usedNodes,c=i.missingInputs,h=i.dynamicNode,p=i.syncInputs,d=a.concat(this.graph.weights).map((function(e){return{node:e,contexts:t.currentContext}})),f=o({},this.weightMap),Object.keys(e).forEach((function(t){var n=y(t),r=n[0],a=[];a[n[1]]=e[t],f[r]=a})),g={},v=this.getFrozenTensorIds(f),b={},l.label=1;case 1:return d.length>0?(x=this.processStack(a,d,t,f,b,v,n,g,u),[4,Promise.all(x)]):[3,3];case 2:return l.sent(),[3,1];case 3:if(null==h&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead."),(w=s.filter((function(e){return!re(e)&&!m(e.name,f,t)})).map((function(e){return e.name}))).length>0)throw k="",null!=h&&(k="Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs ["+p+"]"),new Error("Cannot compute the outputs ["+w+"] from the provided inputs ["+r+"]. Consider providing the following inputs: ["+c+"]. "+k);return[2,f]}}))}))},e.prototype.processStack=function(e,t,n,r,a,s,i,o,u){for(var l=this,c=[],h=function(){var h=t.pop();n.currentContext=h.contexts;var d="";if("Enter"===h.node.op&&f("isConstant",h.node,r,n)&&(d=g(h.node.name,n)[0]),-1===e.indexOf(h.node)){var m=Z(h.node,r,n);d||(d=g(h.node.name,n)[0]);var v=n.currentContext;m instanceof Promise?c.push(m.then((function(e){return r[d]=e,n.currentContext=v,l.checkTensorForDisposal(d,h.node,r,n,s,i,o),l.processChildNodes(h.node,t,n,r,a,u),e}))):(r[d]=m,p.checkTensorForDisposal(d,h.node,r,n,s,i,o),p.processChildNodes(h.node,t,n,r,a,u))}else p.processChildNodes(h.node,t,n,r,a,u)},p=this;t.length>0;)h();return c},e.prototype.processChildNodes=function(e,t,n,r,a,s){e.children.forEach((function(e){var i=g(e.name,n)[0];!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((function(e){return!!m(e,r,n)}))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((function(e){return!!m(e,r,n)}))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))},e.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach((function(t){return e.weightMap[t].forEach((function(e){return e.dispose()}))}))},e.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach((function(n){var r=e[n],a=y(n)[0],s=t.graph.nodes[a];if(s.attrParams.shape&&s.attrParams.shape.value){var o=s.attrParams.shape.value,u=o.length===r.shape.length&&r.shape.every((function(e,t){return-1===o[t]||o[t]===e}));i.util.assert(u,(function(){return"The shape of dict['"+s.name+"'] provided in model.execute(dict) must be ["+o+"], but was ["+r.shape+"]"}))}s.attrParams.dtype&&s.attrParams.dtype.value&&i.util.assert(r.dtype===s.attrParams.dtype.value,(function(){return"The dtype of dict['"+s.name+"'] provided in model.execute(dict) must be "+s.attrParams.dtype.value+", but was "+r.dtype}))}))},e.prototype.mapInputs=function(e){var t={};for(var n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t},e.prototype.checkInputs=function(e){var t=this,n=Object.keys(e).filter((function(e){var n=y(e)[0];return null==t.graph.nodes[n]}));if(n.length>0)throw new Error("The dict provided in model.execute(dict) has keys: ["+n+"] that are not part of graph")},e.prototype.mapOutputs=function(e){var t=this;return e.map((function(e){return null!=t._signature&&null!=t._signature.outputs&&null!=t._signature.outputs[e]?t._signature.outputs[e].name:e}),{})},e.prototype.checkOutputs=function(e){var t=this;e.forEach((function(e){var n=y(e)[0];if(!t.graph.nodes[n])throw new Error("The output '"+e+"' is not found in the graph")}))},e}(),ie=function(){function e(e,t){void 0===t&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={})}return Object.defineProperty(e.prototype,"modelVersion",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputNodes",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputNodes",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"inputs",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"outputs",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"weights",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),e.prototype.findIOHandler=function(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=i.io.browserHTTPRequest(e,this.loadOptions);else{var t=i.io.getLoadHandlers(e,this.loadOptions.onProgress);if(0===t.length)t.push(i.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one ("+t.length+") load handlers for URL '"+[e]+"'");this.handler=t[0]}},e.prototype.load=function(){return u(this,void 0,void 0,(function(){var e,t,n,r;return l(this,(function(a){switch(a.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");return e=this,[4,this.handler.load()];case 1:return e.artifacts=a.sent(),t=this.artifacts.modelTopology,n={},null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=t.versions.producer+"."+t.versions.minConsumer,r=i.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs),this.executor=new se(M.Instance.transformGraph(t,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),[2,!0]}}))}))},e.prototype.save=function(e,t){return u(this,void 0,void 0,(function(){var t;return l(this,(function(n){if("string"==typeof e){if(0===(t=i.io.getSaveHandlers(e)).length)throw new Error("Cannot find any save handlers for URL '"+e+"'");if(t.length>1)throw new Error("Found more than one ("+t.length+") save handlers for URL '"+e+"'");e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return[2,e.save(this.artifacts)]}))}))},e.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},e.prototype.normalizeInputs=function(e){if(!(e instanceof i.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error("Input tensor count mismatch,the graph model has "+this.inputNodes.length+" placeholders, while there are "+e.length+" input tensors.");return this.inputNodes.reduce((function(t,n,r){return t[n]=e[r],t}),{})},e.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},e.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var n=this.executor.execute(e,t);return n.length>1?n:n[0]},e.prototype.executeAsync=function(e,t){return u(this,void 0,void 0,(function(){var n;return l(this,(function(r){switch(r.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(n=r.sent()).length>1?n:n[0]]}}))}))},e.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce((function(t,n){return t[n]=[e[n]],t}),{})},e.prototype.dispose=function(){this.executor.dispose()},e}();function oe(e,t){return void 0===t&&(t={}),u(this,void 0,void 0,(function(){var n;return l(this,(function(r){switch(r.label){case 0:if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");return null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file"),[4,(n=new ie(e,t)).load()];case 1:return r.sent(),[2,n]}}))}))}var ue="1.7.4"},75:(e,t,n)=>{"use strict";n.r(t),n.d(t,{AdadeltaOptimizer:()=>md,AdagradOptimizer:()=>gd,AdamOptimizer:()=>vd,AdamaxOptimizer:()=>yd,Add:()=>gr,AddN:()=>vr,BroadcastTo:()=>Cr,DataStorage:()=>as,Div:()=>yr,ENV:()=>c,Environment:()=>o,FromPixels:()=>Rr,FusedBatchNorm:()=>br,Identity:()=>Sr,KernelBackend:()=>ss,MaxPoolWithArgmax:()=>Ar,MomentumOptimizer:()=>xd,NonMaxSuppressionV5:()=>Ir,OneHot:()=>Nr,Optimizer:()=>fd,PadV2:()=>Tr,RMSPropOptimizer:()=>wd,Rank:()=>we,Reduction:()=>eh,SGDOptimizer:()=>bd,Square:()=>wr,SquaredDifference:()=>xr,Tensor:()=>xe,TensorBuffer:()=>ge,Tile:()=>Er,Transpose:()=>kr,Variable:()=>Se,abs:()=>Or,acos:()=>Mr,acosh:()=>Lr,add:()=>Dr,addN:()=>Su,addStrict:()=>ma,all:()=>bc,any:()=>xc,argMax:()=>wc,argMin:()=>kc,asin:()=>Br,asinh:()=>Pr,atan:()=>zr,atan2:()=>ga,atanh:()=>Wr,avgPool:()=>uc,avgPool3d:()=>hc,backend:()=>un,backend_util:()=>ks,basicLSTMCell:()=>Bc,batchNorm:()=>Fu,batchNorm2d:()=>Ou,batchNorm3d:()=>Bu,batchNorm4d:()=>Wu,batchNormalization:()=>Du,batchNormalization2d:()=>$u,batchNormalization3d:()=>Lu,batchNormalization4d:()=>zu,batchToSpaceND:()=>er,booleanMaskAsync:()=>Ml,broadcastTo:()=>Vu,browser:()=>od,buffer:()=>Zn,cast:()=>tr,ceil:()=>Vr,clipByValue:()=>Ur,clone:()=>Uu,complex:()=>Sn,concat:()=>qn,concat1d:()=>jn,concat2d:()=>Kn,concat3d:()=>Xn,concat4d:()=>Yn,conv1d:()=>zl,conv2d:()=>Wl,conv2dTranspose:()=>Xl,conv3d:()=>Vl,conv3dTranspose:()=>Yl,cos:()=>Gr,cosh:()=>Hr,cumsum:()=>nr,customGrad:()=>Qa,deprecationWarn:()=>Ht,depthToSpace:()=>rr,depthwiseConv2d:()=>Hl,diag:()=>Jc,disableDeprecationWarnings:()=>Gt,dispose:()=>Jt,disposeVariables:()=>qt,div:()=>Fa,divNoNan:()=>Yu,divStrict:()=>va,dot:()=>Zl,dropout:()=>Zc,elu:()=>Ac,enableDebugMode:()=>Ut,enableProdMode:()=>Vt,engine:()=>jt,env:()=>l,equal:()=>xl,equalStrict:()=>wl,erf:()=>qr,exp:()=>jr,expandDims:()=>ar,expm1:()=>Kr,eye:()=>Zu,fft:()=>Gc,fill:()=>Wn,findBackend:()=>an,findBackendFactory:()=>sn,floor:()=>Xr,floorDiv:()=>ya,frame:()=>rh,fused:()=>Mh,gather:()=>$l,gatherND:()=>Yc,gather_util:()=>$a,getBackend:()=>nn,getGradient:()=>f,getKernel:()=>d,getKernelsForBackend:()=>m,grad:()=>Ka,grads:()=>Xa,greater:()=>kl,greaterEqual:()=>Il,greaterEqualStrict:()=>Cl,greaterStrict:()=>Nl,hammingWindow:()=>nh,hannWindow:()=>th,ifft:()=>Hc,imag:()=>Tn,image:()=>Th,inTopKAsync:()=>ih,io:()=>rd,irfft:()=>jc,isFinite:()=>oa,isInf:()=>ia,isNaN:()=>sa,keep:()=>Zt,leakyRelu:()=>Dc,less:()=>Sl,lessEqual:()=>El,lessEqualStrict:()=>Tl,lessStrict:()=>Rl,linalg:()=>wh,linspace:()=>Vn,localResponseNormalization:()=>Mc,log:()=>Yr,log1p:()=>Jr,logSigmoid:()=>Zr,logSoftmax:()=>ns,logSumExp:()=>Ic,logicalAnd:()=>Gu,logicalNot:()=>Hu,logicalOr:()=>qu,logicalXor:()=>ju,losses:()=>gh,matMul:()=>Jl,math:()=>sd,max:()=>Cc,maxPool:()=>oc,maxPool3d:()=>cc,maxPoolWithArgmax:()=>pc,maximum:()=>ba,maximumStrict:()=>xa,mean:()=>Nc,memory:()=>Kt,min:()=>Sc,minimum:()=>wa,minimumStrict:()=>ka,mod:()=>Ia,modStrict:()=>Ca,moments:()=>Ec,movingAverage:()=>zc,mul:()=>Na,mulStrict:()=>Sa,multiRNNCell:()=>Pc,multinomial:()=>Qu,neg:()=>Qr,nextFrame:()=>Nd,norm:()=>Lc,notEqual:()=>Al,notEqualStrict:()=>Dl,oneHot:()=>el,ones:()=>Pn,onesLike:()=>Gn,op:()=>Nn,outerProduct:()=>Ql,pad:()=>tl,pad1d:()=>nl,pad2d:()=>rl,pad3d:()=>al,pad4d:()=>sl,pool:()=>lc,pow:()=>Ea,powStrict:()=>Ta,prelu:()=>Fc,print:()=>Qn,prod:()=>Rc,profile:()=>Xt,rand:()=>il,randomGamma:()=>fl,randomNormal:()=>ml,randomUniform:()=>gl,range:()=>Un,ready:()=>tn,real:()=>En,reciprocal:()=>ea,registerBackend:()=>on,registerGradient:()=>v,registerKernel:()=>g,relu:()=>_c,relu6:()=>$c,removeBackend:()=>rn,reshape:()=>sr,reverse:()=>ec,reverse1d:()=>tc,reverse2d:()=>nc,reverse3d:()=>rc,reverse4d:()=>ac,rfft:()=>qc,round:()=>ta,rsqrt:()=>na,scalar:()=>Dn,scatterND:()=>Uc,scatter_util:()=>Pa,selu:()=>Oc,separableConv2d:()=>Kl,serialization:()=>hd,setBackend:()=>en,setPlatform:()=>ln,setdiff1dAsync:()=>cr,sigmoid:()=>ra,sign:()=>aa,signal:()=>sh,sin:()=>ua,sinh:()=>la,slice:()=>dc,slice1d:()=>fc,slice2d:()=>mc,slice3d:()=>gc,slice4d:()=>vc,slice_util:()=>ja,softmax:()=>ts,softplus:()=>ca,spaceToBatchND:()=>ir,sparseToDense:()=>Xc,spectral:()=>Kc,split:()=>Jn,sqrt:()=>ha,square:()=>vl,squaredDifference:()=>yl,squaredDifferenceStrict:()=>Ra,squeeze:()=>or,stack:()=>ur,step:()=>pa,stft:()=>ah,stridedSlice:()=>Wc,sub:()=>Aa,subStrict:()=>Da,sum:()=>Tc,sumOutType:()=>Re,tan:()=>da,tanh:()=>fa,tensor:()=>Rn,tensor1d:()=>Fn,tensor2d:()=>_n,tensor3d:()=>$n,tensor4d:()=>On,tensor5d:()=>Mn,tensor6d:()=>Ln,tensor_util:()=>$e,test_util:()=>cl,tidy:()=>Yt,tile:()=>Ju,time:()=>Qt,topk:()=>Vc,train:()=>Id,transpose:()=>rs,truncatedNormal:()=>bl,unregisterGradient:()=>b,unregisterKernel:()=>y,unsortedSegmentSum:()=>Ol,unstack:()=>lr,util:()=>ce,valueAndGrad:()=>Ya,valueAndGrads:()=>Ja,variable:()=>Bn,variableGrads:()=>Za,version_core:()=>pd,webgl:()=>dd,where:()=>Ku,whereAsync:()=>Xu,zeros:()=>zn,zerosLike:()=>Hn});var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function a(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function s(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function i(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var o=function(){function e(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return e.prototype.setPlatform=function(e,t){null!=this.platform&&console.warn("Platform "+this.platformName+" has already been set. Overwriting the platform with "+t+"."),this.platformName=e,this.platform=t},e.prototype.registerFlag=function(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){var r=this.urlFlags[e];console.warn("Setting feature override from URL "+e+": "+r+"."),this.set(e,r)}},e.prototype.get=function(e){return e in this.flags||(this.flags[e]=this.evaluateFlag(e)),this.flags[e]},e.prototype.getNumber=function(e){return this.get(e)},e.prototype.getBool=function(e){return this.get(e)},e.prototype.getFlags=function(){return this.flags},Object.defineProperty(e.prototype,"features",{get:function(){return this.flags},enumerable:!0,configurable:!0}),e.prototype.set=function(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag "+e+" as it has not been registered.");this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)},e.prototype.evaluateFlag=function(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '"+e+"': no evaluation function found.");return this.flagRegistry[e].evaluationFn()},e.prototype.setFlags=function(e){this.flags=Object.assign({},e)},e.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},e.prototype.populateURLFlags=function(){var e=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var t,n,r=(t=this.global.location.search,n={},t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];return u(n,t[0],t[1]),t.join("=")})),n);"tfjsflags"in r&&r.tfjsflags.split(",").forEach((function(t){var n=t.split(":"),r=n[0],a=n[1];e.urlFlags[r]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error("Could not parse value flag value "+t+" for flag "+e+".")}(r,a)}))}},e}();function u(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function l(){return c}var c=null,h=new Map,p=new Map;function d(e,t){var n=x(e,t);return h.get(n)}function f(e){return p.get(e)}function m(e){for(var t=h.entries(),n=[];;){var r=t.next(),a=r.done,s=r.value;if(a)break;var i=s[0],o=s[1];i.split("_")[0]===e&&n.push(o)}return n}function g(e){var t=e.kernelName,n=e.backendName,r=x(t,n);if(h.has(r))throw new Error("The kernel '"+t+"' for backend '"+n+"' is already registered");h.set(r,e)}function v(e){var t=e.kernelName;p.has(t)&&console.warn("Overriding the gradient for '"+t+"'"),p.set(t,e)}function y(e,t){var n=x(e,t);if(!h.has(n))throw new Error("The kernel '"+e+"' for backend '"+t+"' is not registered");h.delete(n)}function b(e){if(!p.has(e))throw new Error("The gradient '"+e+"' for backend is not registered");p.delete(e)}function x(e,t){return t+"_"+e}function w(e){for(var t=e.length,n=0,r=0;t>0;)r=Math.random()*t|0,n=e[--t],e[t]=e[r],e[r]=n}function k(e,t,n){return Math.max(e,Math.min(t,n))}function I(e){return e%2==0?e:e+1}function C(e){for(var t=0,n=0;n<e.length;n++)t+=e[n];return t}function N(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function S(e,t,n){void 0===n&&(n=""),N(A(e,t),(function(){return n+" Shapes "+e+" and "+t+" must match"}))}function E(e){N(null!=e,(function(){return"The input to the tensor constructor must be a non-null value."}))}function T(e,t,n){if(void 0===t&&(t=[]),void 0===n&&(n=!1),null==t&&(t=[]),Array.isArray(e)||G(e)&&!n)for(var r=0;r<e.length;++r)T(e[r],t,n);else t.push(e);return t}function R(e){if(0===e.length)return 1;for(var t=e[0],n=1;n<e.length;n++)t*=e[n];return t}function A(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(var n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function D(e){return e%1==0}function F(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;var t=Math.exp(2*e);return(t-1)/(t+1)}function _(e){var t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function $(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function O(e,t,n){return void 0===t&&(t=function(e){return 0}),new Promise((function(r,a){var s=0,i=function(){if(e())r();else{s++;var o=t(s);null!=n&&s>=n?a():setTimeout(i,o)}};i()}))}function M(e,t){for(var n=1,r=-1,a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error("Shapes can only have 1 implicit size. Found -1 at dim "+r+" and dim "+a);r=a}else if(e[a]<0)throw Error("Shapes can not be < 0. Found "+e[a]+" at dim "+a);if(-1===r){if(t>0&&t!==n)throw Error("Size("+t+") must match the product of shape "+e);return e}if(0===n)throw Error("Cannot infer the missing size in ["+e+"] when there are 0 elements");if(t%n!=0)throw Error("The implicit shape can't be a fractional number. Got "+t+" / "+n);var s=e.slice();return s[r]=t/n,s}function L(e,t){var n=t.length;return N((e=null==e?t.map((function(e,t){return t})):[].concat(e)).every((function(e){return e>=-n&&e<n})),(function(){return"All values in axis param must be in range [-"+n+", "+n+") but got axis "+e})),N(e.every((function(e){return D(e)})),(function(){return"All values in axis param must be integers but got axis "+e})),e.map((function(e){return e<0?n+e:e}))}function B(e,t){for(var n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:L(t,e).sort(),i=0,o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error("Can't squeeze axis "+o+" since its dim '"+e[o]+"' is not 1");(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function P(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function z(e,t){var n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function W(e,t){for(var n=0;n<e.length;n++){var r=e[n];if(isNaN(r)||!isFinite(r))throw Error("A tensor of type "+t+" being uploaded contains "+r+".")}}function V(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function U(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function G(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function H(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function q(e){if(null==e)return 0;var t=0;return e.forEach((function(e){return t+=e.length})),t}function j(e){return"string"==typeof e||e instanceof String}function K(e){return"boolean"==typeof e}function X(e){return"number"==typeof e}function Y(e){return Array.isArray(e)?Y(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":X(e)?"float32":j(e)?"string":K(e)?"bool":"float32"}function J(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Z(e,t){for(var n=t;n<e;++n)if(e%n==0)return n;return e}function Q(e){var t=e.length;if(t<2)return[];var n=new Array(t-1);n[t-2]=e[t-1];for(var r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ee(e,t,n){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=T(e)),n&&W(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){for(var r=new Uint8Array(e.length),a=0;a<r.length;++a)0!==Math.round(e[a])&&(r[a]=1);return r}throw new Error("Unknown data type "+t)}function te(e,t){if(0===e.length)return t[0];var n=e.reduce((function(e,t){return e*t}));if(0===n)return[];if(n!==t.length)throw new Error("["+e+"] does not match the input size.");return function e(t,n,r){var a=new Array;if(1===n.length)for(var s=n[0],i=0;i<s;i++)a[i]=r[t+i];else{s=n[0];var o=n.slice(1),u=o.reduce((function(e,t){return e*t}));for(i=0;i<s;i++)a[i]=e(t+i*u,o,r)}return a}(0,e,t)}function ne(e,t){for(var n=re(e,t),r=0;r<n.length;r++)n[r]=1;return n}function re(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function ae(){return l().platform.now()}function se(e){e.forEach((function(t){N(Number.isInteger(t)&&t>=0,(function(){return"Tensor must have a shape comprised of positive integers but got shape ["+e+"]."}))}))}function ie(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",l().platform.encode(e,t)}function oe(e,t){return void 0===t&&(t="utf-8"),t=t||"utf-8",l().platform.decode(e,t)}function ue(e,t,n){if(0===t)return 0;if(1===t)return e[0];for(var r=e[e.length-1],a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function le(e,t,n){if(0===t)return[];if(1===t)return[e];for(var r=new Array(t),a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}var ce=Object.freeze({shuffle:w,clamp:k,nearestLargerEven:I,sum:C,randUniform:function(e,t){var n=Math.random();return t*n+(1-n)*e},distSquared:function(e,t){for(var n=0,r=0;r<e.length;r++){var a=Number(e[r])-Number(t[r]);n+=a*a}return n},assert:N,assertShapesMatch:S,assertNonNull:E,flatten:T,sizeFromShape:R,isScalarShape:function(e){return 0===e.length},arraysEqual:A,isInt:D,tanh:F,sizeToSquarishShape:_,createShuffledIndices:function(e){for(var t=new Uint32Array(e),n=0;n<e;++n)t[n]=n;return w(t),t},rightPad:$,repeatedTry:O,inferFromImplicitShape:M,parseAxisParam:L,squeezeShape:B,getTypedArrayFromDType:P,getArrayFromDType:z,checkConversionForErrors:W,isValidDtype:V,hasEncodingLoss:U,isTypedArray:G,bytesPerElement:H,bytesFromStringArray:q,isString:j,isBoolean:K,isNumber:X,inferDtype:Y,isFunction:J,nearestDivisor:Z,computeStrides:Q,toTypedArray:ee,toNestedArray:te,makeOnesTypedArray:ne,makeZerosTypedArray:re,now:ae,assertNonNegativeIntegerDimensions:se,fetch:function(e,t){return l().platform.fetch(e,t)},encodeString:ie,decodeString:oe,locToIndex:ue,indexToLoc:le}),he=function(){function e(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new pe)}return e.prototype.profileKernel=function(e,t,n){var r,a=this,s=this.backendTimer.time((function(){r=n()}));return r.forEach((function(n){n.data().then((function(r){!function(e,t,n){if("float32"!==t)return!1;for(var r=0;r<e.length;r++){var a=e[r];if(isNaN(a)||!isFinite(a))return console.warn("Found "+a+" in the result of '"+n+"'"),!0}}(r,n.dtype,e),s.then((function(s){var i="";null!=s.getExtraProfileInfo&&(i=s.getExtraProfileInfo()),a.logger.logKernelProfile(e,n,r,s.kernelMs,t,i)}))}))})),r},e}(),pe=function(){function e(){}return e.prototype.logKernelProfile=function(e,t,n,r,a,s){var i="number"==typeof r?$(r+"ms",9):r.error,o=$(e,25),u=t.rank,l=t.size,c=$(t.shape.toString(),14),h="";for(var p in a){var d=a[p].shape||t.shape,f=d.length;h+=p+": "+f+"D "+(f>0?d:"")+" "}console.log("%c"+o+"\t%c"+i+"\t%c"+u+"D "+c+"\t%c"+l+"\t%c"+h+"\t%c"+s,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")},e}();function de(e,t,n){return $(Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":j(e)?"'"+e+"'":"bool"===n?fe(e):parseFloat(e.toFixed(7)).toString(),t)}function fe(e){return 0===e?"false":"true"}function me(e){for(var t=[],n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var ge=function(){function e(e,t,n){var r=this;if(this.dtype=t,this.shape=e.slice(),this.size=R(e),null!=n){var a=n.length;N(a===this.size,(function(){return"Length of values '"+a+"' does not match the size inferred by the shape '"+r.size+"'."}))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||z(t,this.size),this.strides=Q(e)}return e.prototype.set=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),N(n.length===this.rank,(function(){return"The number of provided coordinates ("+n.length+") must match the rank ("+t.rank+")"}));var a=this.locToIndex(n);this.values[a]=e},e.prototype.get=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];0===e.length&&(e=[0]);for(var n=0,r=0,a=e;r<a.length;r++){var s=a[r];if(s<0||s>=this.shape[n]){var i="Requested out of range element at "+e+".   Buffer shape="+this.shape;throw new Error(i)}n++}for(var o=e[e.length-1],u=0;u<e.length-1;++u)o+=this.strides[u]*e[u];return this.values[o]},e.prototype.locToIndex=function(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];for(var t=e[e.length-1],n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t},e.prototype.indexToLoc=function(e){if(0===this.rank)return[];if(1===this.rank)return[e];for(var t=new Array(this.shape.length),n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.toTensor=function(){return ve().makeTensor(this.values,this.shape,this.dtype)},e}(),ve=null,ye=null,be=null,xe=function(){function e(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=R(e),this.strides=Q(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}return e.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},e.prototype.asScalar=function(){return this.throwIfDisposed(),N(1===this.size,(function(){return"The array must have only 1 element."})),this.reshape([])},e.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},e.prototype.as2D=function(e,t){return this.throwIfDisposed(),this.reshape([e,t])},e.prototype.as3D=function(e,t,n){return this.throwIfDisposed(),this.reshape([e,t,n])},e.prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),this.reshape([e,t,n,r])},e.prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),this.reshape([e,t,n,r,a])},e.prototype.asType=function(e){return this.throwIfDisposed(),ye.cast(this,e)},Object.defineProperty(e.prototype,"rank",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),e.prototype.buffer=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,ye.buffer(this.shape,this.dtype,e)]}}))}))},e.prototype.bufferSync=function(){return ye.buffer(this.shape,this.dtype,this.dataSync())},e.prototype.array=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return[4,this.data()];case 1:return e=t.sent(),[2,te(this.shape,e)]}}))}))},e.prototype.arraySync=function(){return te(this.shape,this.dataSync())},e.prototype.data=function(){return s(this,void 0,void 0,(function(){var e,t;return i(this,(function(n){switch(n.label){case 0:return this.throwIfDisposed(),e=ve().read(this.dataId),"string"!==this.dtype?[3,2]:[4,e];case 1:t=n.sent();try{return[2,t.map((function(e){return oe(e)}))]}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}n.label=2;case 2:return[2,e]}}))}))},e.prototype.dataSync=function(){this.throwIfDisposed();var e=ve().readSync(this.dataId);if("string"===this.dtype)try{return e.map((function(e){return oe(e)}))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e},e.prototype.bytes=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return this.throwIfDisposed(),[4,ve().read(this.dataId)];case 1:return e=t.sent(),"string"===this.dtype?[2,e]:[2,new Uint8Array(e.buffer)]}}))}))},e.prototype.dispose=function(){this.isDisposed||(ve().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(e.prototype,"isDisposed",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),e.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error("Tensor is disposed.")},e.prototype.toFloat=function(){return this.asType("float32")},e.prototype.toInt=function(){return this.asType("int32")},e.prototype.toBool=function(){return this.asType("bool")},e.prototype.print=function(e){return void 0===e&&(e=!1),ye.print(this,e)},e.prototype.reshape=function(e){return this.throwIfDisposed(),ye.reshape(this,e)},e.prototype.reshapeAs=function(e){return this.throwIfDisposed(),this.reshape(e.shape)},e.prototype.expandDims=function(e){return void 0===e&&(e=0),ye.expandDims(this,e)},e.prototype.cumsum=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=!1),void 0===n&&(n=!1),ye.cumsum(this,e,t,n)},e.prototype.squeeze=function(e){return this.throwIfDisposed(),ye.squeeze(this,e)},e.prototype.clone=function(){return this.throwIfDisposed(),ye.clone(this)},e.prototype.toString=function(e){return void 0===e&&(e=!1),function(e,t,n,r){var a=Q(t),s=function(e,t,n,r){var a=R(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?me(e):e;if(o>1)for(var l=0;l<a/s;l++)for(var c=l*s,h=0;h<s;h++)i[h]=Math.max(i[h],de(u[c+h],0,n).length);return i}(e,t,n,a),i=t.length,o=function e(t,n,r,a,s,i){void 0===i&&(i=!0);var o="complex64"===r?2:1,u=n[0],l=n.length;if(0===l)return"complex64"===r?[de(me(t)[0],0,r)]:"bool"===r?[fe(t[0])]:[t[0].toString()];if(1===l){if(u>20){var c=3*o,h=Array.from(t.slice(0,c)),p=Array.from(t.slice((u-3)*o,u*o));return"complex64"===r&&(h=me(h),p=me(p)),["["+h.map((function(e,t){return de(e,s[t],r)})).join(", ")+", ..., "+p.map((function(e,t){return de(e,s[u-3+t],r)})).join(", ")+"]"]}return["["+("complex64"===r?me(t):Array.from(t)).map((function(e,t){return de(e,s[t],r)})).join(", ")+"]"]}var d=n.slice(1),f=a.slice(1),m=a[0]*o,g=[];if(u>20){for(var v=0;v<3;v++){var y=(b=v*m)+m;g.push.apply(g,e(t.slice(b,y),d,r,f,s,!1))}for(g.push("..."),v=u-3;v<u;v++)y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),d,r,f,s,v===u-1))}else for(v=0;v<u;v++){var b;y=(b=v*m)+m,g.push.apply(g,e(t.slice(b,y),d,r,f,s,v===u-1))}var x=2===l?",":"";for(g[0]="["+g[0]+x,v=1;v<g.length-1;v++)g[v]=" "+g[v]+x;var w=",\n";for(v=2;v<l;v++)w+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(i?"":w),g}(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+i),u.push("  shape: ["+t+"]"),u.push("  values:")),u.push(o.map((function(e){return"    "+e})).join("\n")),u.join("\n")}(this.dataSync(),this.shape,this.dtype,e)},e.prototype.gather=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),ye.gather(this,e,t)},e.prototype.matMul=function(e,t,n){return void 0===t&&(t=!1),void 0===n&&(n=!1),this.throwIfDisposed(),ye.matMul(this,e,t,n)},e.prototype.dot=function(e){return this.throwIfDisposed(),ye.dot(this,e)},e.prototype.norm=function(e,t,n){return void 0===e&&(e="euclidean"),void 0===t&&(t=null),void 0===n&&(n=!1),this.throwIfDisposed(),ye.norm(this,e,t,n)},e.prototype.slice=function(e,t){return this.throwIfDisposed(),ye.slice(this,e,t)},e.prototype.reverse=function(e){return this.throwIfDisposed(),ye.reverse(this,e)},e.prototype.concat=function(t,n){return void 0===n&&(n=0),this.throwIfDisposed(),t instanceof e&&(t=[t]),ye.concat([this].concat(t),n)},e.prototype.split=function(e,t){return void 0===t&&(t=0),this.throwIfDisposed(),ye.split(this,e,t)},e.prototype.stack=function(e,t){return void 0===t&&(t=0),ye.stack([this,e],t)},e.prototype.unstack=function(e){return void 0===e&&(e=0),ye.unstack(this,e)},e.prototype.batchNormalization=function(e,t,n,r,a){return void 0===n&&(n=.001),be("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"),this.batchNorm(e,t,a,r,n)},e.prototype.all=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.all(this,e,t)},e.prototype.any=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.any(this,e,t)},e.prototype.logSumExp=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.logSumExp(this,e,t)},e.prototype.sum=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.sum(this,e,t)},e.prototype.prod=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.prod(this,e,t)},e.prototype.mean=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.mean(this,e,t)},e.prototype.min=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.min(this,e,t)},e.prototype.max=function(e,t){return void 0===e&&(e=null),void 0===t&&(t=!1),this.throwIfDisposed(),ye.max(this,e,t)},e.prototype.argMin=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),ye.argMin(this,e)},e.prototype.argMax=function(e){return void 0===e&&(e=null),this.throwIfDisposed(),ye.argMax(this,e)},e.prototype.cast=function(e){return this.throwIfDisposed(),ye.cast(this,e)},e.prototype.addStrict=function(e){return this.throwIfDisposed(),ye.addStrict(this,e)},e.prototype.atan2=function(e){return this.throwIfDisposed(),ye.atan2(this,e)},e.prototype.sub=function(e){return this.throwIfDisposed(),ye.sub(this,e)},e.prototype.subStrict=function(e){return this.throwIfDisposed(),ye.subStrict(this,e)},e.prototype.pow=function(e){return this.throwIfDisposed(),ye.pow(this,e)},e.prototype.powStrict=function(e){return this.throwIfDisposed(),ye.powStrict(this,e)},e.prototype.mul=function(e){return this.throwIfDisposed(),ye.mul(this,e)},e.prototype.mulStrict=function(e){return this.throwIfDisposed(),ye.mulStrict(this,e)},e.prototype.floorDiv=function(e){return this.throwIfDisposed(),ye.floorDiv(this,e)},e.prototype.divStrict=function(e){return this.throwIfDisposed(),ye.divStrict(this,e)},e.prototype.minimum=function(e){return this.throwIfDisposed(),ye.minimum(this,e)},e.prototype.minimumStrict=function(e){return this.throwIfDisposed(),ye.minimumStrict(this,e)},e.prototype.maximum=function(e){return this.throwIfDisposed(),ye.maximum(this,e)},e.prototype.maximumStrict=function(e){return this.throwIfDisposed(),ye.maximumStrict(this,e)},e.prototype.mod=function(e){return this.throwIfDisposed(),ye.mod(this,e)},e.prototype.modStrict=function(e){return this.throwIfDisposed(),ye.modStrict(this,e)},e.prototype.squaredDifferenceStrict=function(e){return this.throwIfDisposed(),ye.squaredDifferenceStrict(this,e)},e.prototype.notEqual=function(e){return this.throwIfDisposed(),ye.notEqual(this,e)},e.prototype.notEqualStrict=function(e){return this.throwIfDisposed(),ye.notEqualStrict(this,e)},e.prototype.less=function(e){return this.throwIfDisposed(),ye.less(this,e)},e.prototype.lessStrict=function(e){return this.throwIfDisposed(),ye.lessStrict(this,e)},e.prototype.equal=function(e){return this.throwIfDisposed(),ye.equal(this,e)},e.prototype.equalStrict=function(e){return this.throwIfDisposed(),ye.equalStrict(this,e)},e.prototype.lessEqual=function(e){return this.throwIfDisposed(),ye.lessEqual(this,e)},e.prototype.lessEqualStrict=function(e){return this.throwIfDisposed(),ye.lessEqualStrict(this,e)},e.prototype.greater=function(e){return this.throwIfDisposed(),ye.greater(this,e)},e.prototype.greaterStrict=function(e){return this.throwIfDisposed(),ye.greaterStrict(this,e)},e.prototype.greaterEqual=function(e){return this.throwIfDisposed(),ye.greaterEqual(this,e)},e.prototype.greaterEqualStrict=function(e){return this.throwIfDisposed(),ye.greaterEqualStrict(this,e)},e.prototype.logicalAnd=function(e){return this.throwIfDisposed(),ye.logicalAnd(this,e)},e.prototype.logicalOr=function(e){return this.throwIfDisposed(),ye.logicalOr(this,e)},e.prototype.logicalNot=function(){return this.throwIfDisposed(),ye.logicalNot(this)},e.prototype.logicalXor=function(e){return this.throwIfDisposed(),ye.logicalXor(this,e)},e.prototype.where=function(e,t){return this.throwIfDisposed(),ye.where(e,this,t)},e.prototype.neg=function(){return this.throwIfDisposed(),ye.neg(this)},e.prototype.ceil=function(){return this.throwIfDisposed(),ye.ceil(this)},e.prototype.floor=function(){return this.throwIfDisposed(),ye.floor(this)},e.prototype.sign=function(){return this.throwIfDisposed(),ye.sign(this)},e.prototype.isNaN=function(){return this.throwIfDisposed(),ye.isNaN(this)},e.prototype.isInf=function(){return this.throwIfDisposed(),ye.isInf(this)},e.prototype.isFinite=function(){return this.throwIfDisposed(),ye.isFinite(this)},e.prototype.exp=function(){return this.throwIfDisposed(),ye.exp(this)},e.prototype.expm1=function(){return this.throwIfDisposed(),ye.expm1(this)},e.prototype.log=function(){return this.throwIfDisposed(),ye.log(this)},e.prototype.log1p=function(){return this.throwIfDisposed(),ye.log1p(this)},e.prototype.sqrt=function(){return this.throwIfDisposed(),ye.sqrt(this)},e.prototype.rsqrt=function(){return this.throwIfDisposed(),ye.rsqrt(this)},e.prototype.square=function(){return this.throwIfDisposed(),ye.square(this)},e.prototype.reciprocal=function(){return this.throwIfDisposed(),ye.reciprocal(this)},e.prototype.abs=function(){return this.throwIfDisposed(),ye.abs(this)},e.prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ye.clipByValue(this,e,t)},e.prototype.relu=function(){return this.throwIfDisposed(),ye.relu(this)},e.prototype.relu6=function(){return this.throwIfDisposed(),ye.relu6(this)},e.prototype.elu=function(){return this.throwIfDisposed(),ye.elu(this)},e.prototype.selu=function(){return this.throwIfDisposed(),ye.selu(this)},e.prototype.leakyRelu=function(e){return void 0===e&&(e=.2),this.throwIfDisposed(),ye.leakyRelu(this,e)},e.prototype.prelu=function(e){return this.throwIfDisposed(),ye.prelu(this,e)},e.prototype.sigmoid=function(){return this.throwIfDisposed(),ye.sigmoid(this)},e.prototype.logSigmoid=function(){return this.throwIfDisposed(),ye.logSigmoid(this)},e.prototype.softplus=function(){return this.throwIfDisposed(),ye.softplus(this)},e.prototype.zerosLike=function(){return this.throwIfDisposed(),ye.zerosLike(this)},e.prototype.onesLike=function(){return this.throwIfDisposed(),ye.onesLike(this)},e.prototype.sin=function(){return this.throwIfDisposed(),ye.sin(this)},e.prototype.cos=function(){return this.throwIfDisposed(),ye.cos(this)},e.prototype.tan=function(){return this.throwIfDisposed(),ye.tan(this)},e.prototype.asin=function(){return this.throwIfDisposed(),ye.asin(this)},e.prototype.acos=function(){return this.throwIfDisposed(),ye.acos(this)},e.prototype.atan=function(){return this.throwIfDisposed(),ye.atan(this)},e.prototype.sinh=function(){return this.throwIfDisposed(),ye.sinh(this)},e.prototype.cosh=function(){return this.throwIfDisposed(),ye.cosh(this)},e.prototype.tanh=function(){return this.throwIfDisposed(),ye.tanh(this)},e.prototype.asinh=function(){return this.throwIfDisposed(),ye.asinh(this)},e.prototype.acosh=function(){return this.throwIfDisposed(),ye.acosh(this)},e.prototype.atanh=function(){return this.throwIfDisposed(),ye.atanh(this)},e.prototype.erf=function(){return this.throwIfDisposed(),ye.erf(this)},e.prototype.round=function(){return this.throwIfDisposed(),ye.round(this)},e.prototype.step=function(e){return void 0===e&&(e=0),this.throwIfDisposed(),ye.step(this,e)},e.prototype.softmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),ye.softmax(this,e)},e.prototype.logSoftmax=function(e){return void 0===e&&(e=-1),this.throwIfDisposed(),ye.logSoftmax(this,e)},e.prototype.resizeBilinear=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),ye.image.resizeBilinear(this,e,t)},e.prototype.resizeNearestNeighbor=function(e,t){return void 0===t&&(t=!1),this.throwIfDisposed(),ye.image.resizeNearestNeighbor(this,e,t)},e.prototype.conv1d=function(e,t,n,r,a,s){return void 0===r&&(r="NWC"),void 0===a&&(a=1),this.throwIfDisposed(),ye.conv1d(this,e,t,n,r,a,s)},e.prototype.conv2d=function(e,t,n,r,a,s){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),ye.conv2d(this,e,t,n,r,a,s)},e.prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),ye.conv2dTranspose(this,e,t,n,r,a)},e.prototype.depthwiseConv2D=function(e,t,n,r,a,s){return void 0===r&&(r="NHWC"),void 0===a&&(a=[1,1]),this.throwIfDisposed(),ye.depthwiseConv2d(this,e,t,n,r,a,s)},e.prototype.separableConv2d=function(e,t,n,r,a,s){return void 0===a&&(a=[1,1]),void 0===s&&(s="NHWC"),this.throwIfDisposed(),ye.separableConv2d(this,e,t,n,r,a,s)},e.prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ye.avgPool(this,e,t,n,r)},e.prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),ye.maxPool(this,e,t,n,r)},e.prototype.localResponseNormalization=function(e,t,n,r){return void 0===e&&(e=5),void 0===t&&(t=1),void 0===n&&(n=1),void 0===r&&(r=.5),ye.localResponseNormalization(this,e,t,n,r)},e.prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),ye.pool(this,e,t,n,r,a)},e.prototype.variable=function(e,t,n){return void 0===e&&(e=!0),this.throwIfDisposed(),ve().makeVariable(this,e,t,n)},e.prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ye.unsortedSegmentSum(this,e,t)},e.prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),ye.batchToSpaceND(this,e,t)},e.prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ye.spaceToBatchND(this,e,t)},e.prototype.topk=function(e,t){return void 0===e&&(e=1),void 0===t&&(t=!0),this.throwIfDisposed(),ye.topk(this,e,t)},e.prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return void 0===r&&(r=0),void 0===a&&(a=0),void 0===s&&(s=0),void 0===i&&(i=0),void 0===o&&(o=0),this.throwIfDisposed(),ye.stridedSlice(this,e,t,n,r,a,s,i,o)},e.prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ye.depthToSpace(this,e,t)},e.prototype.fft=function(){return this.throwIfDisposed(),ye.spectral.fft(this)},e.prototype.ifft=function(){return this.throwIfDisposed(),ye.spectral.ifft(this)},e.prototype.rfft=function(){return this.throwIfDisposed(),ye.spectral.rfft(this)},e.prototype.irfft=function(){return this.throwIfDisposed(),ye.spectral.irfft(this)},e}();Object.defineProperty(xe,Symbol.hasInstance,{value:function(e){return!!e&&null!=e.dataId&&null!=e.shape&&null!=e.dtype}});var we,ke,Ie,Ce,Ne,Se=function(e){function t(t,n,r,a){var s=e.call(this,t.shape,t.dtype,t.dataId,a)||this;return s.trainable=n,s.name=r,s}return a(t,e),t.prototype.assign=function(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value ("+e.dtype+") and previous value ("+this.dtype+") must match");if(!A(e.shape,this.shape))throw new Error("shape of the new value ("+e.shape+") and previous value ("+this.shape+") must match");ve().disposeTensor(this),this.dataId=e.dataId,ve().incRef(this,null)},t.prototype.dispose=function(){ve().disposeVariable(this),this.isDisposedInternal=!0},t}(xe);Object.defineProperty(Se,Symbol.hasInstance,{value:function(e){return e instanceof xe&&null!=e.assign&&e.assign instanceof Function}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(we||(we={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ke||(ke={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Ie||(Ie={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Ce||(Ce={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ne||(Ne={}));var Ee={float32:Ce,int32:ke,bool:Ie,complex64:Ne};function Te(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast "+e+" with "+t)}return Ee[e][t]}function Re(e){return Te(e,"int32")}function Ae(e,t){if(e.dtype===t.dtype)return[e,t];var n=Te(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function De(e,t){N(e.dtype===t.dtype,(function(){return"The dtypes of the first("+e.dtype+") and second("+t.dtype+") input must match"}))}function Fe(e){var t=[];return function e(t,n,r){if(null!=t)if(t instanceof xe)n.push(t);else if(a=t,Array.isArray(a)||"object"==typeof a){var a,s=t;for(var i in s){var o=s[i];r.has(o)||(r.add(o),e(o,n,r))}}}(e,t,new Set),t}var _e,$e=Object.freeze({makeTypesMatch:Ae,assertTypesMatch:De,isTensorInList:function(e,t){return t.some((function(t){return t.id===e.id}))},getTensorsInContainer:Fe}),Oe=function(){function e(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return e.prototype.dispose=function(){for(var e in this.registeredVariables)this.registeredVariables[e].dispose()},e}(),Me=function(){function e(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Oe}return e.prototype.ready=function(){return s(this,void 0,void 0,(function(){var e,t,n;return i(this,(function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then((function(){}))];if(null!=this.backendInstance)return[2];e=this.getSortedBackends(),t=0,r.label=1;case 1:return t<e.length?(n=e[t],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return t++,[3,1];case 5:throw new Error("Could not initialize any backends, all backend initializations failed.")}}))}))},Object.defineProperty(e.prototype,"backend",{get:function(){if(null!=this.pendingBackendInit)throw new Error("Backend '"+this.backendName+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){var e=this.initializeBackendsAndReturnBest(),t=e.name;if(e.asyncInit)throw new Error("The highest priority backend '"+t+"' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(t)}return this.backendInstance},enumerable:!0,configurable:!0}),e.prototype.backendNames=function(){return Object.keys(this.registryFactory)},e.prototype.findBackend=function(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;if(this.initializeBackend(e).asyncInit)return null}return this.registry[e]},e.prototype.findBackendFactory=function(e){return e in this.registryFactory?this.registryFactory[e].factory:null},e.prototype.registerBackend=function(e,t,n){return void 0===n&&(n=1),e in this.registryFactory?(console.warn(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)},e.prototype.setBackend=function(e){return s(this,void 0,void 0,(function(){var t,n,r;return i(this,(function(a){switch(a.label){case 0:if(null==this.registryFactory[e])throw new Error("Backend name '"+e+"' not found in registry");return this.backendName=e,null!=this.registry[e]?[3,4]:(this.backendInstance=null,t=this.initializeBackend(e),n=t.success,t.asyncInit?[4,n]:[3,2]);case 1:return r=a.sent(),[3,3];case 2:r=n,a.label=3;case 3:if(!r)return[2,!1];a.label=4;case 4:return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new he(this.backendInstance),[2,!0]}}))}))},e.prototype.setupRegisteredKernels=function(){var e=this;m(this.backendName).forEach((function(t){null!=t.setupFunc&&t.setupFunc(e.backendInstance)}))},e.prototype.disposeRegisteredKernels=function(e){var t=this;m(e).forEach((function(n){null!=n.disposeFunc&&n.disposeFunc(t.registry[e])}))},e.prototype.initializeBackend=function(e){var t=this,n=this.registryFactory[e];if(null==n)throw new Error("Cannot initialize backend "+e+", no registration found.");try{var r=n.factory();if(Promise.resolve(r)===r){var a=++this.pendingBackendInitId,s=r.then((function(n){return!(a<t.pendingBackendInitId||(t.registry[e]=n,t.pendingBackendInit=null,0))})).catch((function(n){return!(a<t.pendingBackendInitId||(t.pendingBackendInit=null,console.warn("Initialization of backend "+e+" failed"),console.warn(n.stack||n.message),1))}));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(t){return console.warn("Initialization of backend "+e+" failed"),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}},e.prototype.removeBackend=function(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},e.prototype.getSortedBackends=function(){var e=this;if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((function(t,n){return e.registryFactory[n].priority-e.registryFactory[t].priority}))},e.prototype.initializeBackendsAndReturnBest=function(){for(var e=this.getSortedBackends(),t=0;t<e.length;t++){var n=e[t],r=this.initializeBackend(n),a=r.success,s=r.asyncInit;if(s||a)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")},e.prototype.moveData=function(e,t){var n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t);r.disposeData(t),n.backend=e,e.move(t,a,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++},e.prototype.tidy=function(e,t){var n,r=this,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((function(){return r.startScope(a)}),(function(){return r.endScope(n)}),(function(){return(n=t())instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n}))},e.prototype.scopedRun=function(e,t,n){e();try{var r=n();return t(),r}catch(e){throw t(),e}},e.prototype.nextTensorId=function(){return e.nextTensorId++},e.prototype.nextVariableId=function(){return e.nextVariableId++},e.prototype.clone=function(e){var t=this.makeTensorFromDataId(e.dataId,e.shape,e.dtype),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(function(e){return{x:function(){return e.toFloat()}}}),[],{}),t},e.prototype.runKernel=function(e,t,n,r,a){return this.runKernelFunc(null,t,null,e,n,r,a)},e.prototype.shouldCheckForMemLeaks=function(){return this.ENV.getBool("IS_TEST")},e.prototype.checkKernelForMemLeak=function(e,t,n){var r=this.backend.numDataIds(),a=0;n.forEach((function(e){a+="complex64"===e.dtype?3:1}));var s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error("Backend '"+this.backendName+"' has an internal memory leak ("+i+" data ids) after running '"+e+"'")},e.prototype.runKernelFunc=function(e,t,n,r,a,s,i){var o,u=this,l=[],c=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");var h,p=this.state.numBytes,f=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);var m,g=d(r,this.backendName);if(null!=g)h=function(){var e=u.backend.numDataIds();m=g.kernelFunc({inputs:t,attrs:a,backend:u.backend});var n=Array.isArray(m)?m:[m];u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,e,n);var o=n.map((function(e){var t=e.dataId,n=e.shape,r=e.dtype;return u.makeTensorFromDataId(t,n,r)}));if(c){var h=u.getTensorsForGradient(r,t,o);if(null==h){null==i&&(i=[]);var p=o.filter((function(e,t){return i[t]}));h=(s||[]).slice().concat(p)}l=u.saveTensorsForBackwardMode(h)}return o};else{var v=function(e){c&&(l=e.map((function(e){return u.keep(u.clone(e))})))};h=function(){var t=u.backend.numDataIds();m=u.tidy((function(){return e(u.backend,v)}));var n=Array.isArray(m)?m:[m];return u.shouldCheckForMemLeaks()&&u.checkKernelForMemLeak(r,t,n),n}}return this.scopedRun((function(){return u.state.kernelDepth++}),(function(){return u.state.kernelDepth--}),(function(){o=u.ENV.getBool("DEBUG")?u.profiler.profileKernel(r,t,(function(){return h()})):h()})),c&&this.addTapeNode(r,t,o,n,l,a),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-p,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-f,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(t).map((function(e){return t[e].shape})),outputShapes:o.map((function(e){return e.shape}))}),Array.isArray(m)?o:o[0]},e.prototype.saveTensorsForBackwardMode=function(e){var t=this;return e.map((function(e){return t.keep(t.clone(e))}))},e.prototype.getTensorsForGradient=function(e,t,n){var r=f(e);if(null!=r){var a=r.inputsToSave||[],s=r.outputsToSave||[],i=void 0;r.saveAllInputs?(N(Array.isArray(t),(function(){return"saveAllInputs is true, expected inputs to be an array."})),i=Object.keys(t).map((function(e){return t[e]}))):i=a.map((function(e){return t[e]}));var o=n.filter((function(e,t){return s[t]}));return i.concat(o)}return null},e.prototype.makeTensor=function(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;var a=e;"string"===n&&j(e[0])&&(a=e.map((function(e){return ie(e)})));var s=r.write(a,t,n),i=new xe(t,n,s,this.nextTensorId());if(this.incRef(i,r),"string"===n){var o=this.state.tensorInfo.get(s),u=q(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return i},e.prototype.makeTensorFromDataId=function(e,t,n,r){var a=new xe(t,n=n||"float32",e,this.nextTensorId());return this.incRef(a,r),a},e.prototype.makeVariable=function(e,t,n,r){void 0===t&&(t=!0),n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.asType(r));var a=new Se(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error("Variable with name "+a.name+" was already registered");return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a},e.prototype.incRef=function(e,t){var n=this.state.tensorInfo.has(e.dataId)?this.state.tensorInfo.get(e.dataId).refCount:0;if(this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(r=e.size*H(e.dtype)),this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r,refCount:0}),this.state.numBytes+=r}this.state.tensorInfo.get(e.dataId).refCount++,e instanceof Se||this.track(e)},e.prototype.disposeTensor=function(e){if(this.state.tensorInfo.has(e.dataId)){this.state.numTensors--,"string"===e.dtype&&this.state.numStringTensors--;var t=this.state.tensorInfo.get(e.dataId);t.refCount<=1?("complex64"!==e.dtype&&(this.state.numBytes-=t.bytes),this.state.numDataBuffers--,t.backend.disposeData(e.dataId),this.state.tensorInfo.delete(e.dataId)):this.state.tensorInfo.get(e.dataId).refCount--}},e.prototype.disposeVariables=function(){for(var e in this.state.registeredVariables){var t=this.state.registeredVariables[e];this.disposeVariable(t)}},e.prototype.disposeVariable=function(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]},e.prototype.memory=function(){var e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e},e.prototype.profile=function(e){return s(this,void 0,void 0,(function(){var t,n;return i(this,(function(r){return this.state.profiling=!0,t=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map((function(e){return e.totalBytesSnapshot}))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]}))}))},e.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},e.prototype.addTapeNode=function(e,t,n,r,a,s){var i=this,o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=f(e);null!=u&&(r=u.gradFunc),null!=r&&(o.gradient=function(e){return e=e.map((function(e,t){if(null==e){var r=n[t],a=re(r.size,r.dtype);return i.makeTensor(a,r.shape,r.dtype)}return e})),r(e.length>1?e:e[0],a,s)}),this.state.activeTape.push(o)},e.prototype.keep=function(e){return e.kept=!0,e},e.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},e.prototype.endTape=function(){this.state.gradientDepth--},e.prototype.startScope=function(e){var t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t},e.prototype.endScope=function(e){for(var t=this,n=Fe(e),r=new Set(n.map((function(e){return e.id}))),a=0;a<this.state.activeScope.track.length;a++){var s=this.state.activeScope.track[a];s.kept||r.has(s.id)||s.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach((function(e){e.kept||e.scopeId!==i.id||t.track(e)}))},e.prototype.gradients=function(e,t,n,r){var a=this;if(void 0===r&&(r=!1),N(t.length>0,(function(){return"gradients() received an empty list of xs."})),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '"+n.dtype+"'");var s=this.scopedRun((function(){return a.startTape()}),(function(){return a.endTape()}),(function(){return a.tidy("forward",e)}));N(s instanceof xe,(function(){return"The result y returned by f() must be a tensor."}));var i=function(e,t,n){for(var r={},a={},s=0;s<t.length;s++)r[t[s].id]=!0;for(s=0;s<e.length;s++){var i=(f=e[s]).inputs;for(var o in i){for(var u=i[o],l=!1,c=0;c<t.length;c++)if(r[u.id]){f.outputs.forEach((function(e){return r[e.id]=!0})),l=!0,a[f.id]=!0;break}if(l)break}}var h={};h[n.id]=!0;var p={};for(s=e.length-1;s>=0;s--)for(i=(f=e[s]).inputs,c=0;c<f.outputs.length;c++)if(h[f.outputs[c].id]){for(var o in i)h[i[o].id]=!0,p[f.id]=!0;break}var d=[];for(s=0;s<e.length;s++){var f;if(a[(f=e[s]).id]&&p[f.id]){var m={};for(var o in f.inputs){var g=f.inputs[o];r[g.id]&&(m[o]=g)}var v=Object.assign({},f);v.inputs=m,v.outputs=f.outputs,d.push(v)}}return d}(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(function(){var e,r,o={};o[s.id]=null==n?(r=ne(R(e=s.shape),"float32"),Le.makeTensor(r,e,"float32")):n,function(e,t,n){for(var r=function(r){var a=t[r],s=[];if(a.outputs.forEach((function(t){var n=e[t.id];null!=n?s.push(n):s.push(null)})),null==a.gradient)throw new Error("Cannot compute gradient: gradient function not found for "+a.kernelName+".");var i=a.gradient(s),o=function(t){if(!(t in i))throw new Error("Cannot backprop through input "+t+". Available gradients found: "+Object.keys(i)+".");var r=n((function(){return i[t]()}));if("float32"!==r.dtype)throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input "+t+" must have 'float32' dtype, but has '"+r.dtype+"'");var s=a.inputs[t];if(!A(r.shape,s.shape))throw new Error("Error in gradient for op "+a.kernelName+". The gradient of input '"+t+"' has shape '"+r.shape+"', which does not match the shape of the input '"+s.shape+"'");if(null==e[s.id])e[s.id]=r;else{var o=e[s.id];e[s.id]=o.add(r),o.dispose()}};for(var u in a.inputs)o(u)},a=t.length-1;a>=0;a--)r(a)}(o,i,(function(e){return a.tidy(e)}));var u=t.map((function(e){return o[e.id]}));return 0===a.state.gradientDepth&&(a.state.activeTape.forEach((function(e){for(var t=0,n=e.saved;t<n.length;t++)n[t].dispose()})),a.state.activeTape=null),{value:s,grads:u}}))},e.prototype.customGrad=function(e){var t=this;return N(J(e),(function(){return"The f passed in customGrad(f) must be a function."})),function(){for(var n,r=[],a=0;a<arguments.length;a++)r[a]=arguments[a];N(r.every((function(e){return e instanceof xe})),(function(){return"The args passed in customGrad(f)(x1, x2,...) must all be tensors"}));var s={};return r.forEach((function(e,t){s[t]=e})),t.runKernelFunc((function(t,a){return N((n=e.apply(void 0,r.concat([a]))).value instanceof xe,(function(){return"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"})),N(J(n.gradFunc),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."})),n.value}),s,(function(e,t){var a=n.gradFunc(e,t),s=Array.isArray(a)?a:[a];N(s.length===r.length,(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."})),N(s.every((function(e){return e instanceof xe})),(function(){return"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."}));var i={};return s.forEach((function(e,t){i[t]=function(){return e}})),i}))}},e.prototype.readSync=function(e){return this.state.tensorInfo.get(e).backend.readSync(e)},e.prototype.read=function(e){return this.state.tensorInfo.get(e).backend.read(e)},e.prototype.time=function(e){return s(this,void 0,void 0,(function(){var t,n;return i(this,(function(r){switch(r.label){case 0:return t=ae(),[4,this.backend.time(e)];case 1:return(n=r.sent()).wallMs=ae()-t,[2,n]}}))}))},e.prototype.track=function(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e},Object.defineProperty(e.prototype,"registeredVariables",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),e.prototype.reset=function(){for(var e in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Oe,this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},e.nextTensorId=0,e.nextVariableId=0,e}(),Le=function(){var e=function(){if(null==_e){var e=void 0;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}_e=e}return _e}();if(null==e._tfengine){var t=new o(e);e._tfengine=new Me(t)}return function(e){c=e}(e._tfengine.ENV),ve=function(){return e._tfengine},e._tfengine}();function Be(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var Pe=l();Pe.registerFlag("DEBUG",(function(){return!1}),(function(e){e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Pe.registerFlag("IS_BROWSER",(function(){return Be()})),Pe.registerFlag("IS_NODE",(function(){return"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node})),Pe.registerFlag("IS_CHROME",(function(){return"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)})),Pe.registerFlag("PROD",(function(){return!1})),Pe.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(function(){return Pe.getBool("DEBUG")})),Pe.registerFlag("DEPRECATION_WARNINGS_ENABLED",(function(){return!0})),Pe.registerFlag("IS_TEST",(function(){return!1}));var ze,We,Ve,Ue={},Ge={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function He(e,t){Ue[e]=t}function qe(e){e in Ue||(Ue[e]=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");var t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(function(t){t.preventDefault(),delete Ue[e]}),!1),1===e?t.getContext("webgl",Ge)||t.getContext("experimental-webgl",Ge):t.getContext("webgl2",Ge)}(e));var t=Ue[e];return t.isContextLost()?(delete Ue[e],qe(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Ue[e])}function je(e,t){return[t,e]}function Ke(e){var t=R(e);return _(Math.ceil(t/4))}function Xe(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Ye(e,t){var n,r,a,s,i,o,u,c,h,p=e;return 2===l().getNumber("WEBGL_VERSION")?(n=p.R32F,r=p.R16F,a=p.RGBA16F,s=p.RGBA32F,i=p.RED,o=4,u=1,c=p.HALF_FLOAT,h=p.FLOAT):(n=e.RGBA,r=e.RGBA,a=e.RGBA,s=p.RGBA,i=e.RGBA,o=4,u=4,c=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:e.RGBA,downloadUnpackNumChannels:o,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:h}}function Je(e,t,n){var r=n();return t&&function(e){var t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Qe(e,t))}(e),r}function Ze(e){return!!(l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Qe(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}function et(e,t,n){return It(e,t,(function(){return e.getExtension(n)}),'Extension "'+n+'" not supported on this browser.')}function tt(e,t,n){var r=It(e,t,(function(){return e.createShader(e.VERTEX_SHADER)}),"Unable to create vertex WebGLShader.");if(Je(e,t,(function(){return e.shaderSource(r,n)})),Je(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(r)),new Error("Failed to compile vertex shader.");return r}function nt(e,t,n){var r=It(e,t,(function(){return e.createShader(e.FRAGMENT_SHADER)}),"Unable to create fragment WebGLShader.");if(Je(e,t,(function(){return e.shaderSource(r,n)})),Je(e,t,(function(){return e.compileShader(r)})),!1===e.getShaderParameter(r,e.COMPILE_STATUS))throw function(e,t){var n=st.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);for(var r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((function(e,t){return $((t+1).toString(),s)+e})),o=0,u=0;u<i.length;u++)o=Math.max(i[u].length,o);var l=i.slice(0,r-1),c=i.slice(r-1,r),h=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+$(c[0],o),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(n,e.getShaderInfoLog(r)),new Error("Failed to compile fragment shader.");return r}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(ze||(ze={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(We||(We={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ve||(Ve={}));var rt,at,st=/ERROR: [0-9]+:([0-9]+):/g;function it(e,t){return It(e,t,(function(){return e.createProgram()}),"Unable to create WebGLProgram.")}function ot(e,t,n){if(Je(e,t,(function(){return e.linkProgram(n)})),!1===e.getProgramParameter(n,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Failed to link vertex and fragment shaders.")}function ut(e,t,n){if(Je(e,t,(function(){return e.validateProgram(n)})),!1===e.getProgramParameter(n,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(n)),new Error("Shader program validation failed.")}function lt(e,t,n){var r=It(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Je(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),Je(e,t,(function(){return e.bufferData(e.ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function ct(e,t,n){var r=It(e,t,(function(){return e.createBuffer()}),"Unable to create WebGLBuffer");return Je(e,t,(function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,r)})),Je(e,t,(function(){return e.bufferData(e.ELEMENT_ARRAY_BUFFER,n,e.STATIC_DRAW)})),r}function ht(e,t){return It(e,t,(function(){return e.createTexture()}),"Unable to create WebGLTexture.")}function pt(e,t){var n=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){var r="["+e+"x"+t+"]";throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n)throw r="["+e+"x"+t+"]",new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU ["+n+"x"+n+"].")}function dt(e,t){return It(e,t,(function(){return e.createFramebuffer()}),"Unable to create WebGLFramebuffer.")}function ft(e,t,n,r,a,s,i,o){var u=e.getAttribLocation(n,r);return-1!==u&&(Je(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,a)})),Je(e,t,(function(){return e.vertexAttribPointer(u,s,e.FLOAT,!1,i,o)})),Je(e,t,(function(){return e.enableVertexAttribArray(u)})),!0)}function mt(e,t,n,r){Ct(e,r),Je(e,t,(function(){return e.activeTexture(e.TEXTURE0+r)})),Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)}))}function gt(e,t,n,r){return It(e,t,(function(){return e.getUniformLocation(n,r)}),'uniform "'+r+'" not present in program.')}function vt(e,t,n){return e.getUniformLocation(t,n)}function yt(e,t,n,r,a,s){Je(e,t,(function(){return mt(e,t,r,s)})),Je(e,t,(function(){return e.uniform1i(a,s)}))}function bt(e,t,n,r){Je(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,r)})),Je(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0)}))}function xt(e,t,n){Je(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,n)})),Je(e,t,(function(){return e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)}))}function wt(e){var t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+kt(e,t))}function kt(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}function It(e,t,n,r){var a=Je(e,t,(function(){return n()}));if(null==a)throw new Error(r);return a}function Ct(e,t){var n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error("textureUnit must be in [gl.TEXTURE0, gl.TEXTURE"+n+"].")}function Nt(e,t){return void 0===t&&(t=2),R(e.slice(0,e.length-t))}function St(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Et(e){var t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Nt(e)].concat(St(e))),t}function Tt(e,t){var n;void 0===t&&(t=!1);var r=l().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(r*=2,1===(e=e.map((function(t,n){return n>=e.length-2?I(e[n]):e[n]}))).length&&(e=[2,e[0]])),2!==e.length){var a=B(e);e=a.newShape}var s=R(e);if(e.length<=1&&s<=r)return[1,s];if(2===e.length&&e[0]<=r&&e[1]<=r)return e;if(3===e.length&&e[0]*e[1]<=r&&e[2]<=r)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=r&&e[1]*e[2]<=r)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=r&&e[3]<=r)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=r&&e[1]*e[2]*e[3]<=r)return[e[0],e[1]*e[2]*e[3]];if(t){var i=Nt(e),o=2,u=2;return e.length&&(o=(n=St(e))[0],u=n[1]),_(s=i*(o/2)*(u/2)).map((function(e){return 2*e}))}return _(s)}function Rt(e){return e%2==0}function At(e,t){if(A(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){var n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Rt(n)&&Rt(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Rt(e[0])&&Rt(t[0])}function Dt(e){if(null==rt){var t=qe(e);rt=t.getParameter(t.MAX_TEXTURE_SIZE)}return rt}function Ft(e){if(null==at){var t=qe(e);at=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,at)}function _t(e){if(0===e)return 0;var t=qe(e);return $t(t,"EXT_disjoint_timer_query_webgl2")&&2===e?2:$t(t,"EXT_disjoint_timer_query")?1:0}function $t(e,t){return null!=e.getExtension(t)}function Ot(e){try{if(null!=qe(e))return!0}catch(e){return!1}return!1}function Mt(e){if(0===e)return!1;var t=qe(e);if(1===e){if(!$t(t,"OES_texture_float"))return!1}else if(!$t(t,"EXT_color_buffer_float"))return!1;return Bt(t)}function Lt(e){if(0===e)return!1;var t=qe(e);if(1!==e){if($t(t,"EXT_color_buffer_float"))return Bt(t);if($t(t,"EXT_color_buffer_half_float")){var n=t.getExtension("EXT_color_buffer_half_float");return function(e,t){var n=Ye(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);var s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!$t(t,"OES_texture_float")&&!!$t(t,"WEBGL_color_buffer_float")&&Bt(t)}function Bt(e){var t=Ye(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);var r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);var a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function Pt(e){return 2===e&&null!=qe(e).fenceSync}var zt=Object.freeze({callAndCheck:Je,canBeRepresented:Ze,getWebGLErrorMessage:Qe,getExtensionOrThrow:et,createVertexShader:tt,createFragmentShader:nt,createProgram:it,linkProgram:ot,validateProgram:ut,createStaticVertexBuffer:lt,createStaticIndexBuffer:ct,getNumChannels:function(){return 2===l().getNumber("WEBGL_VERSION")?1:4},createTexture:ht,validateTextureSize:pt,createFramebuffer:dt,bindVertexBufferToProgramAttribute:ft,bindTextureUnit:mt,unbindTextureUnit:function(e,t,n){Ct(e,n),Je(e,t,(function(){return e.activeTexture(e.TEXTURE0+n)})),Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))},getProgramUniformLocationOrThrow:gt,getProgramUniformLocation:vt,bindTextureToProgramUniformSampler:yt,bindCanvasToFramebuffer:function(e,t){Je(e,t,(function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)})),Je(e,t,(function(){return e.viewport(0,0,e.canvas.width,e.canvas.height)})),Je(e,t,(function(){return e.scissor(0,0,e.canvas.width,e.canvas.height)}))},bindColorTextureToFramebuffer:bt,unbindColorTextureFromFramebuffer:xt,validateFramebuffer:wt,getFramebufferErrorMessage:kt,getBatchDim:Nt,getRowsCols:St,getShapeAs3D:Et,getTextureShapeFromLogicalShape:Tt,isReshapeFree:At,getWebGLMaxTextureSize:Dt,resetMaxTextureSize:function(){rt=null},resetMaxTexturesInShader:function(){at=null},getMaxTexturesInShader:Ft,getWebGLDisjointQueryTimerVersion:_t,hasExtension:$t,isWebGLVersionEnabled:Ot,isCapableOfRenderingToFloatTexture:Mt,isDownloadFloatTextureEnabled:Lt,isWebGLFenceEnabled:Pt}),Wt=l();function Vt(){l().set("PROD",!0)}function Ut(){l().set("DEBUG",!0)}function Gt(){l().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ht(e){l().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function qt(){Le.disposeVariables()}function jt(){return Le}function Kt(){return Le.memory()}function Xt(e){return Le.profile(e)}function Yt(e,t){return Le.tidy(e,t)}function Jt(e){Fe(e).forEach((function(e){return e.dispose()}))}function Zt(e){return Le.keep(e)}function Qt(e){return Le.time(e)}function en(e){return Le.setBackend(e)}function tn(){return Le.ready()}function nn(){return Le.backendName}function rn(e){Le.removeBackend(e)}function an(e){return Le.findBackend(e)}function sn(e){return Le.findBackendFactory(e)}function on(e,t,n){return void 0===n&&(n=1),Le.registerBackend(e,t,n)}function un(){return Le.backend}function ln(e,t){l().setPlatform(e,t)}function cn(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];l().getBool("IS_TEST")||console.warn.apply(console,e)}function hn(e,t){var n=e;if(G(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];for(var r=[];Array.isArray(n)||G(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&l().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&function e(t,n,r){if(r=r||[],Array.isArray(t)||G(t)){N(n.length>0,(function(){return"Element arr["+r.join("][")+"] should be a primitive, but is an array of "+t.length+" elements"})),N(t.length===n[0],(function(){return"Element arr["+r.join("][")+"] should have "+n[0]+" elements, but has "+t.length+" elements"}));for(var a=n.slice(1),s=0;s<t.length;++s)e(t[s],a,r.concat(s))}else N(0===n.length,(function(){return"Element arr["+r.join("][")+"] is a primitive, but should be an array/TypedArray of "+n[0]+" elements"}))}(e,r,[]),r}function pn(e,t,n,r){if(null!=e&&("numeric"!==e&&e!==t||"numeric"===e&&"string"===t))throw new Error("Argument '"+n+"' passed to '"+r+"' must be "+e+" tensor, but got "+t+" tensor")}function dn(e,t,n,r){if(void 0===r&&(r="numeric"),e instanceof xe)return pn(r,e.dtype,t,n),e;var a=Y(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),pn(r,a,t,n),null==e||!G(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){var s=null==e?"null":e.constructor.name;throw new Error("Argument '"+t+"' passed to '"+n+"' must be a Tensor or TensorLike, but got '"+s+"'")}var i=hn(e,a);G(e)||Array.isArray(e)||(e=[e]);var o="string"!==a?ee(e,a,l().getBool("DEBUG")):T(e,[],!0);return Le.makeTensor(o,i,a)}function fn(e,t,n,r){if(void 0===r&&(r="numeric"),!Array.isArray(e))throw new Error("Argument "+t+" passed to "+n+" must be a `Tensor[]` or `TensorLike[]`");return e.map((function(e,r){return dn(e,t+"["+r+"]",n)}),r)}function mn(e,t){for(var n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function gn(e,t,n){for(var r=e.length+t.length,a=[],s=0,i=0,o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function vn(e,t){for(var n=[],r=e.length,a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((function(t){return e[t]}))]}function yn(e,t){return gn(e,t.map((function(e){return 1})),t)}function bn(e,t,n){N(mn(t,n),(function(){return e+" supports only inner-most axes for now. Got axes "+t+" and rank-"+n+" input."}))}function xn(e,t){if(mn(e,t))return null;for(var n=[],r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((function(e){return n.push(e)})),n}function wn(e){return e.map((function(e,t){return[t,e]})).sort((function(e,t){return e[1]-t[1]})).map((function(e){return e[0]}))}function kn(e,t){for(var n=[],r=t-e;r<t;++r)n.push(r);return n}function In(e,t){var n=e[0].length;e.forEach((function(e,t){N(e.length===n,(function(){return"Error in concat"+n+"D: rank of tensors["+t+"] must be the same as the rank of the rest ("+n+")"}))})),N(t>=0&&t<n,(function(){return"Error in concat"+n+"D: axis must be between 0 and "+(n-1)+"."}));var r=e[0];e.forEach((function(e,a){for(var s=0;s<n;s++)N(s===t||e[s]===r[s],(function(){return"Error in concat"+n+"D: Shape of tensors["+a+"] ("+e+") does not match the shape of the rest ("+r+") along the non-concatenated axis "+a+"."}))}))}function Cn(e,t){for(var n=e[0].slice(),r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Nn(e){var t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");var n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1));var a=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];Le.startScope(n);try{var a=r.apply(void 0,e);return a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),Le.endScope(a),a}catch(e){throw Le.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}Wt.registerFlag("HAS_WEBGL",(function(){return Wt.getNumber("WEBGL_VERSION")>0})),Wt.registerFlag("WEBGL_VERSION",(function(){return Ot(2)?2:Ot(1)?1:0})),Wt.registerFlag("WEBGL_BUFFER_SUPPORTED",(function(){return 2===Wt.get("WEBGL_VERSION")})),Wt.registerFlag("WEBGL_CPU_FORWARD",(function(){return!0})),Wt.registerFlag("WEBGL_FORCE_F16_TEXTURES",(function(){return!1})),Wt.registerFlag("WEBGL_PACK",(function(){return Wt.getBool("HAS_WEBGL")})),Wt.registerFlag("WEBGL_PACK_NORMALIZATION",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_CLIP",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_DEPTHWISECONV",(function(){return!1})),Wt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_PACK_REDUCE",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_LAZILY_UNPACK",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_CONV_IM2COL",(function(){return Wt.getBool("WEBGL_PACK")})),Wt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(function(){return Dt(Wt.getNumber("WEBGL_VERSION"))})),Wt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(function(){return Ft(Wt.getNumber("WEBGL_VERSION"))})),Wt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(function(){var e=Wt.getNumber("WEBGL_VERSION");return 0===e?0:_t(e)})),Wt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(function(){return Wt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&(e=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))));var e})),Wt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(function(){return Mt(Wt.getNumber("WEBGL_VERSION"))})),Wt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(function(){return!Wt.getBool("WEBGL_FORCE_F16_TEXTURES")&&Wt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")})),Wt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(function(){return Lt(Wt.getNumber("WEBGL_VERSION"))})),Wt.registerFlag("WEBGL_FENCE_API_ENABLED",(function(){return Pt(Wt.getNumber("WEBGL_VERSION"))})),Wt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(function(){return Wt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0})),be=Ht;var Sn=Nn({complex_:function(e,t){var n=dn(e,"real","complex"),r=dn(t,"imag","complex");return S(n.shape,r.shape,"real and imag shapes, "+n.shape+" and "+r.shape+", must match in call to tf.complex()."),Le.runKernelFunc((function(e){return e.complex(n,r)}),{$real:n,$imag:r})}}),En=Nn({real_:function(e){var t=dn(e,"input","real");return Le.runKernelFunc((function(e){return e.real(t)}),{$input:t})}}),Tn=Nn({imag_:function(e){var t=dn(e,"input","imag");return Le.runKernelFunc((function(e){return e.imag(t)}),{$input:t})}});function Rn(e,t,n){return An(e,t,hn(e,n),n)}function An(e,t,n,r){if(null==r&&(r=Y(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!G(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){se(t);var a=R(t),s=R(n);N(a===s,(function(){return"Based on the provided shape, ["+t+"], the tensor should have "+a+" values but has "+s}));for(var i=0;i<n.length;++i){var o=n[i],u=i!==n.length-1||o!==R(t.slice(i));N(n[i]===t[i]||!u,(function(){return"Error creating a new Tensor. Inferred shape ("+n+") does not match the provided shape ("+t+"). "}))}}return G(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ee(e,r,l().getBool("DEBUG")):T(e,[],!0),Le.makeTensor(e,t,r)}function Dn(e,t){if((G(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&G(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return An(e,[],[],t)}function Fn(e,t){E(e);var n=hn(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return An(e,null,n,t)}function _n(e,t,n){if(E(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");var r=hn(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return An(e,t,r,n)}function $n(e,t,n){if(E(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");var r=hn(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return An(e,t,r,n)}function On(e,t,n){if(E(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");var r=hn(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return An(e,t,r,n)}function Mn(e,t,n){if(E(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");var r=hn(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return An(e,t,r,n)}function Ln(e,t,n){if(E(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");var r=hn(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return An(e,t=t||r,r,n)}function Bn(e,t,n,r){return void 0===t&&(t=!0),Le.makeVariable(e,t,n,r)}function Pn(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=Pn(e,"float32"),r=zn(e,"float32");return Sn(n,r)}var a=ne(R(e),t);return Le.makeTensor(a,e,t)}function zn(e,t){if(void 0===t&&(t="float32"),"complex64"===t){var n=zn(e,"float32"),r=zn(e,"float32");return Sn(n,r)}var a=re(R(e),t);return Le.makeTensor(a,e,t)}function Wn(e,t,n){return Le.runKernelFunc((function(r){return r.fill(e,t,n)}),{})}function Vn(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return Le.runKernelFunc((function(r){return r.linspace(e,t,n)}),{})}function Un(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r="float32"),0===n)throw new Error("Cannot have a step of zero");if(e===t||e<t&&n<0||t<e&&n>1)return zn([0],r);var a=re(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(var s=1;s<a.length;s++)a[s]=a[s-1]+n;return Fn(a,r)}var Gn=Nn({onesLike_:function(e){var t=dn(e,"x","onesLike");if("complex64"===t.dtype){var n=Gn(En(t)),r=Hn(Tn(t));return Sn(n,r)}return Le.runKernelFunc((function(e){return e.onesLike(t)}),{x:t},(function(e,t){return{x:function(){return Hn(e)}}}),"OnesLike")}}),Hn=Nn({zerosLike_:function(e){var t=dn(e,"x","zerosLike");return Le.runKernelFunc((function(e){return e.zerosLike(t)}),{x:t},(function(e,t){return{x:function(){return Hn(e)}}}),"ZerosLike")}}),qn=Nn({concat_:function(e,t){void 0===t&&(t=0),N(e.length>=1,(function(){return"Pass at least one tensor to concat"}));var n=fn(e,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((function(e){if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype "+e.dtype+". ")})),t=L(t,n[0].shape)[0];var r=Cn(n.map((function(e){return e.shape})),t);if(0===R(r))return Rn([],r);if(1===(n=n.filter((function(e){return e.size>0}))).length)return n[0];var a=n.map((function(e){return e.shape}));In(a,t);var s=n,i={axis:t};return Le.runKernelFunc((function(e){return e.concat(n,t)}),s,(function(e){var n=a.map((function(e){return e[t]}));return Jn(e,n,t).map((function(e){return function(){return e}}))}),"Concat",i)}}),jn=Nn({concat1d_:function(e){return qn(e,0)}}),Kn=Nn({concat2d_:function(e,t){return qn(e,t)}}),Xn=Nn({concat3d_:function(e,t){return qn(e,t)}}),Yn=Nn({concat4d_:function(e,t){return qn(e,t)}}),Jn=Nn({split_:function(e,t,n){void 0===n&&(n=0);var r,a=dn(e,"x","split");return n=L(n,a.shape)[0],"number"==typeof t?(N(a.shape[n]%t==0,(function(){return"Number of splits must evenly divide the axis."})),r=new Array(t).fill(a.shape[n]/t)):(N(a.shape[n]===t.reduce((function(e,t){return e+t})),(function(){return"The sum of sizes must match the size of the axis dimension."})),r=t),Le.runKernelFunc((function(e){return e.split(a,r,n)}),{$x:a},(function(e){return{$x:function(){return qn(e,n)}}}))}});function Zn(e,t,n){return void 0===t&&(t="float32"),t=t||"float32",se(e),new ge(e,t,n)}function Qn(e,t){void 0===t&&(t=!1),console.log(e.toString(t))}var er=Nn({batchToSpaceND_:function(e,t,n){var r=dn(e,"x","batchToSpaceND"),a=t.reduce((function(e,t){return e*t}));return N(r.rank>=1+t.length,(function(){return"input rank is "+r.rank+" but should be > than blockShape.length "+t.length})),N(n.length===t.length,(function(){return"crops.length is "+n.length+" but should be equal to blockShape.length  "+t.length})),N(r.shape[0]%a==0,(function(){return"input tensor batch is "+r.shape[0]+" but is not divisible by the product of the elements of blockShape "+t.join(" * ")+" === "+a})),Le.runKernelFunc((function(e){return e.batchToSpaceND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.spaceToBatchND(t,n)}}}))}}),tr=Nn({cast_:function(e,t){var n=dn(e,"x","cast");if(!V(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");var r={dtype:t};return Le.runKernelFunc((function(e){return e.cast(n,t)}),{x:n},(function(e){return{x:function(){return e.clone()}}}),"Cast",r)}}),nr=Nn({cumsum_:function(e,t,n,r){void 0===t&&(t=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var a=dn(e,"x","cumsum"),s=xn([t|=0],a.rank),i=a;null!=s&&(i=a.transpose(s));var o=kn(1,a.rank)[0],u=Le.runKernelFunc((function(e){return e.cumsum(i,o,n,r)}),{permutedX:i},(function(e){return{permutedX:function(){return e.cumsum(t,n,!r)}}}));return null!=s&&(u=u.transpose(s)),u}}),rr=Nn({depthToSpace_:function(e,t,n){void 0===n&&(n="NHWC");var r=dn(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];return N(a*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+a+" and "+t+"  for depthToSpace with input shape\n      "+r.shape})),N(s*t>=0,(function(){return"Negative dimension size caused by overflow when multiplying\n      "+s+" and "+t+" for depthToSpace with input shape\n          "+r.shape})),N(i%(t*t)==0,(function(){return"Dimension size must be evenly divisible by "+t*t+" but is "+i+" for depthToSpace with input shape "+r.shape})),Le.runKernelFunc((function(e){return e.depthToSpace(r,t,n)}),{$x:r})}}),ar=Nn({expandDims_:function(e,t){void 0===t&&(t=0);var n=dn(e,"x","expandDims",null);N(t<=n.rank,(function(){return"Axis must be <= rank of the tensor"}));var r=n.shape.slice();return t<0&&(N(-(n.rank+1)<=t,(function(){return"Axis must be in the interval ["+-(n.rank+1)+", "+n.rank+"]"})),t=n.rank+t+1),r.splice(t,0,1),sr(n,r)}}),sr=Nn({reshape_:function(e,t){var n=dn(e,"x","reshape",null);t=M(t,n.size),N(n.size===R(t),(function(){return"new shape and old shape must have the same number of elements."}));var r={shape:t};return Le.runKernelFunc((function(e){return e.reshape(n,t)}),{x:n},(function(e){return{x:function(){return e.reshape(n.shape)}}}),"Reshape",r)}}),ir=Nn({spaceToBatchND_:function(e,t,n){var r=dn(e,"x","spaceToBatchND");return N(r.rank>=1+t.length,(function(){return"input rank "+r.rank+" should be > than [blockShape] "+t.length})),N(n.length===t.length,(function(){return"paddings.shape[0] "+n.length+" must be equal to [blockShape] "+t.length})),N(r.shape.reduce((function(e,r,a){return a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e}),!0),(function(){return"input spatial dimensions "+r.shape.slice(1)+" with paddings "+n.toString()+" must be divisible by blockShapes "+t.toString()})),Le.runKernelFunc((function(e){return e.spaceToBatchND(r,t,n)}),{$x:r},(function(e){return{$x:function(){return e.batchToSpaceND(t,n)}}}))}}),or=Nn({squeeze_:function(e,t){var n=dn(e,"x","squeeze");return sr(n,B(n.shape,t).newShape)}}),ur=Nn({stack_:function(e,t){void 0===t&&(t=0);var n=fn(e,"tensors","stack");if(N(n.length>=1,(function(){return"Pass at least one tensor to tf.stack"})),1===n.length)return n[0].expandDims(t);var r=n[0].rank,a=n[0].shape,s=n[0].dtype;N(t<=r,(function(){return"Axis must be <= rank of the tensor"})),n.forEach((function(e){S(a,e.shape,"All tensors passed to stack must have matching shapes")})),n.forEach((function(e){N(s===e.dtype,(function(){return"All tensors passed to stack must have matching dtypes"}))}));var i=n.map((function(e){return e.expandDims(t)}));return qn(i,t)}}),lr=Nn({unstack_:function(e,t){void 0===t&&(t=0),t=t||0;var n=dn(e,"x","unstack");N(t>=-n.shape.length&&t<n.shape.length,(function(){return"Axis = "+t+" is not in [-"+n.shape.length+", "+n.shape.length+")"})),t<0&&(t+=n.shape.length);var r={axis:t};return Le.runKernelFunc((function(e){return e.unstack(n,t)}),{x:n},(function(e){return{x:function(){return ur(e,t)}}}),"Unpack",r)}}),cr=function(e,t){return s(this,void 0,void 0,(function(){var n,r,a,s,o,u,l,c,h,p;return i(this,(function(i){switch(i.label){case 0:return n=dn(e,"x","setdiff1d"),r=dn(t,"y","setdiff1d"),N(n.dtype===r.dtype,(function(){return"x and y should have the same dtype, but got x ("+n.dtype+") and y ("+r.dtype+")."})),N(1===n.rank,(function(){return"x should be 1D tensor, but got x ("+n.shape+")."})),N(1===r.rank,(function(){return"y should be 1D tensor, but got y ("+r.shape+")."})),[4,n.data()];case 1:return a=i.sent(),[4,r.data()];case 2:for(s=i.sent(),o=new Set(s),u=0,h=0;h<a.length;h++)o.has(a[h])||u++;for(l=new ge([u],n.dtype),c=new ge([u],"int32"),h=0,p=0;h<a.length;h++)o.has(a[h])||(l.values[p]=a[h],c.values[p]=h,p++);return[2,[l.toTensor(),c.toTensor()]]}}))}))};function hr(e,t,n,r){void 0===r&&(r=!0);var a=[];if(r)(a=a.concat(t.slice(0))).push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);for(var s=t.length,i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function pr(e,t,n){void 0===n&&(n=!0);var r=[];if(n){r.push(t);for(var a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{var s=[],i=[];for(a=1;a<e;++a)a>=2*t+1||a%2==1?i.push(a):s.push(a);r.push.apply(r,s),r.push(0),r.push.apply(r,i)}return r}function dr(e,t,n,r){void 0===r&&(r=!0);var a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(var s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function fr(e,t){for(var n=[0],r=0;r<t;++r)n.push(e[r][0]);return n}function mr(e,t,n){for(var r=e.slice(0,1),a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var gr="Add",vr="AddN",yr="Div",br="FusedBatchNorm",xr="SquaredDifference",wr="Square",kr="Transpose",Ir="NonMaxSuppressionV5",Cr="BroadcastTo",Nr="OneHot",Sr="Identity",Er="Tile",Tr="PadV2",Rr="FromPixels",Ar="MaxPoolWithArgmax",Dr=Nn({add_:function(e,t){var n,r=dn(e,"a","add"),a=dn(t,"b","add");n=Ae(r,a),r=n[0],a=n[1];var s={a:r,b:a};return Le.runKernelFunc((function(e,t){var n=e.add(r,a);return t([r,a]),n}),s,null,gr)}});function Fr(e,t){for(var n=e.length,r=[],a=0;a<n;a++){var s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function _r(e,t){for(var n=[],r=0;r<t.length;r++){var a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function $r(e,t){for(var n=[],r=Math.max(e.length,t.length),a=0;a<r;a++){var s=e[e.length-a-1];null==s&&(s=1);var i=t[t.length-a-1];if(null==i&&(i=1),1===s)n.unshift(i);else if(1===i)n.unshift(s);else{if(s!==i)throw Error("Operands could not be broadcast together with shapes "+e+" and "+t+".");n.unshift(s)}}return n}var Or=Nn({abs_:function(e){var t=dn(e,"x","abs");return"complex64"===t.dtype?Le.runKernelFunc((function(e){return e.complexAbs(t)}),{$x:t}):Le.runKernelFunc((function(e,n){var r=e.abs(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().step(-1))}}}),"Abs")}}),Mr=Nn({acos_:function(e){var t=dn(e,"x","acos");return Le.runKernelFunc((function(e,n){var r=e.acos(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Dn(1).sub(n.toFloat().square()).sqrt()).neg()}}}))}}),Lr=Nn({acosh_:function(e){var t=dn(e,"x","acosh");return Le.runKernelFunc((function(e,n){var r=e.acosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(n.toFloat().square().sub(1).sqrt())}}}))}}),Br=Nn({asin_:function(e){var t=dn(e,"x","asin");return Le.runKernelFunc((function(e,n){var r=e.asin(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Dn(1).sub(n.toFloat().square()).sqrt())}}}))}}),Pr=Nn({asinh_:function(e){var t=dn(e,"x","asinh");return Le.runKernelFunc((function(e,n){var r=e.asinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.divStrict(Dn(1).add(n.toFloat().square()).sqrt())}}}))}}),zr=Nn({atan_:function(e){var t=dn(e,"x","atan");return Le.runKernelFunc((function(e,n){var r=e.atan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().square().add(1))}}}))}}),Wr=Nn({atanh_:function(e){var t=dn(e,"x","atanh");return Le.runKernelFunc((function(e,n){var r=e.atanh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(Dn(1).sub(n.toFloat().square()))}}}))}}),Vr=Nn({ceil_:function(e){var t=dn(e,"x","ceil");return Le.runKernelFunc((function(e){return e.ceil(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),Ur=Nn({clipByValue_:function(e,t,n){var r=dn(e,"x","clipByValue");N(t<=n,(function(){return"Error in clip: min ("+t+") must be less than or equal to max ("+n+")."}));var a=[r],s={min:t,max:n};return Le.runKernelFunc((function(e,a){var s=e.clip(r,t,n);return a([r]),s}),{x:r},(function(e,r){var a=r[0];return{x:function(){return e.where(a.greaterEqual(t).logicalAnd(a.lessEqual(n)),Hn(e))}}}),"ClipByValue",s,a)}}),Gr=Nn({cos_:function(e){var t=dn(e,"x","cos"),n=[t];return Le.runKernelFunc((function(e,n){var r=e.cos(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().sin().neg().mul(e)}}}),"Cos",{},n)}}),Hr=Nn({cosh_:function(e){var t=dn(e,"x","cosh");return Le.runKernelFunc((function(e,n){var r=e.cosh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().sinh().mulStrict(e)}}}))}}),qr=Nn({erf_:function(e){var t=dn(e,"x","erf");return N("int32"===t.dtype||"float32"===t.dtype,(function(){return"Input dtype must be `int32` or `float32`."})),"int32"===t.dtype&&(t=t.toFloat()),Le.runKernelFunc((function(e,n){var r=e.erf(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}}))}}),jr=Nn({exp_:function(e){var t=dn(e,"x","exp");return Le.runKernelFunc((function(e,n){var r=e.exp(t);return n([r]),r}),{x:t},(function(e,t){return{x:function(){return e.mulStrict(t[0])}}}),"Exp",{},[],[!0])}}),Kr=Nn({expm1_:function(e){var t=dn(e,"x","expm1");return Le.runKernelFunc((function(e,n){var r=e.expm1(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.exp())}}}))}}),Xr=Nn({floor_:function(e){var t=dn(e,"x","floor");return Le.runKernelFunc((function(e){return e.floor(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),Yr=Nn({log_:function(e){var t=dn(e,"x","log"),n=[t];return Le.runKernelFunc((function(e,n){var r=e.log(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.toFloat())}}}),"Log",{},n)}}),Jr=Nn({log1p_:function(e){var t=dn(e,"x","log1p");return Le.runKernelFunc((function(e,n){var r=e.log1p(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.add(1))}}}))}}),Zr=Nn({logSigmoid_:function(e){var t=dn(e,"x","logSigmoid");return Le.runKernelFunc((function(e,n){var r=e.softplus(t.neg()).neg();return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.neg().sigmoid())}}}))}}),Qr=Nn({neg_:function(e){var t=dn(e,"x","neg"),n=[t];return Le.runKernelFunc((function(e){return e.neg(t)}),{x:t},(function(e){return{x:function(){return e.neg()}}}),"Neg",{},n)}}),ea=Nn({reciprocal_:function(e){var t=dn(e,"x","reciprocal");return Le.runKernelFunc((function(e,n){var r=e.reciprocal(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.square().neg())}}}))}}),ta=Nn({round_:function(e){var t=dn(e,"x","round");return Le.runKernelFunc((function(e){return e.round(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),na=Nn({rsqrt_:function(e){var t=dn(e,"x","rsqrt"),n=[t];return Le.runKernelFunc((function(e,n){var r=e.rsqrt(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.div(n.pow(1.5).mul(2)).neg()}}}),"Rsqrt",{},n)}}),ra=Nn({sigmoid_:function(e){var t=dn(e,"x","sigmoid");return Le.runKernelFunc((function(e,n){var r=e.sigmoid(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mul(n.mul(Dn(1).sub(n)))}}}),"Sigmoid")}}),aa=Nn({sign_:function(e){var t=dn(e,"x","sign");return Le.runKernelFunc((function(e){return e.sign(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),sa=Nn({isNaN_:function(e){var t=dn(e,"x","isNaN");return Le.runKernelFunc((function(e){return e.isNaN(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),ia=Nn({isInf_:function(e){var t=dn(e,"x","isInf");return Le.runKernelFunc((function(e){return e.isInf(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),oa=Nn({isFinite_:function(e){var t=dn(e,"x","isFinite");return Le.runKernelFunc((function(e){return e.isFinite(t)}),{$x:t},(function(e){return{$x:function(){return Hn(e)}}}))}}),ua=Nn({sin_:function(e){var t=dn(e,"x","sin"),n=[t];return Le.runKernelFunc((function(e,n){var r=e.sin(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return n.toFloat().cos().mul(e)}}}),"Sin",{},n)}}),la=Nn({sinh_:function(e){var t=dn(e,"x","sinh");return Le.runKernelFunc((function(e,n){var r=e.sinh(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return n.toFloat().cosh().mulStrict(e)}}}))}}),ca=Nn({softplus_:function(e){var t=dn(e,"x","softplus");return Le.runKernelFunc((function(e,n){var r=e.softplus(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.mul(n.sigmoid())}}}))}}),ha=Nn({sqrt_:function(e){var t=dn(e,"x","sqrt");return Le.runKernelFunc((function(e,n){var r=e.sqrt(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.toFloat().sqrt().mul(2))}}}))}}),pa=Nn({step_:function(e,t){void 0===t&&(t=0);var n=dn(e,"x","step");return Le.runKernelFunc((function(e){return e.step(n,t)}),{$x:n},(function(e){return{$x:function(){return Hn(e)}}}))}}),da=Nn({tan_:function(e){var t=dn(e,"x","tan");return Le.runKernelFunc((function(e,n){var r=e.tan(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return e.div(n.cos().square())}}}))}}),fa=Nn({tanh_:function(e){var t=dn(e,"x","tanh");return Le.runKernelFunc((function(e,n){var r=e.tanh(t);return n([r]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return Dn(1).sub(n.square()).mulStrict(e)}}}),"Tanh",{},null,[!0])}}),ma=Nn({addStrict_:function(e,t){var n=dn(e,"a","addStrict"),r=dn(t,"b","addStrict");return S(n.shape,r.shape,"Error in addStrict: "),n.add(r)}}),ga=Nn({atan2_:function(e,t){var n,r=dn(e,"a","atan2"),a=dn(t,"b","atan2");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape);return Le.runKernelFunc((function(e,t){var n=e.atan2(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=Dr(n.square(),r.square()),a=e.mul(r.div(t)),i=_r(n.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},$b:function(){var t=Dr(n.square(),r.square()),a=Qr(e.mul(n.div(t))),i=_r(r.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(r.shape)}}}))}}),va=Nn({divStrict_:function(e,t){var n=dn(e,"a","div"),r=dn(t,"b","div");return S(n.shape,r.shape,"Error in divideStrict: "),n.div(r)}}),ya=Nn({floorDiv_:function(e,t){var n,r=dn(e,"a","floorDiv"),a=dn(t,"b","floorDiv");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape);return Le.runKernelFunc((function(e,t){var n=e.floorDiv(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.div(r.toFloat()),a=_r(n.shape,s);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=_r(r.shape,s);a.length>0&&(t=t.sum(a).reshape(r.shape));var i=r.square();return t.div(i.toFloat()).neg()}}}),"FloorDiv")}}),ba=Nn({maximum_:function(e,t){var n,r=dn(e,"a","maximum"),a=dn(t,"b","maximum");return n=Ae(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),$r(r.shape,a.shape),Le.runKernelFunc((function(e,t){var n=e.maximum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.greaterEqual(r).toFloat())},b:function(){return e.mul(n.less(r).toFloat())}}}),"Maximum")}}),xa=Nn({maximumStrict_:function(e,t){var n=dn(e,"a","maximumStrict"),r=dn(t,"b","maximumStrict");return S(n.shape,r.shape,"Error in maximumStrict: "),n.maximum(r)}}),wa=Nn({minimum_:function(e,t){var n,r=dn(e,"a","minimum"),a=dn(t,"b","minimum");return n=Ae(r,a),r=n[0],a=n[1],"bool"===r.dtype&&(r=r.toInt(),a=a.toInt()),$r(r.shape,a.shape),Le.runKernelFunc((function(e,t){var n=e.minimum(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return e.mul(n.lessEqual(r).toFloat())},b:function(){return e.mul(n.greater(r).toFloat())}}}),"Minimum")}}),ka=Nn({minimumStrict_:function(e,t){var n=dn(e,"a","minimumStrict"),r=dn(t,"b","minimumStrict");return S(n.shape,r.shape,"Error in minimumStrict: "),n.minimum(r)}}),Ia=Nn({mod_:function(e,t){var n,r=dn(e,"a","mod"),a=dn(t,"b","mod");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape);return Le.runKernelFunc((function(e,t){var n=e.mod(r,a);return t([r,a]),n}),{$a:r,$b:a},(function(e,t){var n=t[0],r=t[1];return{$a:function(){var t=_r(n.shape,s);return t.length>0?e.sum(t).reshape(n.shape):e},$b:function(){var t=e.mul(n.div(r).floor().neg()),a=_r(r.shape,s);return a.length>0?t.sum(a).reshape(r.shape):t}}}))}}),Ca=Nn({modStrict_:function(e,t){var n=dn(e,"a","modStrict"),r=dn(t,"b","modStrict");return S(n.shape,r.shape,"Error in modStrict: "),n.mod(r)}}),Na=Nn({mul_:function(e,t){var n,r=dn(e,"a","mul"),a=dn(t,"b","mul");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape);return Le.runKernelFunc((function(e,t){var n=e.multiply(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){var t=e.mul(r.toFloat()),a=_r(n.shape,s);return a.length>0?t.sum(a).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),a=_r(r.shape,s);return a.length>0?t.sum(a).reshape(r.shape):t}}}),"Mul")}}),Sa=Nn({mulStrict_:function(e,t){var n=dn(e,"a","mul"),r=dn(t,"b","mul");return S(n.shape,r.shape,"Error in multiplyStrict: "),n.mul(r)}}),Ea=Nn({pow_:function(e,t){var n,r=dn(e,"base","pow"),a=dn(t,"exp","pow");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape),i=[r,a];return Le.runKernelFunc((function(e,t){var n=e.pow(r,a);return t([r,a,n]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1],a=t[2];return{a:function(){var t=r.toFloat(),a=e.mul(t.mul(n.pow(t.sub(Dn(1))))),i=_r(n.shape,s);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},b:function(){var t=n.greater(0),i=n.log().where(t,Hn(n)),o=e.mul(a.mul(i)),u=_r(r.shape,s);return u.length>0&&(o=o.sum(u)),o.reshape(r.shape)}}}),"Pow",{},i,[!0])}}),Ta=Nn({powStrict_:function(e,t){return S(e.shape,t.shape,"Error in powStrict: "),e.pow(t)}}),Ra=Nn({squaredDifferenceStrict_:function(e,t){var n=dn(e,"a","squaredDifferenceStrict"),r=dn(t,"b","squaredDifferenceStrict");return S(n.shape,r.shape,"Error in squaredDifferenceStrict: "),n.squaredDifference(r)}}),Aa=Nn({sub_:function(e,t){var n,r=dn(e,"a","sub"),a=dn(t,"b","sub");n=Ae(r,a),r=n[0],a=n[1];var s=$r(r.shape,a.shape);return Le.runKernelFunc((function(e){return e.subtract(r,a)}),{a:r,b:a},(function(e){return{a:function(){var t=e,n=_r(r.shape,s);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)},b:function(){var t=e,n=_r(a.shape,s);return n.length>0&&(t=t.sum(n)),t.neg().reshape(a.shape)}}}),"Sub")}}),Da=Nn({subStrict_:function(e,t){var n=dn(e,"a","subStrict"),r=dn(t,"b","subStrict");return S(n.shape,r.shape,"Error in subStrict: "),n.sub(r)}}),Fa=Nn({div_:function(e,t){var n,r=dn(e,"a","div"),a=dn(t,"b","div");if(n=Ae(r,a),r=n[0],a=n[1],"int32"===r.dtype&&"int32"===a.dtype)return ya(r,a);var s={a:r,b:a};return Le.runKernelFunc((function(e,t){var n=e.realDivide(r,a);return t([r,a]),n}),s,null,yr,{})}});function _a(e,t){if(e.rank<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher, but the rank was "+e.rank+".");if(t.rank<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type, but the dtype was "+t.dtype+".");if(t.shape[t.rank-1]>e.rank)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+t.shape[t.rank-1]+" vs. "+e.rank);if(0===e.size)throw new Error("Requested more than 0 entries, but input is empty. Input shape: "+e.shape+".");for(var n=t.shape,r=n[n.length-1],a=1,s=0;s<n.length-1;++s)a*=n[s];var i=e.shape,o=n.slice();o.pop();var u=1;for(s=r;s<e.rank;++s)u*=i[s],o.push(i[s]);var l=Q(e.shape).map((function(e){return e/u})).concat([1]).slice(0,r);return[o,a,u,l]}var $a=Object.freeze({prepareAndValidate:_a});function Oa(e){return e<=30?e:Z(e,Math.floor(Math.sqrt(e)))}function Ma(e,t,n){var r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+", indices.shape: "+t.shape+", shape: "+e+", sliceDim: "+r+", and batchDim: "+a+".";if(n.rank<a)throw new Error(s+" update.rank < "+a+". ");if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(var i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+" updates.shape["+i+"] ("+n.shape[i]+") != indices.shape["+i+"] ("+t.shape[i]+").");for(i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+" updates.shape["+(i+a)+"] ("+n.shape[i+a]+") != shape["+(i+a)+"] ("+e[i+a]+")")}function La(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher, but the rank was "+t.rank+".");if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher, but the rank was "+e.rank+".");if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}Ma(n,t,e)}function Ba(e,t,n){for(var r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1,o=a;o<s;++o)i*=n[o];var u=a<1?1:a;return{sliceRank:a,numUpdates:R(t.shape)/u,sliceSize:i,strides:Q(n.slice(0,a)).concat([1]),outputSize:R(n)}}var Pa=Object.freeze({validateUpdateShape:Ma,validateInput:La,calculateShapes:Ba});function za(e,t,n){N(e.rank===t.length,(function(){return"Error in slice"+e.rank+"D: Length of begin "+t+" must match the rank of the array ("+e.rank+")."})),N(e.rank===n.length,(function(){return"Error in slice"+e.rank+"D: Length of size "+n+" must match the rank of the array ("+e.rank+")."}));for(var r=function(r){N(t[r]+n[r]<=e.shape[r],(function(){return"Error in slice"+e.rank+"D: begin["+r+"] + size["+r+"] ("+(t[r]+n[r])+") would overflow input.shape["+r+"] ("+e.shape[r]+")"}))},a=0;a<e.rank;++a)r(a)}function Wa(e){for(var t=[],n=0;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Va(e,t,n){for(var r=[],a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ua(e,t,n,r,a){var s=t[a],i=n[a]||1;(e&1<<a||null==s)&&(s=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var o=r[a];return s<0&&(s+=o),k(0,s,o-1)}function Ga(e,t,n,r,a){var s=t[a],i=n[a]||1;(e&1<<a||null==s)&&(s=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var o=r[a];return s<0&&(s+=o),i>0?k(0,s,o):k(-1,s,o-1)}function Ha(e,t,n){for(var r=n.length,a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function qa(e,t){for(var n=e.length>0?e[e.length-1]:1,r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}var ja=Object.freeze({assertParamsValid:za,maskToAxes:Wa,computeOutShape:Va,startForAxis:Ua,stopForAxis:Ga,isSliceContinous:Ha,computeFlatOffset:qa});function Ka(e){return N(J(e),(function(){return"The f passed in grad(f) must be a function"})),function(t,n){var r=dn(t,"x","tf.grad",null),a=null!=n?dn(n,"dy","tf.grad"):null;return Le.tidy((function(){var t=Le.gradients((function(){return e(r)}),[r],a),n=t.value,s=t.grads;return null!=a&&S(n.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),es(s),s[0]}))}}function Xa(e){return N(J(e),(function(){return"The f passed in grads(f) must be a function"})),function(t,n){N(Array.isArray(t),(function(){return"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"}));var r=fn(t,"args","tf.grads",null),a=null!=n?dn(n,"dy","tf.grads"):null;return Le.tidy((function(){var t=Le.gradients((function(){return e.apply(void 0,r)}),r,a),n=t.value,s=t.grads;return null!=a&&S(n.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),es(s),s}))}}function Ya(e){return N(J(e),(function(){return"The f passed in valueAndGrad(f) must be a function"})),function(t,n){N(t instanceof xe,(function(){return"The x passed in valueAndGrad(f)(x) must be a tensor"})),N(null==n||n instanceof xe,(function(){return"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"}));var r=Le.gradients((function(){return e(t)}),[t],n),a=r.grads,s=r.value;return es(a),{grad:a[0],value:s}}}function Ja(e){return N(J(e),(function(){return"The f passed in valueAndGrads(f) must be a function"})),function(t,n){N(Array.isArray(t)&&t.every((function(e){return e instanceof xe})),(function(){return"The args passed in valueAndGrads(f)(args) must be array of tensors"})),N(null==n||n instanceof xe,(function(){return"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"}));var r=Le.gradients((function(){return e.apply(void 0,t)}),t,n);return null!=n&&S(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),es(r.grads),r}}function Za(e,t){N(J(e),(function(){return"The f passed in variableGrads(f) must be a function"})),N(null==t||Array.isArray(t)&&t.every((function(e){return e instanceof Se})),(function(){return"The varList passed in variableGrads(f, varList) must be an array of variables"}));var n=null!=t;if(!n)for(var r in t=[],Le.registeredVariables)t.push(Le.registeredVariables[r]);var a=n?t.filter((function(e){return!e.trainable})):null,s=t.length;N((t=t.filter((function(e){return e.trainable}))).length>0,(function(){return"variableGrads() expects at least one of the input variables to be trainable, but none of the "+s+" variables is trainable."}));var i=Le.gradients(e,t,null,!0),o=i.value,u=i.grads;N(u.some((function(e){return null!=e})),(function(){return"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."})),N(0===o.rank,(function(){return"The f passed in variableGrads(f) must return a scalar, but it returned a rank-"+o.rank+" tensor"}));var l={};return t.forEach((function(e,t){null!=u[t]&&(l[e.name]=u[t])})),null!=a&&a.forEach((function(e){return l[e.name]=null})),{value:o,grads:l}}function Qa(e){return Le.customGrad(e)}function es(e){if(e.filter((function(e){return null==e})).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var ts=Nn({softmax_:function(e,t){void 0===t&&(t=-1);var n=dn(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and dim was "+t);return Le.runKernelFunc((function(e,r){var a=e.softmax(n,t);return r([a]),a}),{logits:n},(function(e,n){var r=n[0],a=e.mul(r);return{logits:function(){return a.sub(a.sum([t],!0).mul(r))}}}),"Softmax",{dim:t},[],[!0])}}),ns=Nn({logSoftmax_:function(e,t){void 0===t&&(t=-1);var n=dn(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. Logits was rank "+n.rank+" and axis was "+t);return Qa((function(e,n){var r=e.max(t,!0),a=e.sub(r),s=a.toFloat().sub(a.exp().sum(t,!0).log());return n([s]),{value:s,gradFunc:function(e,n){var r=n[0].exp();return e.sub(e.sum(t,!0).mul(r))}}}))(n)}}),rs=Nn({transpose_:function(e,t){var n=dn(e,"x","transpose");if(null==t&&(t=n.shape.map((function(e,t){return t})).reverse()),N(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of perm "+t+"."})),t.forEach((function(e){N(e>=0&&e<n.rank,(function(){return"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t}))})),n.rank<=1)return n.clone();var r={perm:t};return Le.runKernelFunc((function(e){return e.transpose(n,t)}),{x:n},null,"Transpose",r)}}),as=function(){function e(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}return e.prototype.get=function(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)},e.prototype.set=function(e,t){this.dataIdsCount++,this.data.set(e,t)},e.prototype.has=function(e){return this.data.has(e)},e.prototype.delete=function(e){return this.dataIdsCount--,this.data.delete(e)},e.prototype.numDataIds=function(){return this.dataIdsCount},e}(),ss=function(){function e(){}return e.prototype.time=function(e){return is("time")},e.prototype.read=function(e){return is("read")},e.prototype.readSync=function(e){return is("readSync")},e.prototype.numDataIds=function(){return is("numDataIds")},e.prototype.disposeData=function(e){return is("disposeData")},e.prototype.write=function(e,t,n){return is("write")},e.prototype.move=function(e,t,n,r){return is("move")},e.prototype.memory=function(){return is("memory")},e.prototype.floatPrecision=function(){return is("floatPrecision")},e.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},e.prototype.batchMatMul=function(e,t,n,r){return is("batchMatMul")},e.prototype.fusedBatchMatMul=function(e){return e.a,e.b,e.transposeA,e.transposeB,e.bias,e.activation,e.preluActivationWeights,is("fusedBatchMatMul")},e.prototype.slice=function(e,t,n){return is("slice")},e.prototype.stridedSlice=function(e,t,n,r){return is("stridedSlice")},e.prototype.unstack=function(e,t){return is("unstack")},e.prototype.reverse=function(e,t){return is("reverse")},e.prototype.concat=function(e,t){return is("concat")},e.prototype.neg=function(e){return is("neg")},e.prototype.add=function(e,t){return is("add")},e.prototype.addN=function(e){return is("addN")},e.prototype.subtract=function(e,t){return is("subtract")},e.prototype.multiply=function(e,t){return is("multiply")},e.prototype.realDivide=function(e,t){return is("realDivide")},e.prototype.floorDiv=function(e,t){return is("floorDiv")},e.prototype.sum=function(e,t){return is("sum")},e.prototype.prod=function(e,t){return is("prod")},e.prototype.unsortedSegmentSum=function(e,t,n){return is("unsortedSegmentSum")},e.prototype.argMin=function(e,t){return is("argMin")},e.prototype.argMax=function(e,t){return is("argMax")},e.prototype.equal=function(e,t){return is("equal")},e.prototype.notEqual=function(e,t){return is("notEqual")},e.prototype.less=function(e,t){return is("less")},e.prototype.lessEqual=function(e,t){return is("lessEqual")},e.prototype.greater=function(e,t){return is("greater")},e.prototype.greaterEqual=function(e,t){return is("greaterEqual")},e.prototype.logicalNot=function(e){return is("logicalNot")},e.prototype.logicalAnd=function(e,t){return is("logicalAnd")},e.prototype.logicalOr=function(e,t){return is("logicalOr")},e.prototype.where=function(e){return is("where")},e.prototype.select=function(e,t,n){return is("select")},e.prototype.topk=function(e,t,n){return is("topk")},e.prototype.min=function(e,t){return is("min")},e.prototype.minimum=function(e,t){return is("minimum")},e.prototype.mod=function(e,t){return is("mod")},e.prototype.max=function(e,t){return is("max")},e.prototype.maximum=function(e,t){return is("maximum")},e.prototype.all=function(e,t){return is("all")},e.prototype.any=function(e,t){return is("any")},e.prototype.squaredDifference=function(e,t){return is("squaredDifference")},e.prototype.ceil=function(e){return is("ceil")},e.prototype.floor=function(e){return is("floor")},e.prototype.round=function(e){return is("round")},e.prototype.sign=function(e){return is("sign")},e.prototype.isNaN=function(e){return is("isNaN")},e.prototype.isInf=function(e){return is("isInf")},e.prototype.isFinite=function(e){return is("isFinite")},e.prototype.pow=function(e,t){return is("pow")},e.prototype.exp=function(e){return is("exp")},e.prototype.expm1=function(e){return is("expm1")},e.prototype.softmax=function(e,t){return is("softmax")},e.prototype.log=function(e){return is("log")},e.prototype.log1p=function(e){return is("log1p")},e.prototype.sqrt=function(e){return is("sqrt")},e.prototype.rsqrt=function(e){return is("rsqrt")},e.prototype.square=function(e){return is("square")},e.prototype.reciprocal=function(e){return is("reciprocal")},e.prototype.relu=function(e){return is("relu")},e.prototype.relu6=function(e){return is("relu6")},e.prototype.prelu=function(e,t){return is("prelu")},e.prototype.elu=function(e){return is("elu")},e.prototype.eluDer=function(e,t){return is("eluDer")},e.prototype.selu=function(e){return is("selu")},e.prototype.int=function(e){return is("int")},e.prototype.clip=function(e,t,n){return is("clip")},e.prototype.abs=function(e){return is("abs")},e.prototype.complexAbs=function(e){return is("complexAbs")},e.prototype.sigmoid=function(e){return is("sigmoid")},e.prototype.softplus=function(e){return is("softplus")},e.prototype.sin=function(e){return is("sin")},e.prototype.cos=function(e){return is("cos")},e.prototype.tan=function(e){return is("tan")},e.prototype.asin=function(e){return is("asin")},e.prototype.acos=function(e){return is("acos")},e.prototype.atan=function(e){return is("atan")},e.prototype.atan2=function(e,t){return is("atan2")},e.prototype.sinh=function(e){return is("sinh")},e.prototype.cosh=function(e){return is("cosh")},e.prototype.tanh=function(e){return is("tanh")},e.prototype.asinh=function(e){return is("asinh")},e.prototype.acosh=function(e){return is("acosh")},e.prototype.atanh=function(e){return is("atanh")},e.prototype.erf=function(e){return is("erf")},e.prototype.step=function(e,t){return is("step")},e.prototype.fusedConv2d=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,is("fusedConv2d")},e.prototype.conv2d=function(e,t,n){return is("conv2d")},e.prototype.conv2dDerInput=function(e,t,n){return is("conv2dDerInput")},e.prototype.conv2dDerFilter=function(e,t,n){return is("conv2dDerFilter")},e.prototype.fusedDepthwiseConv2D=function(e){return e.input,e.filter,e.convInfo,e.bias,e.activation,e.preluActivationWeights,is("fusedDepthwiseConv2D")},e.prototype.depthwiseConv2D=function(e,t,n){return is("depthwiseConv2D")},e.prototype.depthwiseConv2DDerInput=function(e,t,n){return is("depthwiseConv2DDerInput")},e.prototype.depthwiseConv2DDerFilter=function(e,t,n){return is("depthwiseConv2DDerFilter")},e.prototype.conv3d=function(e,t,n){return is("conv3d")},e.prototype.conv3dDerInput=function(e,t,n){return is("conv3dDerInput")},e.prototype.conv3dDerFilter=function(e,t,n){return is("conv3dDerFilter")},e.prototype.maxPool=function(e,t){return is("maxPool")},e.prototype.maxPoolBackprop=function(e,t,n,r){return is("maxPoolBackprop")},e.prototype.avgPool=function(e,t){return is("avgPool")},e.prototype.avgPoolBackprop=function(e,t,n){return is("avgPoolBackprop")},e.prototype.avgPool3d=function(e,t){return is("avgPool3d")},e.prototype.avgPool3dBackprop=function(e,t,n){return is("avgPool3dBackprop")},e.prototype.maxPool3d=function(e,t){return is("maxPool3d")},e.prototype.maxPool3dBackprop=function(e,t,n,r){return is("maxPool3dBackprop")},e.prototype.reshape=function(e,t){return is("reshape")},e.prototype.cast=function(e,t){return is("cast")},e.prototype.tile=function(e,t){return is("tile")},e.prototype.pad=function(e,t,n){return is("pad")},e.prototype.transpose=function(e,t){return is("transpose")},e.prototype.gather=function(e,t,n){return is("gather")},e.prototype.gatherND=function(e,t){return is("gatherND")},e.prototype.scatterND=function(e,t,n){return is("scatterND")},e.prototype.batchToSpaceND=function(e,t,n){return is("batchToSpaceND")},e.prototype.spaceToBatchND=function(e,t,n){return is("spaceToBatchND")},e.prototype.resizeBilinear=function(e,t,n,r){return is("resizeBilinear")},e.prototype.resizeBilinearBackprop=function(e,t,n){return is("resizeBilinearBackprop")},e.prototype.resizeNearestNeighbor=function(e,t,n,r){return is("resizeNearestNeighbor")},e.prototype.resizeNearestNeighborBackprop=function(e,t,n){return is("resizeNearestNeighborBackprop")},e.prototype.batchNormalization=function(e,t,n,r,a,s){return is("batchNormalization")},e.prototype.localResponseNormalization4D=function(e,t,n,r,a){return is("localResponseNormalization4D")},e.prototype.LRNGrad=function(e,t,n,r,a,s,i){return is("LRNGrad")},e.prototype.multinomial=function(e,t,n,r){return is("multinomial")},e.prototype.oneHot=function(e,t,n,r){return is("oneHot")},e.prototype.cumsum=function(e,t,n,r){return is("cumsum")},e.prototype.nonMaxSuppression=function(e,t,n,r,a){return is("nonMaxSuppression")},e.prototype.fft=function(e){return is("fft")},e.prototype.ifft=function(e){return is("ifft")},e.prototype.complex=function(e,t){return is("complex")},e.prototype.real=function(e){return is("real")},e.prototype.imag=function(e){return is("imag")},e.prototype.cropAndResize=function(e,t,n,r,a,s){return is("cropAndResize")},e.prototype.depthToSpace=function(e,t,n){return is("depthToSpace")},e.prototype.split=function(e,t,n){return is("split")},e.prototype.sparseToDense=function(e,t,n,r){return is("sparseToDense")},e.prototype.diag=function(e){return is("diag")},e.prototype.fill=function(e,t,n){return is("fill")},e.prototype.onesLike=function(e){return is("onesLike")},e.prototype.zerosLike=function(e){return is("zerosLike")},e.prototype.linspace=function(e,t,n){return is("linspace")},e.prototype.dispose=function(){return is("dispose")},e}();function is(e){throw new Error("'"+e+"' not yet implemented or not found in the registry. Did you forget to import the kernel?")}function os(e,t,n,r,a,s,i){void 0===i&&(i="channelsLast");var o,u=ps(t),l=u[0],c=u[1];if("channelsLast"===i)o=[l,c,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);o=[l,c,e[1],e[1]]}return ls(e,o,n,r,a,s,!1,i)}function us(e,t,n,r,a,s,i){void 0===i&&(i="NDHWC");var o,u,l=ds(t),c=l[0],h=l[1],p=l[2];if("NDHWC"===i)u="channelsLast",o=[c,h,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error("Unknown dataFormat "+i);u="channelsFirst",o=[c,h,p,e[1],e[1]]}return cs(e,o,n,r,a,!1,u,s)}function ls(e,t,n,r,a,s,i,o){void 0===i&&(i=!1),void 0===o&&(o="channelsLast");var u=[-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],p=u[3];if("channelsLast"===o)l=e[0],c=e[1],h=e[2],p=e[3];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=e[0],p=e[1],c=e[2],h=e[3]}var d,f=t[0],m=t[1],g=t[3],v=ps(n),y=v[0],b=v[1],x=ps(r),w=x[0],k=x[1],I=fs(f,w),C=fs(m,k),S=function(e,t,n,r,a,s,i,o){var u,l,c;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};var h=function(e,t,n,r,a){null==r&&(r=hs(e,t,n));var s=e[1],i=ms((e[0]-t+2*r)/n+1,a);N(D(i),(function(){return"The output # of rows ("+i+") must be an integer. Change the stride and/or zero pad parameters"}));var o=ms((s-t+2*r)/n+1,a);return N(D(o),(function(){return"The output # of columns ("+o+") must be an integer. Change the stride and/or zero pad parameters"})),[i,o]}([t,n],s,r,e,o);l=h[0],c=h[1]}else if("same"===e){l=Math.ceil(t/r),c=Math.ceil(n/a);var p=Math.max(0,(l-1)*r+s-t),d=Math.max(0,(c-1)*a+i-n),f=Math.floor(p/2),m=p-f,g=Math.floor(d/2);u={top:f,bottom:m,left:g,right:d-g,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),c=Math.ceil((n-i+1)/a)}return{padInfo:u,outHeight:l,outWidth:c}}(a,c,h,y,b,I,C,s),E=S.padInfo,T=S.outHeight,R=S.outWidth,A=i?g*p:g;return"channelsFirst"===o?d=[l,A,T,R]:"channelsLast"===o&&(d=[l,T,R,A]),{batchSize:l,dataFormat:o,inHeight:c,inWidth:h,inChannels:p,outHeight:T,outWidth:R,outChannels:A,padInfo:E,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationHeight:w,dilationWidth:k,inShape:e,outShape:d,filterShape:t}}function cs(e,t,n,r,a,s,i,o){void 0===s&&(s=!1),void 0===i&&(i="channelsLast");var u=[-1,-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],p=u[3],d=u[4];if("channelsLast"===i)l=e[0],c=e[1],h=e[2],p=e[3],d=e[4];else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);l=e[0],d=e[1],c=e[2],h=e[3],p=e[4]}var f,m=t[0],g=t[1],v=t[2],y=t[4],b=ds(n),x=b[0],w=b[1],k=b[2],I=ds(r),C=I[0],S=I[1],E=I[2],T=fs(m,C),R=fs(g,S),A=fs(v,E),F=function(e,t,n,r,a,s,i,o,u,l,c){var h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};var m=function(e,t,n,r,a,s){null==a&&(a=hs(e,t,r));var i=e[1],o=e[2],u=ms((e[0]-t+2*a)/r+1,s);N(D(u),(function(){return"The output # of depths ("+u+") must be an integer. Change the stride and/or zero pad parameters"}));var l=ms((i-t+2*a)/r+1,s);N(D(l),(function(){return"The output # of rows ("+l+") must be an integer. Change the stride and/or zero pad parameters"}));var c=ms((o-t+2*a)/r+1,s);return N(D(c),(function(){return"The output # of columns ("+c+") must be an integer. Change the stride and/or zero pad parameters"})),[u,l,c,1]}([t,n,r,1],o,0,a,e,c);p=m[0],d=m[1],f=m[2]}else if("same"===e){var g=((p=Math.ceil(t/a))-1)*a+o-t,v=((d=Math.ceil(n/s))-1)*s+u-n,y=((f=Math.ceil(r/i))-1)*i+l-r,b=Math.floor(g/2),x=g-b,w=Math.floor(v/2),k=v-w,I=Math.floor(y/2);h={top:w,bottom:k,left:I,right:y-I,front:b,back:x,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,c,h,p,x,w,k,T,R,A,o),_=F.padInfo,$=F.outDepth,O=F.outHeight,M=F.outWidth,L=s?y*d:y;return"channelsFirst"===i?f=[l,L,$,O,M]:"channelsLast"===i&&(f=[l,$,O,M,L]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:h,inWidth:p,inChannels:d,outDepth:$,outHeight:O,outWidth:M,outChannels:L,padInfo:_,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:m,filterHeight:g,filterWidth:v,effectiveFilterDepth:T,effectiveFilterHeight:R,effectiveFilterWidth:A,dilationDepth:C,dilationHeight:S,dilationWidth:E,inShape:e,outShape:f,filterShape:t}}function hs(e,t,n,r){void 0===r&&(r=1);var a=fs(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function ps(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function ds(e){return"number"==typeof e?[e,e,e]:e}function fs(e,t){return t<=1?e:e+(e-1)*(t-1)}function ms(e,t){if(!t)return e;switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function gs(e){var t=ps(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function vs(e,t){return gs(e)||gs(t)}function ys(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}function bs(e,t,n){if("complex64"===t){if("complex64"===e.dtype)return e.clone();var r=zn(e.shape),a=e.toFloat(),s=n.complex(a,r);return r.dispose(),a.dispose(),s}if(!U(e.dtype,t))return Le.makeTensorFromDataId(e.dataId,e.shape,t);if("complex64"===e.dtype){var i=n.real(e);return s=i.cast(t),i.dispose(),s}if("int32"===t)return n.int(e);if("bool"===t){var o=Dn(0,e.dtype);return s=n.notEqual(e,o),o.dispose(),s}throw new Error("Error in Cast: failed to cast "+e.dtype+" to "+t)}function xs(e,t){return Le.makeTensorFromDataId(e.dataId,t,e.dtype)}function ws(e,t,n){var r=(t-e)/(n-1),a=re(n,"float32");a[0]=e;for(var s=1;s<a.length;s++)a[s]=a[s-1]+r;return Fn(a,"float32")}var ks=Object.freeze({castTensor:bs,reshapeTensor:xs,linspaceImpl:ws,upcastType:Te,axesAreInnerMostDims:mn,combineLocations:gn,computeOutAndReduceShapes:vn,expandShapeToKeepDim:yn,assertAxesAreInnerMostDims:bn,getAxesPermutation:xn,getUndoAxesPermutation:wn,getInnerMostAxes:kn,getBroadcastDims:Fr,getReductionAxes:_r,assertAndGetBroadcastShape:$r,assertParamsConsistent:In,computeOutShape:Cn,computePool2DInfo:os,computePool3DInfo:us,computeConv2DInfo:ls,computeConv3DInfo:cs,computeDefaultPad:hs,tupleValuesAreOne:gs,eitherStridesOrDilationsAreOne:vs,convertConv2DDataFormat:ys,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:Oa});function Is(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+e.length+", imag: "+t.length+".");for(var n=new Float32Array(2*e.length),r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Cs(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ns(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Ss(e,t,n){var r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Es(e,t,n){var r=function(e,t,n){return function(e,t,n){for(var r=0,a=e.length,s=0,i=!1;r<a;){var o=n(t,e[s=r+(a-r>>>1)]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Ts)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Ts(e,t){return e>t?1:e<t?-1:0}function Rs(e,t,n,r,a){return Ds(e,t,n,r,a,0).selectedIndices}function As(e,t,n,r,a,s){var i=Ds(e,t,n,r,a,s,!0);return i.numValidOutputs.dispose(),{selectedIndices:i.selectedIndices,selectedScores:i.selectedScores}}function Ds(e,t,n,r,a,s,i,o){void 0===i&&(i=!1),void 0===o&&(o=!1);for(var u=Array.from(t).map((function(e,t){return{score:e,boxIndex:t,suppressBeginIndex:0}})).filter((function(e){return e.score>a})).sort($s),l=s>0?-.5/s:0,c=[],h=[];c.length<n&&u.length>0;){var p=u.pop(),d=p.score,f=p.boxIndex,m=p.suppressBeginIndex;if(d<a)break;for(var g=!1,v=c.length-1;v>=m;--v){var y=Fs(e,f,c[v]);if(y>=r){g=!0;break}if(p.score=p.score*_s(r,l,y),p.score<=a)break}p.suppressBeginIndex=c.length,g||(p.score===d?(c.push(f),h.push(p.score)):p.score>a&&Es(u,p,$s))}var b=c.length;return o&&(c.fill(0,b),h.fill(0,b)),{selectedIndices:Fn(c,"int32"),selectedScores:Fn(h,"float32"),numValidOutputs:Dn(b,"int32")}}function Fs(e,t,n){var r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;var m=Math.max(s,l),g=Math.max(i,c),v=Math.min(o,h),y=Math.min(u,p),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(d+f-b)}function _s(e,t,n){var r=Math.exp(t*n*n);return n<=e?r:0}function $s(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}function Os(e,t,n){var r=new Array(e.rank).fill(0),a=e.shape.slice();return t.map((function(t){a[n]=t;var s=e.slice(r,a);return r[n]+=t,s}))}function Ms(e,t){for(var n=new Array(e.rank),r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];var a=Zn(n,e.dtype);for(r=0;r<a.values.length;++r){for(var s=a.indexToLoc(r),i=new Array(e.rank),o=0;o<i.length;o++)i[o]=s[o]%e.shape[o];var u=e.locToIndex(i);a.values[r]=e.values[u]}return a.toTensor()}function Ls(e,t,n,r,a){for(var s=t[t.length-1],i=[e.length/s,s],o=i[0],u=i[1],l=P(n,o*r),c=P("int32",o*r),h=0;h<o;h++){for(var p=h*u,d=e.subarray(p,p+u),f=[],m=0;m<d.length;m++)f.push({value:d[m],index:m});f.sort((function(e,t){return t.value-e.value}));var g=h*r,v=l.subarray(g,g+r),y=c.subarray(g,g+r);for(m=0;m<r;m++)v[m]=f[m].value,y[m]=f[m].index}var b=t.slice();return b[b.length-1]=r,[Rn(l,b,n),Rn(c,b,"int32")]}function Bs(e,t){for(var n=[],r=0;r<t.length;r++)t[r]&&n.push(r);var a=Zn(e,"int32"),s=Zn([n.length,e.length],"int32");for(r=0;r<n.length;r++){var i=a.indexToLoc(n[r]),o=r*e.length;s.values.set(i,o)}return s.toTensor()}var Ps=function(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("float v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        float result = "+r+";\n        setOutput(result);\n      }\n    "},zs=function(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((function(e,t){return"T"+t}));var n=[];this.variableNames.forEach((function(e){n.push("vec4 v"+e+" = get"+e+"AtOutCoords();")}));var r=this.variableNames.map((function(e){return"v"+e})).join(" + ");this.userCode="\n      void main() {\n        "+n.join("\n        ")+"\n\n        vec4 result = "+r+";\n        setOutput(result);\n      }\n    "},Ws=function(e,t,n){this.variableNames=["A"];var r=e.windowSize,a=e.batchSize,s=e.inSize,i=Math.ceil(s/r);n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i];var o="max"===t?">":"<",u=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+r+";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < "+r+"; i++) {\n          int inIdx = "+u+";\n          float candidate = getA(batch, inIdx);\n          if (candidate "+o+" bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    "};function Vs(e,t){return["x","y","z","w","u","v"].slice(0,t).map((function(t){return e+"."+t}))}function Us(e,t){return 1===t?[e]:Vs(e,t)}function Gs(){var e,t,n,r,a,s,i,o,u,c;return 2===l().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function Hs(e,t,n){void 0===n&&(n="index");var r=Q(t);return r.map((function(t,a){return"int "+e[a]+" = "+n+" / "+t+"; "+(a===r.length-1?"int "+e[a+1]+" = "+n+" - "+e[a]+" * "+t:"index -= "+e[a]+" * "+t)+";"})).join("")}function qs(e){var t=Q(e).map((function(e){return e.toString()}));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * "+t[0]+" + coords.y * "+t[1]+" + coords.z;\n  }\n"}var js="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";function Ks(e,t,n,r){var a=[];e.forEach((function(e){var t=R(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push("uniform float "+e.name+(t>1?"["+t+"]":"")+";"):(a.push("uniform sampler2D "+e.name+";"),a.push("uniform int offset"+e.name+";"))}));var s,i,o=a.join("\n"),u=e.map((function(e){return function(e,t,n){void 0===n&&(n=!1);var r="";r+=n?Ys(e):Xs(e);var a=e.shapeInfo.logicalShape,s=t.logicalShape;return a.length<=s.length&&(r+=n?function(e,t){var n,r,a=e.name,s=a.charAt(0).toUpperCase()+a.slice(1),i="get"+s+"AtOutCoords",o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length,l=Fr(e.shapeInfo.logicalShape,t.logicalShape),c=ri(u),h=u-o,p=["x","y","z","w","u","v"];n=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map((function(e){return"coords."+p[e+h]+" = 0;"})).join("\n"),r=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+p[t+h]})).join(", ");var d="return outputValue;",f=1===R(e.shapeInfo.logicalShape),m=1===R(t.logicalShape);if(1!==o||f||m){if(f&&!m)d=1===u?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){var g=o-2,v=o-1;l.indexOf(g)>-1&&l.indexOf(v)>-1?d="return vec4(outputValue.x);":l.indexOf(g)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(v)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 "+i+"() {\n      "+c+" coords = getOutputCoords();\n      "+n+"\n      vec4 outputValue = get"+s+"("+r+");\n      "+d+"\n    }\n  "}(e,t):function(e,t){var n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&A(i,s))return"\n      float "+a+"() {\n        return sampleTexture("+n+", resultUV);\n      }\n    ";var l,c,h=ri(u),p=Fr(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,f=["x","y","z","w","u","v"];return l=0===o?"":u<2&&p.length>=1?"coords = 0;":p.map((function(e){return"coords."+f[e+d]+" = 0;"})).join("\n"),c=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((function(e,t){return"coords."+f[t+d]})).join(", "),"\n    float "+a+"() {\n      "+h+" coords = getOutputCoords();\n      "+l+"\n      return get"+r+"("+c+");\n    }\n  "}(e,t)),r}(e,t,r)})).join("\n"),l=t.texShape,c=Gs(),h=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return "+e.texture2D+"(textureSampler, uv).r;\n    }\n  "}(c),p=function(e){return e.version+"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    "+e.varyingFs+" vec2 resultUV;\n    "+e.defineOutput+"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    "+e.defineSpecialNaN+"\n    "+e.defineSpecialInf+"\n    "+e.defineRound+"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    "+Js+"\n    "+Zs+"\n    "+Qs+"\n  "}(c);return t.isPacked?(s=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * "+n[1]+".0);\n      }\n    ":1===n[1]?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * "+n[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      return 2 * (resTexRC.x * "+n[1]+" + resTexRC.y);\n    }\n  "}(0,t);case 2:return function(e,t){var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(A(e,t))return"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2("+n[0]+", "+n[1]+"));\n      }\n    ";var r=Math.ceil(e[1]/2);return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=e,r=t,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=(s=Math.ceil(n[2]/2))*Math.ceil(n[1]/2),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+a[0]+", "+a[1]+"));\n      int index = resTexRC.x * "+a[1]+" + resTexRC.y;\n\n      int b = index / "+i+";\n      index -= b * "+i+";\n\n      int r = 2 * (index / "+s+");\n      int c = imod(index, "+s+") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";default:return function(e,t){for(var n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),s=a,i="",o="b, r, c",u=2;u<e.length-1;u++)i="\n      int b"+u+" = index / "+(s*=e[e.length-u-1])+";\n      index -= b"+u+" * "+s+";\n    "+i,o="b"+u+", "+o;return"\n    ivec"+e.length+" getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n\n      "+i+"\n\n      int b = index / "+a+";\n      index -= b * "+a+";\n\n      int r = 2 * (index / "+r+");\n      int c = imod(index, "+r+") * 2;\n\n      return ivec"+e.length+"("+o+");\n    }\n  "}(e,t)}var n,r,a,s,i}(t.logicalShape,l),i=function(e){return"\n    void setOutput(vec4 val) {\n      "+e.output+" = val;\n    }\n  "}(c)):(s=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){return 1===t[0]?"\n      int getOutputCoords() {\n        return int(resultUV.x * "+t[1]+".0);\n      }\n    ":1===t[1]?"\n      int getOutputCoords() {\n        return int(resultUV.y * "+t[0]+".0);\n      }\n    ":"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      return resTexRC.x * "+t[1]+" + resTexRC.y;\n    }\n  "}(0,t);case 2:return function(e,t){return A(e,t)?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2("+t[0]+", "+t[1]+"));\n      }\n    ":1===e[1]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":1===e[0]?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2("+t[0]+", "+t[1]+"));\n        int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      int r = index / "+e[1]+";\n      int c = index - r * "+e[1]+";\n      return ivec2(r, c);\n    }\n  "}(e,t);case 3:return n=t,r=Hs(["r","c","d"],e),"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2("+n[0]+", "+n[1]+"));\n      int index = resTexRC.x * "+n[1]+" + resTexRC.y;\n      "+r+"\n      return ivec3(r, c, d);\n    }\n  ";case 4:return function(e,t){var n=Hs(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n      "+n+"\n      return ivec4(r, c, d, d2);\n    }\n  "}(e,t);case 5:return function(e,t){var n=Hs(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2("+t[0]+",\n                             "+t[1]+"));\n\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "}(e,t);case 6:return function(e,t){var n=Hs(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2("+t[0]+", "+t[1]+"));\n      int index = resTexRC.x * "+t[1]+" + resTexRC.y;\n\n      "+n+"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}var n,r}(t.logicalShape,l),i=function(e){return"\n    void setOutput(float val) {\n      "+e.output+" = vec4(val, 0, 0, 0);\n    }\n  "}(c)),r&&(p+=ei),[p,h,i,o,s,u,n].join("\n")}function Xs(e){var t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"float "+n+"() {return "+t+";}";var r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===a&&1===s)return"\n      float "+n+"() {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var i=e.shapeInfo.texShape;return"\n    float "+n+"() {\n      vec2 uv = uvFromFlat("+i[0]+", "+i[1]+", "+ti(t)+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return"\n      float "+n+"(int index) {\n        "+ni(e)+"\n      }\n    ";var r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return"\n      float "+n+"(int index) {\n        return sampleTexture("+t+", halfCR);\n      }\n    ";var i=ti(t);return 1===s?"\n      float "+n+"(int index) {\n        vec2 uv = vec2(0.5, (float(index + "+i+") + 0.5) / "+a+".0);\n        return sampleTexture("+t+", uv);\n      }\n    ":1===a?"\n      float "+n+"(int index) {\n        vec2 uv = vec2((float(index + "+i+") + 0.5) / "+s+".0, 0.5);\n        return sampleTexture("+t+", uv);\n      }\n    ":"\n    float "+n+"(int index) {\n      vec2 uv = uvFromFlat("+a+", "+s+", index + "+i+");\n      return sampleTexture("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&A(t,a)){var s=a[0];return"\n    float "+r+"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2("+a[1]+".0, "+s+".0);\n      return sampleTexture("+n+", uv);\n    }\n  "}var i=B(t),o=i.newShape,u=i.keptDims,l=o;if(l.length<t.length)return"\n      "+Xs(ai(e,l))+"\n      float "+r+"(int row, int col) {\n        return "+r+"("+si(["row","col"],u)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2("+t[1]+", 1)));\n        "+ni(e)+"\n      }\n    ";var c=a[0],h=a[1],p=ti(n);return 1===h?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+p+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / "+c+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":1===c?"\n    float "+r+"(int row, int col) {\n      float index = dot(vec3(row, col, "+p+"), vec3("+t[1]+", 1, 1));\n      vec2 uv = vec2((index + 0.5) / "+h+".0, 0.5);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n  float "+r+"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * "+t[1]+" + col + "+p+";\n    vec2 uv = uvFromFlat("+c+", "+h+", index);\n    return sampleTexture("+n+", uv);\n  }\n"}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],i=B(t),o=i.newShape,u=i.keptDims,l=o;if(l.length<t.length)return"\n        "+Xs(ai(e,l))+"\n        float "+r+"(int row, int col, int depth) {\n          return "+r+"("+si(["row","col","depth"],u)+");\n        }\n      ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3("+a+", "+s+", 1)));\n        "+ni(e)+"\n      }\n    ";var c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;return p===a&&null==d?"\n        float "+r+"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2("+s+", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2("+p+".0, "+h+".0);\n          return sampleTexture("+n+", uv);\n        }\n      ":p===s&&null==d?"\n    float "+r+"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2("+t[1]+", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+p+".0, "+h+".0);\n      return sampleTexture("+n+", uv);\n    }\n  ":"\n      float "+r+"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * "+a+" + col * "+s+" + depth + "+ti(n)+";\n        vec2 uv = uvFromFlat("+h+", "+p+", index);\n        return sampleTexture("+n+", uv);\n      }\n  "}(e);case 4:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,o=B(t),u=o.newShape,l=o.keptDims;if(u.length<t.length)return"\n      "+Xs(ai(e,u))+"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        return "+r+"("+si(["row","col","depth","depth2"],l)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4("+i+", "+s+", "+a+", 1)));\n        "+ni(e)+"\n      }\n    ";var c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];return d===i&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3("+s+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+d+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":d===a&&null==c?"\n      float "+r+"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3("+t[1]*t[2]+", "+t[2]+", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+d+".0, "+p+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+i+" + col * "+s+" +\n          depth * "+a+" + depth2;\n      vec2 uv = uvFromFlat("+p+", "+d+", index + "+ti(n)+");\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 5:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,u=B(t),l=u.newShape,c=u.keptDims;if(l.length<t.length)return"\n      "+Xs(ai(e,l))+"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        return "+r+"("+si(["row","col","depth","depth2","depth3"],c)+");\n      }\n    ";if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+o+", "+i+", "+s+", "+a+")) +\n          depth3;\n        "+ni(e)+"\n      }\n    ";var h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];return f===o&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4("+i+", "+s+", "+a+", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+f+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":f===a&&null==h?"\n      float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]+",\n               "+t[2]*t[3]+", "+t[3]+", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+f+".0, "+d+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+o+" + col * "+i+" + depth * "+s+" +\n          depth2 * "+a+" + depth3 + "+ti(n)+";\n      vec2 uv = uvFromFlat("+d+", "+f+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);case 6:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=B(t),s=a.newShape,i=a.keptDims;if(s.length<t.length)return"\n      "+Xs(ai(e,s))+"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return "+r+"("+si(["row","col","depth","depth2","depth3","depth4"],i)+");\n      }\n    ";var o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return"\n      float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4("+h+", "+c+", "+l+", "+u+")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2("+o+", 1)));\n        "+ni(e)+"\n      }\n    ";var p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];return m===h&&null==p?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4("+c+", "+l+", "+u+", "+o+")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":m===o&&null==p?"\n      float "+r+"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4("+t[1]*t[2]*t[3]*t[4]+",\n               "+t[2]*t[3]*t[4]+",\n               "+t[3]*t[4]+",\n               "+t[4]+")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2("+m+".0, "+f+".0);\n        return sampleTexture("+n+", uv);\n      }\n    ":"\n    float "+r+"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * "+h+" + col * "+c+" + depth * "+l+" +\n          depth2 * "+u+" + depth3 * "+o+" + depth4 + "+ti(n)+";\n      vec2 uv = uvFromFlat("+f+", "+m+", index);\n      return sampleTexture("+n+", uv);\n    }\n  "}(e);default:throw new Error(t.length+"-D input sampling is not yet supported")}}function Ys(e){var t;switch(e.shapeInfo.logicalShape.length){case 0:return"\n    vec4 get"+(t=e.name).charAt(0).toUpperCase()+t.slice(1)+"() {\n      return "+Gs().texture2D+"("+t+", halfCR);\n    }\n  ";case 1:return function(e){var t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=Gs();return"\n    vec4 "+n+"(int index) {\n      vec2 uv = packedUVfrom1D(\n        "+a[0]+", "+a[1]+", index);\n      return "+s.texture2D+"("+t+", uv);\n    }\n  "}(e);case 2:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=Gs();if(null!=a&&A(t,a))return"\n      vec4 "+r+"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2("+i+".0, "+s+".0);\n\n        return "+o.texture2D+"("+n+", uv);\n      }\n    ";var u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return"\n    vec4 "+r+"(int row, int col) {\n      vec2 uv = packedUVfrom2D("+Math.ceil(t[1]/2)+", "+u[0]+", "+u[1]+", row, col);\n      return "+o.texture2D+"("+n+", uv);\n    }\n  "}(e);case 3:return function(e){var t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0])return"\n        "+Ys(ai(e,t.slice(1)))+"\n        vec4 "+r+"(int b, int row, int col) {\n          return "+r+"("+si(["b","row","col"],[1,2])+");\n        }\n      ";var i=s[0],o=s[1],u=Math.ceil(t[2]/2);return"\n    vec4 "+r+"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        "+i+", "+o+", "+u*Math.ceil(t[1]/2)+", "+u+", b, row, col);\n      return "+Gs().texture2D+"("+n+", uv);\n    }\n  "}(e);default:return function(e){for(var t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],l=Math.ceil(t[n-1]/2),c=l*Math.ceil(t[n-2]/2),h="int b, int row, int col",p="b * "+c+" + (row / 2) * "+l+" + (col / 2)",d=2;d<n-1;d++)h="int b"+d+", "+h,p="b"+d+" * "+(c*=t[n-d-1])+" + "+p;return"\n    vec4 "+a+"("+h+") {\n      int index = "+p+";\n      int texR = index / "+u+";\n      int texC = index - texR * "+u+";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+u+", "+o+");\n      return "+Gs().texture2D+"("+r+", uv);\n    }\n  "}(e)}}var Js="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Zs="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Qs="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ei="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ti(e){return"offset"+e}function ni(e){var t=e.name,n=R(e.shapeInfo.logicalShape);return n<2?"return "+t+";":"\n    for (int i = 0; i < "+n+"; i++) {\n      if (i == index) {\n        return "+t+"[i];\n      }\n    }\n  "}function ri(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank "+e+" is not yet supported")}function ai(e,t){var n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function si(e,t){return t.map((function(t){return e[t]})).join(", ")}var ii=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,N(e.length>2,(function(){return"Packed arg"+(n.charAt(0).toUpperCase()+n.slice(1))+" supports only inputs with rank above 2."}));var a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");var i,o,u=this.outputShape,l=u.length,c=ri(l),h=Us("coords",l);if(1===s){var p=ri(o=l+1);i="\n        "+p+" sourceLocR = "+p+"("+h.join()+", 0);\n        ++"+h[l-1]+";\n        "+p+" sourceLocG = "+p+"("+h.join()+", 0);\n        ++"+h[l-2]+";\n        "+p+" sourceLocA = "+p+"("+h.join()+", 0);\n        --"+h[l-1]+";\n        "+p+" sourceLocB = "+p+"("+h.join()+", 0);\n        --"+h[l-2]+";"}else o=l,i="\n        "+c+" sourceLocR = coords;\n        ++"+h[l-1]+";\n        "+c+" sourceLocG = coords;\n        ++"+h[l-2]+";\n        "+c+" sourceLocA = coords;\n        --"+h[l-1]+";\n        "+c+" sourceLocB = coords;\n        --"+h[l-2]+";";var d=["x","y","z","w","u","v"].slice(0,o),f="."+d[o-1],m=d.map((function(e){return"int "+e})),g=Us("sourceLocR",o-1).concat("inIdx.r"),v=Us("sourceLocG",o-1).concat("inIdx.g"),y=Us("sourceLocB",o-1).concat("inIdx.b"),b=Us("sourceLocA",o-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":"\n          inIdx = round(vec4(getBestIndicesAChannel("+g.join()+"),\n                             getBestIndicesAChannel("+v.join()+"),\n                             getBestIndicesAChannel("+y.join()+"),\n                             getBestIndicesAChannel("+b.join()+")));",k="vec4(\n            getAChannel("+g.join()+"),\n            hasNextCol ? getAChannel("+v.join()+") : 0.,\n            hasNextRow ? getAChannel("+y.join()+") : 0.,\n            hasNextRow && hasNextCol ? getAChannel("+b.join()+") : 0.)",I=r?"":"\n      float getBestIndicesAChannel("+m.join()+") {\n        return getChannel(getBestIndicesA("+d.join()+"),\n                                          vec2("+d.slice(-2).join()+"));\n      }";this.userCode="\n      float getAChannel("+m.join()+") {\n        return getChannel(getA("+d.join()+"),\n                               vec2("+d.slice(-2).join()+"));\n      }\n      "+I+"\n      void main() {\n        "+c+" coords = getOutputCoords();\n        bool hasNextCol = "+h[l-1]+" < "+(u[l-1]-1)+";\n        bool hasNextRow = "+h[l-2]+" < "+(u[l-2]-1)+";\n        "+i+"\n        ivec4 srcIdx = ivec4(sourceLocR"+f+", sourceLocG"+f+",\n          sourceLocB"+f+", sourceLocA"+f+") * "+t+";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = "+k+";\n\n        for (int i = 0; i < "+t+"; i++) {\n          inIdx = srcIdx;\n          "+w+"\n          vec4 candidate = "+k+";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4("+x+"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    "},oi=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2("+l+", "+c+");\n      const float avgMultiplier = float("+h+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+o+";\n            wR += "+s+") {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+u+";\n            wC+= "+i+") {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ui=function(e){this.variableNames=["dy"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode="\n      const ivec3 pads = ivec3("+d+", "+f+", "+m+");\n      const float avgMultiplier = float("+g+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+c+";\n            wD += "+o+") {\n          float dyD = float(dyDCorner + wD) / "+a+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+h+";\n              wR += "+u+") {\n            float dyR = float(dyRCorner + wR) / "+s+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+p+";\n                wC += "+l+") {\n              float dyC = float(dyCCorner + wC) / "+i+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},li=function(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],$r(e,t),$r(e,n);var i="0.0";null!=r&&($r(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");var o="1.0";null!=a&&($r(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = "+i+";\n        float scale = "+o+";\n        float inv = scale * inversesqrt(variance + float("+s+"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    "},ci=function(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$r(e,t),$r(e,n);var i="vec4(0.0)";null!=r&&($r(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");var o="vec4(1.0)";null!=a&&($r(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = "+i+";\n        vec4 scale = "+o+";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4("+s+"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    "},hi=function(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$r(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        "+e+"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    "},pi="return a + b;",di="return a - b;",fi="return a * b;",mi="return (a < 0.) ? b * a : a;",gi=function(e,t,n){this.variableNames=["A","B"],this.outputShape=$r(t,n),this.userCode="\n      float binaryOperation(float a, float b) {\n        "+e+"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    "},vi="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",yi=function(e,t,n,r){void 0===r&&(r=!1),this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$r(t,n);var a=this.outputShape.length,s="";if(r)if(0===a||1===R(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s="\n          "+ri(a)+" coords = getOutputCoords();\n        ",1===a)s+="\n            result.y = (coords + 1) >= "+this.outputShape[0]+" ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ";else{var i=Us("coords",a);s+="\n            bool nextRowOutOfBounds =\n              ("+i[a-2]+" + 1) >= "+this.outputShape[a-2]+";\n            bool nextColOutOfBounds =\n              ("+i[a-1]+" + 1) >= "+this.outputShape[a-1]+";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        "+e+"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        "+s+"\n\n        setOutput(result);\n      }\n    "},bi=function(){function e(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),xi=function(){function e(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e,t){var n=this;return function(r,a){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(a,"minVal"),n.maxLoc=r.getUniformLocationNoThrow(a,"maxVal")),r.gl.uniform1f(n.minLoc,e),r.gl.uniform1f(n.maxLoc,t)}},e}(),wi=function(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "},ki=function(e){this.outputShape=[],this.outputShape=Cn(e,1),this.variableNames=e.map((function(e,t){return"T"+t}));var t=new Array(e.length-1);t[0]=e[0][1];for(var n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];var r=["if (yC < "+t[0]+") setOutput(getT0(yR, yC));"];for(n=1;n<t.length;n++){var a=t[n-1];r.push("else if (yC < "+t[n]+") setOutput(getT"+n+"(yR, yC-"+a+"));")}var s=t.length,i=t[t.length-1];r.push("else setOutput(getT"+s+"(yR, yC-"+i+"));"),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        "+r.join("\n        ")+"\n      }\n    "},Ii=function(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Cn(e,t);var n=this.outputShape,r=n.length,a=ri(r),s=Us("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((function(e,t){return"T"+t}));var o=new Array(e.length-1);o[0]=e[0][t];for(var u=1;u<o.length;u++)o[u]=o[u-1]+e[u][t];var l=i[t],c=i.slice(-2),h=i.join(),p="if ("+l+" < "+o[0]+") {\n        return getChannel(\n            getT0("+h+"), vec2("+c.join()+"));\n        }";for(u=1;u<o.length;u++){var d=o[u-1];p+="\n        if ("+l+" < "+o[u]+"  && "+l+" >= "+o[u-1]+") {\n          return getChannel(\n            getT"+u+"("+Ci(i,l,d)+"),\n            vec2("+Ci(c,l,d)+"));\n        }"}var f=o.length,m=o[o.length-1];p+="\n        return getChannel(\n          getT"+f+"("+Ci(i,l,m)+"),\n          vec2("+Ci(c,l,m)+"));",this.userCode="\n      float getValue("+i.map((function(e){return"int "+e}))+") {\n        "+p+"\n      }\n\n      void main() {\n        "+a+" coords = getOutputCoords();\n        vec4 result = vec4(getValue("+s+"), 0., 0., 0.);\n\n        "+s[r-1]+" = "+s[r-1]+" + 1;\n        if ("+s[r-1]+" < "+n[r-1]+") {\n          result.g = getValue("+s+");\n        }\n\n        "+s[r-2]+" = "+s[r-2]+" + 1;\n        if ("+s[r-2]+" < "+n[r-2]+") {\n          result.a = getValue("+s+");\n        }\n\n        "+s[r-1]+" = "+s[r-1]+" - 1;\n        if ("+s[r-2]+" < "+n[r-2]+" &&\n            "+s[r-1]+" < "+n[r-1]+") {\n          result.b = getValue("+s+");\n        }\n        setOutput(result);\n      }\n    "};function Ci(e,t,n){var r=e.indexOf(t);return e.map((function(e,t){return t===r?e+" - "+n:e})).join()}var Ni=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              if ("+s+") {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Si=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords["+c+"];\n\n        ivec2 dyCorner = ivec2(coords["+u+"], coords["+l+"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n\n              if ("+s+") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ei=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yF = 0; yF < "+e.outDepth+"; yF++) {\n            int xF = wF + yF * "+t+" - "+a+";\n\n            if (xF < 0 || xF >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n              int xR = wR + yR * "+n+" - "+s+";\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n                int xC = wC + yC * "+r+" - "+i+";\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ti=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3("+o+", "+u+", "+l+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+t+"; wF++) {\n          float dyF = float(dyFCorner + wF) / "+a+".0;\n\n          if (dyF < 0.0 || dyF >= "+e.outDepth+".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = "+t+" - 1 - wF;\n\n          for (int wR = 0; wR < "+n+"; wR++) {\n            float dyR = float(dyRCorner + wR) / "+s+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = "+n+" - 1 - wR;\n\n            for (int wC = 0; wC < "+r+"; wC++) {\n              float dyC = float(dyCCorner + wC) / "+i+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = "+r+" - 1 - wC;\n\n              for (int d2 = 0; d2 < "+e.outChannels+"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ri=function(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;var t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * "+s+" + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < "+e.batchSize+"; b++) {\n          for (int yR = 0; yR < "+e.outHeight+"; yR++) {\n            int xR = wR + yR * "+t+" - "+r+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int yC = 0; yC < "+e.outWidth+"; yC++) {\n              int xC = wC + yC * "+n+" - "+a+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Ai=function(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;var t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2("+s+", "+i+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < "+t+"; wR++) {\n          float dyR = float(dyRCorner + wR) / "+r+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = "+t+" - 1 - wR;\n\n          for (int wC = 0; wC < "+n+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+a+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = "+n+" - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < "+o+"; dm++) {\n              int d2 = d1 * "+o+" + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Di=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.padInfo.top,s=e.padInfo.left,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),d=e.inChannels%4,f="channelsLast"===e.dataFormat,m=f?1:2,g=f?2:3,v=f?3:1,y="",b="";n&&(y=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",b="result = activation(result);");var x=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+y+"\n\n      const ivec2 strides = ivec2("+i+", "+o+");\n      const ivec2 pads = ivec2("+a+", "+s+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords["+v+"];\n\n        ivec2 xRCCorner =\n            ivec2(coords["+m+"], coords["+g+"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+c+"; wR++) {\n          int xR = xRCorner + wR * "+u+";\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+h+"; wC++) {\n            int xC = xCCorner + wC * "+l+";\n\n            if (xC < 0 || xC >= "+e.inWidth+") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < "+p+"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if ("+f+") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if ("+(1===d)+") {\n\n              if ("+f+") {\n                dotProd +=\n                    getX(batch, xR, xC, "+p+") *\n                    getW(wR, wC, "+p+", d2);\n              } else {\n                dotProd +=\n                    getX(batch, "+p+", xR, xC) *\n                    getW(wR, wC, "+p+", d2);\n              }\n\n            } else if ("+(2===d)+") {\n              vec2 wValues = vec2(\n                getW(wR, wC, "+p+", d2),\n                getW(wR, wC, "+p+" + 1, d2)\n              );\n\n              if ("+f+") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, "+p+"),\n                  getX(batch, xR, xC, "+p+" + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, "+p+", xR, xC),\n                  getX(batch, "+p+" + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if ("+(3===d)+") {\n              vec3 wValues = vec3(\n                getW(wR, wC, "+p+", d2),\n                getW(wR, wC, "+p+" + 1, d2),\n                getW(wR, wC, "+p+" + 2, d2)\n              );\n\n              if ("+f+") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, "+p+"),\n                  getX(batch, xR, xC, "+p+" + 1),\n                  getX(batch, xR, xC, "+p+" + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, "+p+", xR, xC),\n                  getX(batch, "+p+" + 1, xR, xC),\n                  getX(batch, "+p+" + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        "+x+"\n        "+b+"\n        setOutput(result);\n      }\n    "},Fi=function(e){this.variableNames=["x","W"],this.outputShape=e.outShape;var t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3("+a+", "+s+", "+i+");\n      const ivec3 pads = ivec3("+t+", "+n+", "+r+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < "+c+"; wF++) {\n          int xF = xFCorner + wF * "+o+";\n\n          if (xF < 0 || xF >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+h+"; wR++) {\n            int xR = xRCorner + wR * "+u+";\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+p+"; wC++) {\n              int xC = xCCorner + wC * "+l+";\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < "+d+"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if ("+(1===f)+") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, "+d+") *\n                  getW(wF, wR, wC, "+d+", d2);\n              } else if ("+(2===f)+") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, "+d+"),\n                  getX(batch, xF, xR, xC, "+d+" + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, "+d+", d2),\n                  getW(wF, wR, wC, "+d+" + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if ("+(3===f)+") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, "+d+"),\n                  getX(batch, xF, xR, xC, "+d+" + 1),\n                  getX(batch, xF, xR, xC, "+d+" + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, "+d+", d2),\n                  getW(wF, wR, wC, "+d+" + 1, d2),\n                  getW(wF, wR, wC, "+d+" + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},_i=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.outputShape=e.outShape;var a=e.inHeight,s=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,f=e.outChannels/e.inChannels,m="",g="";n&&(m=r?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"\n          float activation(float x) {\n            "+n+"\n          }\n        ",g="result = activation(result);");var v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+m+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / "+f+";\n        int q = d2 - d1 * "+f+";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < "+p+"; wR++) {\n          int xR = xRCorner + wR * "+c+";\n\n          if (xR < 0 || xR >= "+a+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+d+"; wC++) {\n            int xC = xCCorner + wC * "+h+";\n\n            if (xC < 0 || xC >= "+s+") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        "+v+"\n        "+g+"\n        setOutput(result);\n      }\n    "},$i=function(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;for(var a=e.inHeight,s=e.inWidth,i=e.padInfo.top,o=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,f=d,m="int xR; int xC; int xCOffset;",g=0;g<p;g++)for(var v=0;v<d;v++)m+="\n          vec4 xTexelR"+g+"C"+2*v+" = vec4(0.);\n          vec4 wR"+g+"C"+v+" = vec4(0.);\n          vec4 xR"+g+"C"+v+" = vec4(0.);";for(g=0;g<p;g++)for(var y=0;y<f;y++){if(m+="\n          xR = xRCorner + "+g*c+";\n          xC = xCCorner + "+(v=2*y)*h+";\n        ",1===l){if(v<d&&(m+=o%2==1?"\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+s+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+s+") {\n                    xTexelR"+g+"C"+v+".zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < "+a+" && xCOffset >= 0 && xCOffset < "+s+") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= "+s+") {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR"+g+"C"+v+" = vec4(previous.zw, xTexelR"+g+"C"+v+".xy);\n                } else {\n                  xR"+g+"C"+v+" = vec4(0, 0, xTexelR"+g+"C"+v+".xy);\n                }\n              ":"\n                if(xR >= 0 && xR < "+a+" && xC >= 0 && xC < "+s+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = xTexelR"+g+"C"+v+";\n              ",v+1<d)){var b=o%2==0?I(h):h;h%2==0&&o%2==1||h%2!=0&&o%2!=1?(m+="\n                  xCOffset = xC + "+o%2+" + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+s+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n                ",h>1&&(m+="\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < "+a+" &&\n                      xCOffset >= 0 && xCOffset < "+s+") {\n                      xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR"+g+"C"+v+" = vec4(0.);\n                    }\n                  "),m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".xy);\n                "):m+="\n                  xCOffset = xC + "+b+";\n\n                  if(xR >= 0 && xR < "+a+" &&\n                    xCOffset >= 0 && xCOffset < "+s+") {\n                    xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR"+g+"C"+(v+1)+" = xTexelR"+g+"C"+(v+2)+";\n                "}}else v<d&&(m+="\n              if(xR >= 0 && xR < "+a+") {\n            ",o%2==1?(m+="\n                xCOffset = xC + 1 - "+l+";\n                if(xCOffset >= 0 && xCOffset < "+s+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < "+s+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n              ",v+1<d&&(m+="\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + "+l+";\n                  if(xCOffset >= 0 && xCOffset < "+s+") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR"+g+"C"+(v+1)+" = vec4(xTexelR"+g+"C"+(v+2)+".xy, final.xy);\n                ")):(m+="\n                if(xC >= 0 && xC < "+s+") {\n                  xTexelR"+g+"C"+v+" = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR"+g+"C"+v+" = vec4(0.);\n                }\n\n                xCOffset = xC + "+l+";\n                if(xCOffset >= 0 && xCOffset < "+s+") {\n                  xTexelR"+g+"C"+(v+2)+" = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR"+g+"C"+(v+2)+" = vec4(0.);\n                }\n\n                xR"+g+"C"+v+" = vec4(\n                  xTexelR"+g+"C"+v+".xy, xTexelR"+g+"C"+(v+2)+".xy);\n              ",v+1<d&&(m+="\n                  xR"+g+"C"+(v+1)+" = vec4(\n                    xTexelR"+g+"C"+v+".zw, xTexelR"+g+"C"+(v+2)+".zw);\n                ")),m+="}");v<d&&(m+="\n            vec4 wTexelR"+g+"C"+v+" = getW("+g+", "+v+", d1, q);\n            wR"+g+"C"+v+" = vec4(wTexelR"+g+"C"+v+".xz, wTexelR"+g+"C"+v+".xz);\n          ",v+1<d&&(m+="\n              vec4 wTexelR"+g+"C"+(v+1)+" = getW("+g+", "+(v+1)+", d1, q);\n              wR"+g+"C"+(v+1)+" =\n                vec4(wTexelR"+g+"C"+(v+1)+".xz, wTexelR"+g+"C"+(v+1)+".xz);"))}for(g=0;g<p;g++)for(v=0;v<d;v++)m+="dotProd += xR"+g+"C"+v+" * wR"+g+"C"+v+";";var x="",w="";n&&(x=r?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+n+"\n        }":"vec4 activation(vec4 x) {\n          "+n+"\n        }",w="result = activation(result);");var k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+x+"\n\n      const ivec2 strides = ivec2("+u+", "+l+");\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        "+m+"\n\n        vec4 result = dotProd;\n        "+k+"\n        "+w+"\n        setOutput(result);\n      }\n    "},Oi=function(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];var s=e[0],i=e[1],o=e[2],u=e[3],l=t[0],c=n[0],h=n[1];this.outputShape=[l,c,h,u];var p="bilinear"===r?1:0,d=[i-1+".0",o-1+".0"],f=d[0],m=d[1],g=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio","y1*"+f+" + float(y)*(height_scale)"]:["0.0","0.0","0.5 * (y1+y2) * "+f],v=g[0],y=g[1],b=g[2],x=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio","x1*"+m+" + float(x)*(width_scale)"]:["0.0","0.0","0.5 * (x1+x2) * "+m],w=x[0],k=x[1],I=x[2];this.userCode="\n      const float height_ratio = float("+v+");\n      const float width_ratio = float("+w+");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= "+s+") {\n          return;\n        }\n\n        float height_scale = "+y+";\n        float width_scale = "+k+";\n\n        float in_y = "+b+";\n        if( in_y < 0.0 || in_y > "+f+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n        float in_x = "+I+";\n        if( in_x < 0.0 || in_x > "+m+" ) {\n          setOutput(float("+a+"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if("+p+" == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    "},Mi=function(e,t,n){this.variableNames=["x"],this.outputShape=e;var r=e.length,a=e[e.length-1],s=n?"<":">";this.userCode="\n      int getIndex(int i) {\n        "+(n?"return "+a+" -i - 1;":"return i;")+"\n      }\n\n      void main() {\n        "+ri(r)+" coords = getOutputCoords();\n        int end = "+Li(r,"coords")+";\n        float val = 0.0;\n        for (int i = "+a+" - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx "+s+" end) {\n            continue;\n          }\n          if (idx == end && "+t+") {\n            continue;\n          }\n          "+Li(r,"coords")+" = idx;\n          val += getX("+function(e,t){if(1===e)return""+t;if(2===e)return t+".x, "+t+".y";if(3===e)return t+".x, "+t+".y, "+t+".z";if(4===e)return t+".x, "+t+".y, "+t+".z, "+t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}(r,"coords")+");\n        }\n        setOutput(val);\n      }\n    "};function Li(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error("Cumulative sum for rank "+e+" is not yet supported")}var Bi=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=ze.DENSE;var t=Ke(e),n=Gs();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Hs(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        "+n.output+" = result;\n      }\n    "},Pi=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=ze.DENSE;var t=Ke(e),n=Gs();this.outputShape=e,this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        "+Hs(["r","c","d"],e)+"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2("+t[0]+", "+t[1]+"));\n        int index = 4 * (resTexRC.x * "+t[1]+" + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        "+n.output+" = result;\n      }\n    "},zi=function(){function e(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = "+this.getHeightCoordString()+";\n      int w = "+this.getWidthCoordString()+";\n      int d = "+this.getDepthCoordString()+";\n\n      int in_h = h / "+t+";\n      int offset_h = imod(h, "+t+");\n      int in_w = w / "+t+";\n      int offset_w = imod(w, "+t+");\n      int offset_d = (offset_h * "+t+" + offset_w) *\n        "+this.getOutputDepthSize()+";\n      int in_d = d + offset_d;\n\n      float result = "+this.getInputSamplingString()+";\n      setOutput(result);\n    }\n  "}return e.prototype.getHeightCoordString=function(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"},e.prototype.getWidthCoordString=function(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"},e.prototype.getDepthCoordString=function(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"},e.prototype.getOutputDepthSize=function(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},e.prototype.getInputSamplingString=function(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"},e}(),Wi=function(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "},Vi=function(e){this.variableNames=["A"],this.outTexUsage=We.DOWNLOAD;var t=Gs();this.outputShape=e,this.userCode="\n      "+js+"\n\n      void main() {\n        float x = getAAtOutCoords();\n        "+t.output+" = encode_float(x);\n      }\n    "},Ui=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=We.DOWNLOAD;var t=Gs();this.outputShape=e,this.userCode="\n      "+js+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        "+t.output+" = encode_float(x);\n      }\n    "},Gi=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"];var r=Gs(),a=t[0],s=t[1];this.outputShape=e;var i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode="\n      "+qs(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n        \n        int r = flatIndex / "+s+";\n        int c = imod(flatIndex, "+s+");\n        vec2 uv = (vec2(c, r) + halfCR) / vec2("+s+".0, "+a+".0);\n        vec4 values = "+r.texture2D+"(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        "+r.output+" = vec4("+i+", 0., 0., 0.);\n      }\n    "},Hi=function(e,t,n){void 0===n&&(n=!1),this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var r=Gs(),a=t[0],s=t[1];this.outputShape=e;var i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;i+="\n          localCoords = coords;\n          if(localCoords[2] + "+l+" < "+e[2]+") {\n            localCoords[2] += "+l+";\n            if(localCoords[1] + "+u+" < "+e[1]+") {\n              localCoords[1] += "+u+";\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / "+s+";\n              c = imod(flatIndex, "+s+");\n              uv = (vec2(c, r) + halfCR) / vec2("+s+".0, "+a+".0);\n              values = "+r.texture2D+"(A, uv);\n\n              if(offset == 0) {\n                result["+c+"] = values[0];\n              } else if(offset == 1) {\n                result["+c+"] = values[1];\n              } else if(offset == 2) {\n                result["+c+"] = values[2];\n              } else {\n                result["+c+"] = values[3];\n              }\n            }\n          }\n        "}this.userCode="\n      "+qs(e)+"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        "+i+"\n\n        "+r.output+" = "+o+";\n      }\n    "},qi=function(e,t,n){this.variableNames=["real","imag"];var r=t[1];this.outputShape=t;var a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";this.userCode="\n      const float exponentMultiplier = "+a+";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        "+e+"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float("+r+");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < "+r+"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / "+s+";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    "},ji=function(){function e(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.valueLoc&&(t.valueLoc=n.getUniformLocationNoThrow(r,"value")),n.gl.uniform1f(t.valueLoc,e)}},e}(),Ki=function(e,t,n){this.variableNames=["A","indices"];var r=e.slice();r[n]=t,this.outputShape=r,this.rank=r.length;var a=ri(this.rank),s=function(e,t){var n=e.length;if(n>4)throw Error("Gather for rank "+n+" is not yet supported");if(1===n)return"int(getIndices(resRC))";for(var r=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],s=0;s<e.length;s++)s===t?a.push("int(getIndices("+r[s]+"))"):a.push(""+r[s]);return a.join()}(e,n);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+s+"));\n      }\n    "},Xi=function(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;var r=ri(t.length),a=ri(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode="\n        "+r+" strides = "+r+"("+this.strides+");\n         void main() {\n          "+a+" coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < "+this.sliceDim+"; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * "+s+";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      "};function Yi(e,t){var n=Gs();return tt(e,t,n.version+"\n    precision highp float;\n    "+n.attribute+" vec3 clipSpacePos;\n    "+n.attribute+" vec2 uv;\n    "+n.varyingVs+" vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }")}function Ji(e,t){return lt(e,t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Zi(e,t){return ct(e,t,new Uint16Array([0,1,2,2,1,3]))}function Qi(e,t,n,r,a,s,i){pt(n,r);var o=ht(e,t),u=e.TEXTURE_2D;return Je(e,t,(function(){return e.bindTexture(u,o)})),Je(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)})),Je(e,t,(function(){return e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)})),Je(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST)})),Je(e,t,(function(){return e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST)})),Je(e,t,(function(){return e.texImage2D(u,0,a,n,r,0,s,i,null)})),Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)})),o}function eo(e,t,n,r,a){var s=je(n,r);return Qi(e,t,s[0],s[1],a.internalFormatFloat,a.textureFormatFloat,e.FLOAT)}function to(e,t,n,r,a){var s=je(n,r);return Qi(e,t,s[0],s[1],a.internalFormatHalfFloat,a.textureFormatFloat,a.textureTypeHalfFloat)}function no(e,t,n,r,a){var s=je(n,r);return Qi(e,t,s[0],s[1],e.RGBA,e.RGBA,e.UNSIGNED_BYTE)}function ro(e,t,n,r,a){var s=Xe(n,r);return Qi(e,t,s[0],s[1],a.internalFormatPackedFloat,e.RGBA,e.FLOAT)}function ao(e,t,n,r,a){var s=Xe(n,r);return Qi(e,t,s[0],s[1],a.internalFormatPackedHalfFloat,e.RGBA,a.textureTypeHalfFloat)}function so(e,t,n,r){return Je(e,t,(function(){return e.bindBuffer(e.ARRAY_BUFFER,r)})),ft(e,t,n,"clipSpacePos",r,3,20,0)&&ft(e,t,n,"uv",r,2,20,12)}function io(e,t,n,r,a,s,i){var o,u,l;Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),s instanceof Uint8Array?(o=new Uint8Array(r*a*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(r*a*4),u=e.FLOAT,l=i.internalFormatPackedFloat),o.set(s),Je(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,l,r,a,0,e.RGBA,u,o)})),Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function oo(e,t,n,r){Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,n)})),r.data instanceof Uint8Array?Je(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,r.width,r.height,0,e.RGBA,e.UNSIGNED_BYTE,r.data)})):Je(e,t,(function(){return e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r)})),Je(e,t,(function(){return e.bindTexture(e.TEXTURE_2D,null)}))}function uo(e,t,n,r,a){var s=e.createBuffer();Je(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,s)}));var i=16*n*r;return Je(e,t,(function(){return e.bufferData(e.PIXEL_PACK_BUFFER,i,e.STREAM_READ)})),Je(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,0)})),Je(e,t,(function(){return e.bindBuffer(e.PIXEL_PACK_BUFFER,null)})),s}function lo(e,t,n){var r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function co(e,t,n,r,a){var s=je(n,r),i=s[0],o=s[1],u=new Uint8Array(n*r*4);return Je(e,t,(function(){return e.readPixels(0,0,i,o,a.downloadTextureFormat,e.UNSIGNED_BYTE,u)})),new Float32Array(u.buffer)}function ho(e,t,n,r,a,s,i,o){var u=e,l=new Float32Array(function(e,t){var n=Xe(e,t);return n[0]*n[1]*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function po(e,t,n,r){var a=new Float32Array(n*r*4);return Je(e,t,(function(){return e.readPixels(0,0,r,n,e.RGBA,e.FLOAT,a)})),a}var fo=Object.freeze({createVertexShader:Yi,createVertexBuffer:Ji,createIndexBuffer:Zi,createFloat32MatrixTexture:eo,createFloat16MatrixTexture:to,createUnsignedBytesMatrixTexture:no,createPackedMatrixTexture:ro,createFloat16PackedMatrixTexture:ao,bindVertexProgramAttributeStreams:so,uploadDenseMatrixToTexture:io,uploadPixelDataToTexture:oo,createBufferFromOutputTexture:uo,downloadFloat32MatrixFromBuffer:lo,downloadByteEncodedFloatMatrixFromOutputTexture:co,downloadPackedMatrixFromBuffer:ho,downloadMatrixFromPackedOutputTexture:po}),mo=function(){function e(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var t=l().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,He(t,e)):this.gl=qe(t);var n="WEBGL_color_buffer_float";if(1===l().getNumber("WEBGL_VERSION")){if(this.textureFloatExtension=et(this.gl,this.debug,"OES_texture_float"),$t(this.gl,"OES_texture_half_float"))this.textureHalfFloatExtension=et(this.gl,this.debug,"OES_texture_half_float");else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),$t(this.gl,"EXT_color_buffer_half_float"))this.colorBufferHalfFloatExtension=et(this.gl,this.debug,"EXT_color_buffer_half_float");else if(l().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",$t(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!$t(this.gl,"EXT_color_buffer_half_float"))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension("EXT_color_buffer_half_float")}this.vertexBuffer=Ji(this.gl,this.debug),this.indexBuffer=Zi(this.gl,this.debug),this.framebuffer=dt(this.gl,this.debug),this.textureConfig=Ye(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(e.prototype,"debug",{get:function(){return l().getBool("DEBUG")},enumerable:!0,configurable:!0}),e.prototype.dispose=function(){var e=this;if(!this.disposed){null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");var t=this.gl;Je(t,this.debug,(function(){return t.finish()})),Je(t,this.debug,(function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)})),Je(t,this.debug,(function(){return t.deleteFramebuffer(e.framebuffer)})),Je(t,this.debug,(function(){return t.bindBuffer(t.ARRAY_BUFFER,null)})),Je(t,this.debug,(function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)})),Je(t,this.debug,(function(){return t.deleteBuffer(e.indexBuffer)})),this.disposed=!0}},e.prototype.createFloat32MatrixTexture=function(e,t){return this.throwIfDisposed(),eo(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createFloat16MatrixTexture=function(e,t){return this.throwIfDisposed(),to(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createUnsignedBytesMatrixTexture=function(e,t){return this.throwIfDisposed(),no(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.uploadPixelDataToTexture=function(e,t){this.throwIfDisposed(),oo(this.gl,this.debug,e,t)},e.prototype.uploadDenseMatrixToTexture=function(e,t,n,r){this.throwIfDisposed(),io(this.gl,this.debug,e,t,n,r,this.textureConfig)},e.prototype.createFloat16PackedMatrixTexture=function(e,t){return this.throwIfDisposed(),ao(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.createPackedMatrixTexture=function(e,t){return this.throwIfDisposed(),ro(this.gl,this.debug,e,t,this.textureConfig)},e.prototype.deleteMatrixTexture=function(e){var t=this;this.throwIfDisposed(),this.outputTexture===e&&(xt(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Je(this.gl,this.debug,(function(){return t.gl.deleteTexture(e)}))},e.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return co(r.gl,r.debug,t,n,r.textureConfig)}))},e.prototype.downloadPackedMatrixFromBuffer=function(e,t,n,r,a,s){return ho(this.gl,e,0,0,0,a,s,this.textureConfig)},e.prototype.downloadFloat32MatrixFromBuffer=function(e,t){return lo(this.gl,e,t)},e.prototype.createBufferFromTexture=function(e,t,n){this.bindTextureToFrameBuffer(e);var r=uo(this.gl,this.debug,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},e.prototype.createAndWaitForFence=function(){var e=this.createFence(this.gl);return this.pollFence(e)},e.prototype.createFence=function(e){var t,n,r=this;if(l().getBool("WEBGL_FENCE_API_ENABLED")){var a=e,s=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=function(){var e=a.clientWaitSync(s,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=s}else l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(t,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}):n=function(){return!0};return{query:t,isFencePassed:n}},e.prototype.downloadMatrixFromPackedTexture=function(e,t,n){var r=this;return this.downloadMatrixDriver(e,(function(){return po(r.gl,r.debug,t,n)}))},e.prototype.createProgram=function(e){this.throwIfDisposed();var t=this.gl,n=nt(t,this.debug,e),r=Yi(t,this.debug),a=it(t,this.debug);return Je(t,this.debug,(function(){return t.attachShader(a,r)})),Je(t,this.debug,(function(){return t.attachShader(a,n)})),ot(t,this.debug,a),this.debug&&ut(t,this.debug,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=so(t,this.debug,this.program,this.vertexBuffer)),a},e.prototype.deleteProgram=function(e){var t=this;this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&Je(this.gl,this.debug,(function(){return t.gl.deleteProgram(e)}))},e.prototype.setProgram=function(e){var t=this;this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&ut(this.gl,this.debug,this.program),Je(this.gl,this.debug,(function(){return t.gl.useProgram(e)}))},e.prototype.getUniformLocation=function(e,t,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?gt(this.gl,this.debug,e,t):vt(this.gl,e,t)},e.prototype.getAttributeLocation=function(e,t){var n=this;return this.throwIfDisposed(),Je(this.gl,this.debug,(function(){return n.gl.getAttribLocation(e,t)}))},e.prototype.getUniformLocationNoThrow=function(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)},e.prototype.setInputMatrixTexture=function(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yt(this.gl,this.debug,this.program,e,t,n)},e.prototype.setOutputMatrixTexture=function(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)},e.prototype.setOutputPackedMatrixTexture=function(e,t,n){this.throwIfDisposed();var r=Xe(t,n),a=r[0],s=r[1];this.setOutputMatrixTextureDriver(e,a,s)},e.prototype.setOutputMatrixWriteRegion=function(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)},e.prototype.setOutputPackedMatrixWriteRegion=function(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")},e.prototype.debugValidate=function(){null!=this.program&&ut(this.gl,this.debug,this.program),wt(this.gl)},e.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var e=this.gl;this.debug&&this.debugValidate(),Je(e,this.debug,(function(){return e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)}))},e.prototype.blockUntilAllProgramsCompleted=function(){var e=this;this.throwIfDisposed(),Je(this.gl,this.debug,(function(){return e.gl.finish()}))},e.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=et(this.gl,this.debug,2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension},e.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},e.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},e.prototype.beginQuery=function(){if(2===l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),a=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,a),a},e.prototype.endQuery=function(){if(2!==l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){var e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}else{var t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT)}},e.prototype.waitForQueryAndGetTime=function(e){return s(this,void 0,void 0,(function(){var t=this;return i(this,(function(n){switch(n.label){case 0:return[4,O((function(){return t.disposed||t.isQueryAvailable(e,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}))];case 1:return n.sent(),[2,this.getQueryTime(e,l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))]}}))}))},e.prototype.getQueryTime=function(e,t){if(0===t)return null;if(2===t){var n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6},e.prototype.isQueryAvailable=function(e,t){if(0===t)return!0;if(2===t){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}return a=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint},e.prototype.pollFence=function(e){var t=this;return new Promise((function(n){t.addItemToPoll((function(){return e.isFencePassed()}),(function(){return n()}))}))},e.prototype.pollItems=function(){for(var e=function(e){for(var t=0;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((function(e){return e.isDoneFn}))),t=0;t<=e;++t)(0,this.itemsToPoll[t].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(e+1)},e.prototype.addItemToPoll=function(e,t){var n=this;this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||O((function(){return n.pollItems(),0===n.itemsToPoll.length}))},e.prototype.bindTextureToFrameBuffer=function(e){this.throwIfDisposed(),bt(this.gl,this.debug,e,this.framebuffer),this.debug&&wt(this.gl)},e.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(bt(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&wt(this.gl)):xt(this.gl,this.debug,this.framebuffer)},e.prototype.downloadMatrixDriver=function(e,t){this.bindTextureToFrameBuffer(e);var n=t();return this.unbindTextureToFrameBuffer(),n},e.prototype.setOutputMatrixTextureDriver=function(e,t,n){this.throwIfDisposed();var r=this.gl;bt(r,this.debug,e,this.framebuffer),this.debug&&wt(r),this.outputTexture=e,Je(r,this.debug,(function(){return r.viewport(0,0,t,n)})),Je(r,this.debug,(function(){return r.scissor(0,0,t,n)}))},e.prototype.setOutputMatrixWriteRegionDriver=function(e,t,n,r){var a=this;this.throwIfDisposed(),Je(this.gl,this.debug,(function(){return a.gl.scissor(e,t,n,r)}))},e.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")},e.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error("No GPU program is currently set.")},e}();function go(e,t){if(e.length!==t.length)throw Error("Binary was compiled with "+e.length+" inputs, but was executed with "+t.length+" inputs");e.forEach((function(e,n){var r=e.logicalShape,a=t[n],s=a.shape;if(!A(r,s))throw Error("Binary was compiled with different shapes than the current args. Shapes "+r+" and "+s+" must match");if(!e.isUniform||!a.isUniform){var i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!A(i,o))throw Error("Binary was compiled with different texture shapes than the current args. Shape "+i+" and "+o+" must match")}}))}var vo=function(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var r=n.filterWidth,a=n.inChannels,s=n.strideWidth,i=n.strideHeight,o=n.padInfo,u=n.outWidth,l=n.dilationWidth,c=n.dilationHeight,h=n.dataFormat,p=o.left,d=o.top,f=a*r,m=Gs(),g="channelsLast"===h,v=g?0:1,y=g?1:2,b="",x=0;x<=1;x++)for(var w=0;w<=1;w++)b+="\n          blockIndex = rc.y + "+w+";\n          pos = rc.x + "+x+";\n\n          if(blockIndex < "+e[1]+" && pos < "+e[0]+") {\n            offsetY = int(blockIndex / ("+u+")) * "+i+" - "+d+";\n            d0 = offsetY + "+c+" * (pos / "+f+");\n\n            if(d0 < "+t[v]+" && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), "+u+".) * "+s+". - "+p+".);\n              d1 = offsetX + "+l+" * (int(mod(float(pos), "+f+".) / "+a+".));\n\n              if(d1 < "+t[y]+" && d1 >= 0) {\n\n                ch = int(mod(float(pos), "+a+".));\n\n                if ("+g+") {\n                  innerDims = vec2(d1, ch);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result["+(2*x+w)+"] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ";this.userCode="\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        "+b+"\n\n        "+m.output+" = result;\n      }\n    "},yo=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];var s,i=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";s=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -"+i+"; j <= "+i+"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  "+o+") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * "+s+";\n        setOutput(val);\n      }\n    "},bo=function(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < "+this.depth+"; ++d) {\n          int depthBegin = int(max(0.0, float(d - "+t+")));\n          int depthEnd = int(min(float("+this.depth+"),\n              float(d + "+t+" + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = "+this.depth+";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float("+r+") * norm + float("+n+");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float("+r+")\n                * float("+a+")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * "+a+");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    "},xo=function(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;var s,i=t,o=e[3]-1;this.outputShape=e;var u="float("+n+") + float("+r+") * sum";s=.5===a?"inversesqrt("+u+")":1===a?"1.0/("+u+")":"exp(log("+u+") * float(-"+a+"));",this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < "+this.outputShape[3]+";\n        bool hasNextRow = c < "+this.outputShape[2]+";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - "+i+";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - "+i+"; j <= "+i+"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2("+o+"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * "+s+";\n        setOutput(result);\n      }\n    "},wo=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode="\n      const ivec2 pads = ivec2("+i+", "+o+");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < "+a+";\n          wR += "+r+") {\n          float dyR = float(dyRCorner + wR) / "+t+".0;\n\n          if (dyR < 0.0 || dyR >= "+e.outHeight+".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < "+s+"; wC++) {\n            float dyC = float(dyCCorner + wC) / "+n+".0;\n\n            if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = "+u+" - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * "+s+" + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},ko=function(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;var t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode="\n      const ivec3 pads = ivec3("+c+", "+h+", "+p+");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < "+o+";\n           wD += "+a+") {\n          float dyD = float(dyDCorner + wD) / "+t+".0;\n\n          if (dyD < 0.0 || dyD >= "+e.outDepth+".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < "+u+";\n              wR += "+s+") {\n            float dyR = float(dyRCorner + wR) / "+n+".0;\n\n            if (dyR < 0.0 || dyR >= "+e.outHeight+".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < "+l+";\n                wC += "+i+") {\n              float dyC = float(dyCCorner + wC) / "+r+".0;\n\n              if (dyC < 0.0 || dyC >= "+e.outWidth+".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = "+d+" -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * "+u+" * "+l+" +\n                  wR * "+l+" + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    "},Io=function(e,t,n,r,a,s,i){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===s&&(s=null),void 0===i&&(i=!1),this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;var o=n?e[1]:e[2],u=Math.ceil(o/2),l=n?"i * 2, rc.y":"rc.y, i * 2",c=r?"rc.z, i * 2":"i * 2, rc.z",h=n?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],p=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],d="",f="";s&&(d=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          "+s+"\n        }":"vec4 activation(vec4 x) {\n          "+s+"\n        }",f="result = activation(result);");var m=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode="\n      "+d+"\n\n      const float sharedDimension = "+u+".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < "+u+"; i++) {\n          vec4 a = getMatrixA(rc.x, "+l+");\n          vec4 b = getMatrixB(rc.x, "+c+");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += ("+h[0]+" * "+p[0]+");\n          result += ("+h[1]+" * "+p[1]+");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        "+m+"\n\n        "+f+"\n\n        setOutput(result);\n      }\n    "},Co=function(){function e(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode="\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < "+(t-1)+"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float("+(t-1)+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;return function(n,r){null==t.seedLoc&&(t.seedLoc=n.getUniformLocation(r,"seed")),n.gl.uniform1f(t.seedLoc,e)}},e}(),No=function(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float("+r+"), float("+n+"),\n                      float(index == coords.y)));\n      }\n    "},So=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;var t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{var n=Us("rc",t),r=ri(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];for(var r="",a=e-2;a<e;a++)r+=n[a]+" >= "+t[a],a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";var a=r.slice(-2);return"\n    int r = "+a[0]+";\n    int c = "+a[1]+";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= "+t+";\n    bool rEdge = rp1 >= "+n+";\n  "}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){var n=e.length,r=function(e,t){for(var n=[],r=0;r<=1;r++)for(var a=0;a<=1;a++){for(var s=(0===r?"r":"rp1")+", "+(0===a?"c":"cp1"),i=2;i<e;i++)s=t[t.length-1-i]+","+s;n.push(s)}return n}(n,t);return 1===n?"getA(rc),\n            rc + 1 >= "+e[0]+" ? 0. : getA(rc + 1),\n            0, 0":"getA("+r[0]+"),\n          cEdge ? 0. : getA("+r[1]+"),\n          rEdge ? 0. : getA("+r[2]+"),\n          rEdge || cEdge ? 0. : getA("+r[3]+")"}(e,n);this.userCode="\n        void main() {\n          "+r+" rc = getOutputCoords();\n\n          if("+a+") {\n            setOutput(vec4(0));\n          } else {\n            "+s+"\n\n            setOutput(vec4("+i+"));\n          }\n        }\n      "}},Eo=function(e,t,n){this.variableNames=["x"],this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));var r=e.length,a=ri(r),s=t.map((function(e){return e[0]})).join(","),i=t.map((function(t,n){return t[0]+e[n]})).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?"\n      "+a+" start = "+a+"("+s+");\n      "+a+" end = "+a+"("+i+");\n\n      void main() {\n        "+a+" outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float("+n+"));\n        } else {\n          "+a+" coords = outC - start;\n          setOutput(getX("+o+"));\n        }\n      }\n    ":"\n        int start = "+s+";\n        int end = "+i+";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float("+n+"));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      "},To=function(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((function(t,n){return t[0]+e[n]+t[1]}));for(var r=e.length,a=ri(r),s=t.map((function(e){return e[0]})).join(","),i=t.map((function(t,n){return t[0]+e[n]})).join(","),o=Us("rc",r),u=Us("source",r),l=o[r-1]+" < "+this.outputShape[r-1],c=1===r?"source":"vec2("+u.slice(-2).join()+")",h=[a+" rc = outputLoc;",o[r-1]+" += 1;\n       if("+l+") {\n      ",1===r?"":"}\n       rc = outputLoc;\n       "+o[r-2]+" += 1;\n       if("+o[r-2]+" < "+this.outputShape[r-2]+") {",1===r?"":"  "+o[r-1]+" += 1;\n         if("+l+") {"],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",d="",f=0,m=1===r?2:4;f<m;f++)d+="\n        "+h[f]+"\n        if ("+p+") {\n          result["+f+"] = float("+n+");\n        } else {\n          "+a+" source = rc - start;\n          result["+f+"] = getChannel(getX("+u.join()+"), "+c+");\n        }\n      ";d+=1===r?"} ":"}}",this.userCode="\n      const "+a+" start = "+a+"("+s+");\n      const "+a+" end = "+a+"("+i+");\n\n      void main() {\n        "+a+" outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        "+d+"\n        setOutput(result);\n      }\n    "},Ro=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;var f="avg"===t,m="((batch  * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + d",g="(xR * "+e.inWidth+" + xC) * "+e.inChannels+" + d",v="0.0";if(f||(v="-1.0 / 1e-20"),n)this.userCode="\n        const ivec2 strides = ivec2("+i+", "+o+");\n        const ivec2 pads = ivec2("+p+", "+d+");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < "+c+";\n              wR += "+u+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+h+";\n                wC += "+l+") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= "+e.inWidth+") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = "+(r?a?m:g:"wR * "+h+" + wC")+";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var y=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(y="avgValue / count");var b=4*Math.floor(s/4),x=s%4,w="\n      if ("+f+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec2 strides = ivec2("+i+", "+o+");\n      const ivec2 pads = ivec2("+p+", "+d+");\n      const float initializationValue = "+v+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+v+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < "+c+";\n            wR += "+u+") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= "+e.inHeight+") {\n            continue;\n          }\n\n          for (int wC = 0; wC < "+b+"; wC += 4) {\n            int xC = xCCorner + wC * "+l+";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              getValue(batch, xR, xC + 3 * "+l+", d)\n            );\n\n            "+w+"\n          }\n\n          int xC = xCCorner + "+b+";\n          if ("+(1===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(2===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              initializationValue,\n              initializationValue\n            );\n\n            "+w+"\n          } else if ("+(3===x)+") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + "+l+", d),\n              getValue(batch, xR, xC + 2 * "+l+", d),\n              initializationValue\n            );\n\n            "+w+"\n          }\n        }\n        setOutput("+y+");\n      }\n    "}},Ao=function(e,t,n,r,a){if(void 0===r&&(r=!1),void 0===a&&(a=!1),this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");var s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;var y="avg"===t,b="0.0";if(y||(b="-1.0 / 1e-20"),n)this.userCode="\n        const ivec3 strides =\n            ivec3("+i+", "+o+", "+u+");\n        const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < "+p+";\n              wD += "+l+") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= "+e.inDepth+") {\n              continue;\n            }\n\n            for (int wR = 0; wR < "+d+";\n                wR += "+c+") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= "+e.inHeight+") {\n                continue;\n              }\n\n              for (int wC = 0; wC < "+f+";\n                  wC += "+h+") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= "+e.inWidth+") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = "+(r?a?"(((batch * "+e.inDepth+" + xD) * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"((xD * "+e.inHeight+" + xR) * "+e.inWidth+" + xC) * "+e.inChannels+" + ch":"wD * "+d+" * "+f+" +\n                      wR * "+f+" + wC")+";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";else{var x=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / count");var w=4*Math.floor(s/4),k=s%4,I="\n      if ("+y+") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";this.userCode="\n      const ivec3 strides =\n        ivec3("+i+", "+o+", "+u+");\n      const ivec3 pads = ivec3("+m+", "+g+", "+v+");\n      const float initializationValue = "+b+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= "+e.inWidth+") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4("+b+");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < "+p+";\n            wD += "+l+") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= "+e.inDepth+") {\n            continue;\n          }\n\n          for (int wR = 0; wR < "+d+";\n            wR += "+c+") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= "+e.inHeight+") {\n              continue;\n            }\n\n            for (int wC = 0; wC < "+w+"; wC += 4) {\n              int xC = xCCorner + wC * "+h+";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                getValue(batch, xD, xR, xC + 3 * "+h+", ch)\n              );\n\n              "+I+"\n            }\n\n            int xC = xCCorner + "+w+";\n            if ("+(1===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(2===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              "+I+"\n            } else if ("+(3===k)+") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + "+h+", ch),\n                getValue(batch, xD, xR, xC + 2 * "+h+", ch),\n                initializationValue\n              );\n\n              "+I+"\n            }\n          }\n          setOutput("+x+");\n        }\n      }\n    "}},Do=function(e,t){this.variableNames=["x"];var n=e.windowSize,r=e.batchSize,a=e.inSize,s=Math.ceil(a/n);this.outputShape=[r,s];var i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");var u=t+"("+t+"("+t+"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");var l=4*Math.floor(n/4),c=n%4,h="\n      if ("+("sum"===t)+") {\n        sumValue += dot(values, ones);\n      } else if ("+("prod"===t)+") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = "+o+"(values, minMaxValue);\n      }\n    ",p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");var d="";a%n>0&&(d="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      "),this.userCode="\n      const float initializationValue = "+i+";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        "+d+"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * "+n+";\n\n        vec4 minMaxValue = vec4("+i+");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < "+l+"; i += 4) {\n          int inIdx = inOffset + i;\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          "+h+"\n        }\n\n        int inIdx = inOffset + "+l+";\n        if ("+(1===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(2===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          "+h+"\n        } else if ("+(3===c)+") {\n          "+p+" values = "+p+"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          "+h+"\n        }\n        setOutput("+u+");\n      }\n    "},Fo=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;for(var n="",r=0;r<4;r++){var a="thisRC = rc;";r%2==1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+="\n        "+a+"\n        "+(r>0?"if(thisRC.y < rows && thisRC.z < cols){":"")+"\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result["+r+"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        "+(r>0?"}":"")+"\n      "}this.userCode="\n      \n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      "+Hs(["r","c","d"],t)+"\n      return ivec3(r, c, d);\n    }\n  \n      "+qs(e)+"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = "+e[1]+";\n        int cols = "+e[2]+";\n\n        "+n+"\n\n        setOutput(result);\n      }\n    "},_o=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],s=r[2],i=e.shape,o=i[1],u=i[2],l=[n&&o>1?a-1:a,n&&u>1?s-1:s],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],p=l[1]/c[1],d=1/h,f=1/p,m=2*Math.ceil(d)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+p+");\n\n        const float invHeightScale = float("+d+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), "+(a-1)+".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), "+(s-1)+".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},$o=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],s=e[1],i=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+s+".0, "+i+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    "},Oo=function(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];var a=e[0],s=e[1],i=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+",\n          "+u[1]/l[1]+");\n      const vec3 inputShapeRC = vec3("+s+".0, "+i+".0,\n                                     "+i+".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < "+(o-1)+";\n        bool hasNextRow = coords.z < "+(n-1)+";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    "},Mo=function(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t.shape;var r=t.shape,a=r[1],s=r[2],i=e.shape,o=i[1],u=i[2],l=[n&&o>1?a-1:a,n&&u>1?s-1:s],c=[n&&o>1?o-1:o,n&&u>1?u-1:u],h=l[0]/c[0],p=l[1]/c[1],d=1/h,f=1/p,m=2*Math.ceil(d)+2,g=2*Math.ceil(f)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float("+h+");\n        const float widthScale = float("+p+");\n\n        const float invHeightScale = float("+d+");\n        const float invWidthScale = float("+f+");\n\n        const int winHeight = int("+m+");\n        const int winWidth = int("+g+");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= "+o+") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= "+u+") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float("+l[0]+") *\n                (float(dyR) / float("+c[0]+"));\n\n            float sourceFracCol =\n                float("+l[1]+") *\n                  (float(dyC) / float("+c[1]+"));\n\n            int sourceNearestRow = int(min(\n                float(int("+a+") - 1),\n                "+n+" ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int("+s+") - 1),\n                "+n+" ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    "},Lo=function(e,t,n,r){this.variableNames=["A"],this.outputShape=[];var a=e[0],s=e[1],i=e[2],o=e[3];this.outputShape=[a,t,n,o];var u=[r&&t>1?s-1:s,r&&n>1?i-1:i],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],c=r?"0.5":"0.0";this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          "+u[0]/l[0]+",\n          "+u[1]/l[1]+");\n      const vec2 inputShapeRC = vec2("+s+".0, "+i+".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + "+c+")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    "},Bo=function(e,t){this.variableNames=["x"];var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");if(this.outputShape=e,1!==n){var r=e.map((function(n,r){return function(n){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - coords["+n+"] - 1":"coords["+n+"]"}(r)})).join(","),a=ri(n);this.userCode="\n      void main() {\n        "+a+" coords = getOutputCoords();\n        setOutput(getX("+r+"));\n      }\n    "}else this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX("+e[0]+" - coord - 1));\n        }\n      "},Po=function(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;var n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-"+n+" tensor is not yet supported");this.outputShape=e;var r=Us("rc",n),a=r[n-1]+" + 1 < "+this.outputShape[n-1],s=r[n-2]+" + 1 < "+this.outputShape[n-2],i=ri(n);function o(n){var r=e.map((function(r,a){return function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?e[n]+" - "+r[n]+" - 1":""+r[n]}(a,n)}));return"getChannel(getX("+r.join(",")+"), vec2("+r.slice(-2).join(",")+"))"}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX("+e[0]+" - rc - 1),\n            "+e[0]+" - rc - 1);\n          if("+a+"){\n              result.g = getChannel(getX("+e[0]+" - (rc  + 1) - 1),\n                "+e[0]+" - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      ":"\n        void main() {\n          "+i+" rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = "+function(e){return o(e)}(r.slice())+";\n          if("+a+"){\n            result.g = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())+";\n          }\n          if("+s+") {\n            result.b = "+function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            if("+a+") {\n              result.a = "+function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())+";\n            }\n          }\n          setOutput(result);\n        }\n    "},zo=function(e,t,n,r,a,s,i){void 0===i&&(i=!0),this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;var o=ri(a.length),u=ri(s.length),l="";1===n?l="i":2===n&&(l="i, j");var c="getIndices("+l+")",h="";1===r?h="i":2===r&&(h="i, coords[1]");var p="getUpdates("+h+")",d=t>1?"strides[j]":"strides";this.userCode="\n        "+o+" strides = "+o+"("+a+");\n\n        void main() {\n          "+u+" coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < "+e+"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < "+t+"; j++) {\n              int index = round("+c+");\n              flattenedIndex += index * "+d+";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += "+p+";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      "},Wo=function(e,t){this.variableNames=["x","segmentIds"];var n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];var o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ",c="";a%n>0&&(c="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return initializationValue;\n        }\n      ");var h="";a%n>0&&(h="\n        if (inIdx < 0 || inIdx >= "+a+") {\n          return -1.0;\n        }\n      "),this.userCode="\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        "+c+"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        "+h+"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          "+s+")) * float("+n+"));\n        int currentSeg = int(mod(float(outIdx), float("+s+")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < "+o+"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          "+l+"\n        }\n\n        int inIdx = inOffset + "+o+";\n        if ("+(1===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          "+l+"\n        } else if ("+(2===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          "+l+"\n        } else if ("+(3===u)+") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          "+l+"\n        }\n        setOutput(sumValue);\n      }\n    "},Vo=function(e,t,n){var r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank "+n+" is not yet supported");if(1===n)a="resRC",r="resRC";else{for(var s=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[],u=0;u<t.length;u++)o.push(""+s[u]),u<e&&i.push(""+s[u]);r=i.join(),a=o.join()}var l=ri(n);this.userCode="\n      void main() {\n        "+l+" resRC = getOutputCoords();\n        float cVal = getC("+r+");\n        if (cVal >= 1.0) {\n          setOutput(getA("+a+"));\n        } else {\n          setOutput(getB("+a+"));\n        }\n      }\n    "},Uo=function(){function e(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;var t,n=ri(this.rank),r="uniform int start["+this.rank+"];",a=function(e){if(1===e)return"sourceLoc";if(e<=6)return Go.slice(0,e).map((function(e){return"sourceLoc."+e})).join(",");throw Error("Slicing for rank "+e+" is not yet supported")}(this.rank);t="\n        "+n+" sourceLoc;\n        "+n+" coords = getOutputCoords();\n        "+e.map((function(e,t){return"sourceLoc."+Go[t]+" = start["+t+"] + coords."+Go[t]+";"})).join("\n")+"\n      ",this.userCode="\n      "+r+"\n      void main() {\n        "+t+"\n        setOutput(getSource("+a+"));\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),Go=["x","y","z","w","u","v"],Ho=function(){function e(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;var t=ri(this.rank),n=Us("coords",this.rank),r=Us("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":"vec2("+r.slice(-2).join()+")",s="getChannel(getSource("+r.join()+"), "+a+")",i="\n      result.x = "+s+";\n      if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n        ++"+r[this.rank-1]+";\n        result.y = "+s+";\n        --"+r[this.rank-1]+";\n      }\n    ",o=1===this.rank?"":"\n      --"+n[this.rank-1]+";\n      if (++"+n[this.rank-2]+" < "+e[this.rank-2]+") {\n        ++"+r[this.rank-2]+";\n        result.z = "+s+";\n        if (++"+n[this.rank-1]+" < "+e[this.rank-1]+") {\n          ++"+r[this.rank-1]+";\n          result.w = "+s+";\n        }\n      }\n    ",u=this.rank<=4?"sourceLoc = coords +\n            "+t+"("+e.map((function(e,t){return"start["+t+"]"})).join()+");":e.map((function(e,t){return r[t]+" = "+n[t]+" + start["+t+"];"})).join("\n");this.userCode="\n      uniform int start["+this.rank+"];\n      void main() {\n        "+t+" coords = getOutputCoords();\n        "+t+" sourceLoc;\n        "+u+"\n        vec4 result = vec4(0.);\n        "+i+"\n        "+o+"\n        setOutput(result);\n      }\n    "}return e.prototype.getCustomSetupFunc=function(e){var t=this;if(e.length!==this.rank)throw Error("The rank ("+this.rank+") of the program must match the length of start ("+e.length+")");return function(n,r){null==t.startLoc&&(t.startLoc=n.getUniformLocationNoThrow(r,"start"),null==t.startLoc)||n.gl.uniform1iv(t.startLoc,e)}},e}(),qo=function(e,t,n){this.variableNames=["x"],this.outputShape=n;var r=n.length,a=ri(n.length),s=ri(n.length),i="";if(1===r)i="coords * strides + begin";else{var o=0;i=n.map((function(e,t){return o++,1===n.length?"coords * strides["+t+"] + begin["+t+"]":"coords["+(o-1)+"] * strides["+t+"] + begin["+t+"]"})).join(",")}this.userCode="\n      "+a+" begin = "+a+"("+e+");\n      "+a+" strides = "+a+"("+t+");\n\n      void main() {\n        "+s+" coords = getOutputCoords();\n        setOutput(getX("+i+"));\n      }\n    "},jo=function(){function e(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return e.prototype.acquireTexture=function(e,t,n){var r,a=Ko(t,n),s=Xo(e,a,n);if(s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]),this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[s].shift();return this.usedTextures[s].push(i),i}return this.numUsedTextures++,this.log(),a===Ve.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Ve.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Ve.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Ve.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Ve.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(r),r},e.prototype.releaseTexture=function(e,t,n,r){if(null!=this.freeTextures){var a=Xo(t,Ko(n,r),r);a in this.freeTextures||(this.freeTextures[a]=[]),this.freeTextures[a].push(e),this.numFreeTextures++,this.numUsedTextures--;var s=this.usedTextures[a],i=s.indexOf(e);if(i<0)throw new Error("Cannot release a texture that was never provided by this texture manager");s.splice(i,1),this.log()}},e.prototype.log=function(){if(this.logEnabled){var e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",this.numFreeTextures+" / "+this.numUsedTextures,"("+e+")")}},e.prototype.getNumUsedTextures=function(){return this.numUsedTextures},e.prototype.getNumFreeTextures=function(){return this.numFreeTextures},e.prototype.dispose=function(){var e=this;if(null!=this.freeTextures){for(var t in this.freeTextures)this.freeTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));for(var t in this.usedTextures)this.usedTextures[t].forEach((function(t){e.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},e}();function Ko(e,t){if(e===We.UPLOAD)return Ve.PACKED_2X2_FLOAT32;if(e===We.RENDER||null==e)return function(e){return l().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ve.PACKED_2X2_FLOAT32:Ve.UNPACKED_FLOAT32:e?Ve.PACKED_2X2_FLOAT16:Ve.UNPACKED_FLOAT16}(t);if(e===We.DOWNLOAD||e===We.PIXELS)return Ve.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function Xo(e,t,n){return e[0]+"_"+e[1]+"_"+t+"_"+n}var Yo=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;var a=ri(this.rank),s=function(e){var t=e.length;if(t>5)throw Error("Tile for rank "+t+" is not yet supported");if(1===t)return"imod(resRC, "+e[0]+")";for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[],a=0;a<e.length;a++)r.push("imod("+n[a]+", "+e[a]+")");return r.join()}(e);this.userCode="\n      void main() {\n        "+a+" resRC = getOutputCoords();\n        setOutput(getA("+s+"));\n      }\n    "},Jo=function(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      float unaryOperation(float x) {\n        "+t+"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},Zo="if (isnan(x)) return x;",Qo="return abs(x);",eu=Zo+"\n  return (x < 0.0) ? 0.0 : x;\n",tu=Zo+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",nu="return (x >= 0.0) ? x : (exp(x) - 1.0);",ru="return -x;",au="return ceil(x);",su="return floor(x);",iu="return exp(x);",ou="return exp(x) - 1.0;",uu="return x;",lu="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cu="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hu="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",pu=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        "+t+"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    "},du=function(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;var t=e.length,n=Us("rc",t),r=ri(t),a=function(e,t){if(1===e)return"rc";for(var n="",r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":"vec2("+s.join(",")+")";this.userCode="\n      void main() {\n        "+r+" rc = getOutputCoords();\n        vec4 packedInput = getA("+a+");\n\n        setOutput(getChannel(packedInput, "+i+"));\n      }\n    "},fu={};function mu(e,t){if(void 0===t&&(t=!1),"linear"===e)return"return x;";if("relu"===e)return t?lu:eu;if("elu"===e)return t?hu:nu;if("relu6"===e)return t?cu:tu;if("prelu"===e)return t?vi:mi;throw new Error("Activation "+e+" has not been implemented for the WebGL backend.")}var gu=function(e){function t(t){var n,r=e.call(this)||this;if(r.pendingRead=new WeakMap,r.pendingDisposal=new WeakSet,r.dataRefCount=new WeakMap,r.numBytesInGPU=0,r.uploadWaitMs=0,r.downloadWaitMs=0,r.warnedAboutMemory=!1,r.pendingDeletes=0,r.disposed=!1,!l().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){var a=qe(l().getNumber("WEBGL_VERSION"));r.binaryCache=((n=l().getNumber("WEBGL_VERSION"))in fu||(fu[n]={}),fu[n]),r.gpgpu=new mo(a),r.canvas=a.canvas,r.gpgpuCreatedLocally=!0}else r.gpgpu=t,r.binaryCache={},r.gpgpuCreatedLocally=!1,r.canvas=t.gl.canvas;return r.textureManager=new jo(r.gpgpu),r.numMBBeforeWarning=null==l().global.screen?1024:l().global.screen.height*l().global.screen.width*window.devicePixelRatio*600/1024/1024,r.texData=new as(r,Le),r}return a(t,e),t.prototype.numDataIds=function(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes},t.prototype.write=function(e,t,n){if(l().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");var r={};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:We.UPLOAD}),r},t.prototype.move=function(e,t,n,r){if(l().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:We.UPLOAD})},t.prototype.readSync=function(e){var t=this.texData.get(e),n=t.values,r=t.dtype,a=t.complexTensors,s=t.slice,i=t.shape,o=t.isPacked;if(null!=s){var u;u=o?new pu(i,uu):new Jo(i,uu);var l=this.runWebGLProgram(u,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(l.dataId);return this.disposeData(l.dataId),c}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;var h,p,d=null!=this.activeTimers;return d&&(h=ae()),p="complex64"===r?Is(a.real.dataSync(),a.imag.dataSync()):this.getValuesFromTexture(e),d&&(this.downloadWaitMs+=ae()-h),this.convertAndCacheOnCPU(e,p)},t.prototype.read=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a,s,o,u,c,h,p,d,f,m,g,v,y,b,x,w,k,I,C;return i(this,(function(i){switch(i.label){case 0:if(this.pendingRead.has(e))return t=this.pendingRead.get(e),[2,new Promise((function(e){return t.push(e)}))];if(n=this.texData.get(e),r=n.values,a=n.shape,s=n.slice,o=n.dtype,u=n.complexTensors,c=n.isPacked,null!=s)return h=c?new pu(a,uu):new Jo(a,uu),p=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:o}],o),d=this.read(p.dataId),this.disposeData(p.dataId),[2,d];if(null!=r)return[2,this.convertAndCacheOnCPU(e)];if(!l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===l().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");return f=null,"complex64"!==o&&l().get("WEBGL_BUFFER_SUPPORTED")&&(m=this.decode(e),g=this.texData.get(m.dataId),f=(C=this.gpgpu).createBufferFromTexture.apply(C,[g.texture].concat(Ke(a)))),this.pendingRead.set(e,[]),"complex64"===o?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:i.sent(),i.label=2;case 2:return"complex64"!==o?[3,4]:[4,Promise.all([u.real.data(),u.imag.data()])];case 3:return y=i.sent(),b=y[0],x=y[1],v=Is(b,x),[3,5];case 4:null==f?v=this.getValuesFromTexture(e):(w=R(a),v=this.gpgpu.downloadFloat32MatrixFromBuffer(f,w)),i.label=5;case 5:return null!=m&&this.disposeData(m.dataId),k=this.convertAndCacheOnCPU(e,v),I=this.pendingRead.get(e),this.pendingRead.delete(e),I.forEach((function(e){return e(k)})),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e),this.pendingDeletes--),[2,k]}}))}))},t.prototype.checkNumericalProblems=function(e){if(null!=e)for(var t=0;t<e.length;t++){var n=e[t];if(!Ze(n)){if(l().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value "+n+" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value "+n+" cannot be represented on this device.")}}},t.prototype.getValuesFromTexture=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,s=n.isPacked,i=R(r);if(l().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){var o=this.decode(e),u=this.texData.get(o.dataId),c=(t=this.gpgpu).downloadMatrixFromPackedTexture.apply(t,[u.texture].concat(Ke(r))).subarray(0,i);return this.disposeData(o.dataId),c}var h=l().getBool("WEBGL_PACK")&&!0===s,p=h?Et(r):r,d=h?new Ui(p):new Vi(p),f=this.runWebGLProgram(d,[{shape:p,dtype:a,dataId:e}],"float32"),m=this.texData.get(f.dataId),g=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture,m.texShape[0],m.texShape[1]).subarray(0,i);return this.disposeData(f.dataId),g},t.prototype.time=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a,s,o,u;return i(this,(function(i){switch(i.label){case 0:return t=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e(),a=T(this.activeTimers.map((function(e){return e.query}))).filter((function(e){return null!=e})),s=T(this.activeTimers.map((function(e){return e.name}))).filter((function(e){return null!=e})),this.activeTimers=t,r&&(this.programTimersStack=null),o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[4,Promise.all(a)]:[3,2];case 1:return u=i.sent(),o.kernelMs=C(u),o.getExtraProfileInfo=function(){return u.map((function(e,t){return{name:s[t],ms:e}})).map((function(e){return e.name+": "+e.ms})).join(", ")},[3,3];case 2:o.kernelMs={error:"WebGL query timers are not supported in this environment."},i.label=3;case 3:return this.uploadWaitMs=0,this.downloadWaitMs=0,[2,o]}}))}))},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ae(),endMs:null}},t.prototype.endTimer=function(e){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ae(),e)},t.prototype.getQueryTime=function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){return l().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?[2,this.gpgpu.waitForQueryAndGetTime(e)]:[2,(t=e).endMs-t.startMs]}))}))},t.prototype.disposeData=function(e){if(!this.pendingDisposal.has(e)){if(this.pendingRead.has(e))return this.pendingDisposal.add(e),void this.pendingDeletes++;if(this.texData.has(e)){this.releaseGPUData(e);var t=this.texData.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.texData.delete(e)}}},t.prototype.releaseGPUData=function(e){var t=this.texData.get(e),n=t.texture,r=t.dtype,a=t.texShape,s=t.usage,i=t.isPacked,o=t.slice,u=o&&o.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(a,r),this.textureManager.releaseTexture(n,a,s,i)));var c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},t.prototype.getTexture=function(e){return this.uploadToGPU(e),this.texData.get(e).texture},t.prototype.getDataInfo=function(e){return this.texData.get(e)},t.prototype.getCPUBackend=function(){return l().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Le.findBackend("cpu")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(e,t){var n=this;return void 0===t&&(t=128),null!=this.getCPUBackend()&&e.every((function(e){return null==n.texData.get(e.dataId).texture&&R(e.shape)<t}))},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(e,t){var n=this.makeOutput(e.shape,"complex64");return this.texData.get(n.dataId).complexTensors={real:Le.keep(e.clone()),imag:Le.keep(t.clone())},n},t.prototype.real=function(e){return this.texData.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.texData.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.slice(e,t,n);if(0===R(n))return Rn([],n,e.dtype);var r=this.texData.get(e.dataId).isPacked,a=Ha(e.shape,t,n);if(r||!a){var s=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ho(n):new Uo(n),i=s.getCustomSetupFunc(t);return this.compileAndRun(s,[e],null,i)}return this.uploadToGPU(e.dataId),this.shallowSlice(e,t,n)},t.prototype.shallowSlice=function(e,t,n){var r=this.texData.get(e.dataId),a=this.makeOutput(n,e.dtype),s=this.texData.get(a.dataId);Object.assign(s,r),s.shape=n,s.dtype=e.dtype;var i=qa(t,e.strides);r.slice&&(i+=r.slice.flatOffset),s.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};var o=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,o+1),a},t.prototype.stridedSlice=function(e,t,n,r){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.stridedSlice(e,t,n,r);var a=Va(t,n,r);if(a.some((function(e){return 0===e})))return Rn([],a);var s=new qo(t,r,a);return this.compileAndRun(s,[e])},t.prototype.reverse=function(e,t){var n=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Po(e.shape,t):new Bo(e.shape,t);return this.compileAndRun(n,[e])},t.prototype.concat=function(e,t){if("complex64"===e[0].dtype){var n=e.map((function(e){return En(e)})),r=e.map((function(e){return Tn(e)}));return Sn(this.concat(n,t),this.concat(r,t))}if(this.shouldExecuteOnCPU(e))return this.cpuBackend.concat(e,t);if(1===e.length)return e[0];if(e.length>l().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){var a=Math.floor(e.length/2),s=this.concat(e.slice(0,a),t),i=this.concat(e.slice(a),t);return this.concat([s,i],t)}if(l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].rank>1){var o=new Ii(e.map((function(e){return e.shape})),t);return this.compileAndRun(o,e)}var u=Cn(e.map((function(e){return e.shape})),t),c=e.map((function(e){return e.as2D(-1,R(e.shape.slice(t)))})),h=new ki(c.map((function(e){return e.shape})));return this.compileAndRun(h,c).reshape(u)},t.prototype.neg=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.neg(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ru,e.dtype);var t=new Jo(e.shape,ru);return this.compileAndRun(t,[e])},t.prototype.batchMatMul=function(e,t,n,r){var a=n?e.shape[2]:e.shape[1],s=r?t.shape[1]:t.shape[2],i=n?e.shape[1]:e.shape[2],o=e.shape[0];if((1===a||1===s)&&i>1e3){n&&(e=rs(e,[0,2,1])),r&&(t=rs(t,[0,2,1]));var u=1===s?e:e.as3D(o,i,1),l=1===s?2:1,c=1===s?t.as3D(o,1,i):t;return this.multiply(u,c).sum(l,!0)}var h=Te(e.dtype,t.dtype),p=new Io(e.shape,[o,a,s],n,r);return this.compileAndRun(p,[e,t],h)},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,s=e.bias,i=e.activation,o=e.preluActivationWeights,u=r?t.shape[2]:t.shape[1],l=a?n.shape[1]:n.shape[2],c=t.shape[0],h=Te(t.dtype,n.dtype),p=null!=s,d=null!=o,f=i?mu(i,!0):null,m=new Io(t.shape,[c,u,l],r,a,p,f,d),g=[t,n];return s&&g.push(s),o&&g.push(o),this.compileAndRun(m,g,h)},t.prototype.multiply=function(e,t){if("complex64"===e.dtype){var n=this.texData.get(e.dataId),r=this.texData.get(t.dataId),a=new hi("return areal * breal - aimag * bimag;",e.shape,t.shape),s=new hi("return areal * bimag + aimag * breal;",e.shape,t.shape),i=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag),this.makeComplexComponentTensorInfo(t,r.complexTensors.real),this.makeComplexComponentTensorInfo(t,r.complexTensors.imag)],o=this.compileAndRun(a,i),u=this.compileAndRun(s,i),c=this.complex(o,u);return o.dispose(),u.dispose(),c}if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.multiply(e,t);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,fi,e.dtype);var h=new gi(fi,e.shape,t.shape);return this.compileAndRun(h,[e,t],e.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,s){var i=[e,t,n],o=null;null!=s&&(o=s.shape,i.push(s));var u=null;if(null!=a&&(u=a.shape,i.push(a)),l().getBool("WEBGL_PACK_NORMALIZATION")){var c=new ci(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(c,i)}var h=new li(e.shape,t.shape,n.shape,o,u,r);return this.compileAndRun(h,i)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){var s=l().getBool("WEBGL_PACK_NORMALIZATION")?new xo(e.shape,t,n,r,a):new yo(e.shape,t,n,r,a);return this.compileAndRun(s,[e])},t.prototype.LRNGrad=function(e,t,n,r,a,s,i){var o=new bo(t.shape,r,a,s,i);return this.compileAndRun(o,[t,n,e])},t.prototype.tile=function(e,t){if("string"===e.dtype){var n=this.readSync(e.dataId).map((function(e){return oe(e)}));return Ms(Zn(e.shape,e.dtype,n),t)}var r=new Yo(e.shape,t);return this.compileAndRun(r,[e])},t.prototype.pad=function(e,t,n){var r=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new To(e.shape,t,n):new Eo(e.shape,t,n);return this.compileAndRun(r,[e])},t.prototype.gather=function(e,t,n){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.gather(e,t,n);var r=new Ki(e.shape,t.size,n);return this.compileAndRun(r,[e,t])},t.prototype.batchToSpaceND=function(e,t,n){N(e.rank<=4,(function(){return"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=hr(e.shape,t,r),s=pr(a.length,t.length),i=dr(e.shape,t,r),o=fr(n,t.length),u=mr(i,n,t.length);return rs(e.reshape(a),s).reshape(i).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){N(e.rank<=4,(function(){return"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"}));var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var s=1+t.length;s<e.shape.length;++s)a.push([0,0]);var i=e.pad(a),o=hr(i.shape,t,r,!1),u=pr(o.length,t.length,!1),l=dr(i.shape,t,r,!1);return rs(i.reshape(o),u).reshape(l)},t.prototype.reduce=function(e,t,n){var r=e.shape[0],a=e.shape[1],s=Oa(a),i=new Do({windowSize:s,inSize:a,batchSize:r},t),o=this.compileAndRun(i,[e],n);return 1===o.shape[1]?o:this.reduce(o,t,n)},t.prototype.argReduce=function(e,t,n){void 0===n&&(n=null);var r=e.shape[0],a=e.shape[1];null!=n&&(r=n.shape[0],a=n.shape[1]);var s=Oa(a),i=new Ws({windowSize:s,inSize:a,batchSize:r},t,null==n),o=[e];null!=n&&o.push(n);var u=this.compileAndRun(i,o,"int32");return 1===u.shape[1]?u:this.argReduce(e,t,u)},t.prototype.argReducePacked=function(e,t,n){void 0===n&&(n=null);var r=null!=n?n.shape:e.shape,a=Oa(r[r.length-1]),s=new ii(r,a,t,null==n),i=null==n?[e]:[e,n],o=this.compileAndRun(s,i,"int32");return o.rank===e.rank?this.argReducePacked(e,t,o):o},t.prototype.sum=function(e,t){bn("sum",t,e.rank);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a),i=Re(e.dtype);return this.reduce(s,"sum",i).reshape(r)},t.prototype.prod=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.prod(e,t);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a),i=Re(e.dtype);return this.reduce(s,"prod",i).reshape(r)},t.prototype.unsortedSegmentSum=function(e,t,n){var r=0,a=xn([r],e.rank),s=e;null!=a&&(s=rs(e,a),r=kn(1,e.rank)[0]);var i=function(e,t,n){for(var r=[],a=e.length,s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}(s.shape,r,n),o=R([s.shape[r]]),u=s.as2D(-1,o),l=Re(e.dtype),c=this.segOpCompute(u,"unsortedSegmentSum",t,l,n).reshape(i);return null!=a&&(c=rs(c,wn(a))),c},t.prototype.segOpCompute=function(e,t,n,r,a){var s=e.shape[0],i=e.shape[1],o=function(e,t){var n,r=!1;for(e<=30?(n=e,r=!0):n=Z(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Z(e,n+1);return n}(i,a),u=new Wo({windowSize:o,inSize:i,batchSize:s,numSegments:a},t),l=this.compileAndRun(u,[e,n],r);return l.shape[1]===a?l:(n=Un(0,a).tile([i/o]),this.segOpCompute(l,t,n,r,a))},t.prototype.argMinMaxReduce=function(e,t,n){var r=[t];if(bn("arg"+n.charAt(0).toUpperCase()+n.slice(1),r,e.rank),!l().getBool("WEBGL_PACK_REDUCE")||e.rank<=2){var a=vn(e.shape,r),s=a[0],i=R(a[1]),o=e.as2D(-1,i);return this.argReduce(o,n).reshape(s)}return this.argReducePacked(e,n)},t.prototype.argMin=function(e,t){return this.argMinMaxReduce(e,t,"min")},t.prototype.argMax=function(e,t){return this.argMinMaxReduce(e,t,"max")},t.prototype.cumsum=function(e,t,n,r){if(t!==e.rank-1)throw new Error("WebGL cumsum shader expects an inner-most axis="+(e.rank-1)+" but got axis="+t);var a=new Mi(e.shape,n,r);return this.compileAndRun(a,[e])},t.prototype.equal=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(equal(a, b));\n","bool");var n=new gi("return float(a == b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.notEqual=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(notEqual(a, b));\n","bool");var n=new gi("return float(a != b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.less=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.less(e,t);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThan(a, b));\n","bool");var n=new gi("return float(a < b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.lessEqual=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(lessThanEqual(a, b));\n","bool");var n=new gi("return float(a <= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greater=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.greater(e,t);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThan(a, b));\n","bool");var n=new gi("return float(a > b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.greaterEqual=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(greaterThanEqual(a, b));\n","bool");var n=new gi("return float(a >= b);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalNot=function(e){var t=new Jo(e.shape,"return float(!(x >= 1.0));");return this.compileAndRun(t,[e])},t.prototype.logicalAnd=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");var n=new gi("return float(a >= 1.0 && b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.logicalOr=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");var n=new gi("return float(a >= 1.0 || b >= 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t],"bool")},t.prototype.select=function(e,t,n){var r=new Vo(e.rank,t.shape,t.rank);return this.compileAndRun(r,[e,t,n],Te(t.dtype,n.dtype))},t.prototype.where=function(e){cn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");var t=e.dataSync();return Bs(e.shape,t)},t.prototype.topk=function(e,t,n){return Ls(e.dataSync(),e.shape,e.dtype,t)},t.prototype.min=function(e,t){bn("min",t,e.rank);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a);return this.reduce(s,"min",s.dtype).reshape(r)},t.prototype.minimum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.minimum(e,t);var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new gi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.mod=function(e,t){var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new gi("if (b == 0.0) return NAN;\n  return mod(a, b);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.max=function(e,t){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.max(e,t);bn("max",t,e.rank);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a);return this.reduce(s,"max",s.dtype).reshape(r)},t.prototype.maximum=function(e,t){if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.maximum(e,t);var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new gi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.all=function(e,t){bn("all",t,e.rank);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a);return this.reduce(s,"all",s.dtype).reshape(r)},t.prototype.any=function(e,t){bn("any",t,e.rank);var n=vn(e.shape,t),r=n[0],a=R(n[1]),s=e.as2D(-1,a);return this.reduce(s,"any",s.dtype).reshape(r)},t.prototype.floorDiv=function(e,t){if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n","int32");var n=new gi("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",e.shape,t.shape);return this.compileAndRun(n,[e,t],"int32")},t.prototype.add=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,pi);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.add(e,t);var n=Te(e.dtype,t.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,pi,n);var r=new gi(pi,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.packedUnaryOp=function(e,t,n){var r=new pu(e.shape,t);return this.compileAndRun(r,[e],n)},t.prototype.packedBinaryOp=function(e,t,n,r,a){void 0===a&&(a=!1);var s=new yi(n,e.shape,t.shape,a);return this.compileAndRun(s,[e,t],r)},t.prototype.complexSeparableBinaryOp=function(e,t,n){var r=this,a=this.texData.get(e.dataId),s=this.texData.get(t.dataId),i=[[a.complexTensors.real,s.complexTensors.real],[a.complexTensors.imag,s.complexTensors.imag]].map((function(a){var s=a[0],i=a[1],o=r.makeComplexComponentTensorInfo(e,s),u=r.makeComplexComponentTensorInfo(t,i),l=new gi(n,e.shape,t.shape);return r.compileAndRun(l,[o,u],Te(s.dtype,i.dtype))})),o=i[0],u=i[1],l=this.complex(o,u);return o.dispose(),u.dispose(),l},t.prototype.makeComplexComponentTensorInfo=function(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}},t.prototype.addN=function(e){if(1===e.length)return e[0];if(e.length>l().get("WEBGL_MAX_TEXTURES_IN_SHADER")){var t=Math.floor(e.length/2),n=this.addN(e.slice(0,t)),r=this.addN(e.slice(t));return this.addN([n,r])}var a=e.map((function(e){return e.dtype})).reduce((function(e,t){return Te(e,t)})),s=e.map((function(e){return e.shape})),i=l().getBool("WEBGL_PACK")?new zs(e[0].shape,s):new Ps(e[0].shape,s);return this.compileAndRun(i,e,a)},t.prototype.subtract=function(e,t){if("complex64"===e.dtype&&"complex64"===t.dtype)return this.complexSeparableBinaryOp(e,t,di);if(this.shouldExecuteOnCPU([e,t]))return this.cpuBackend.subtract(e,t);var n=Te(e.dtype,t.dtype);if(l().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(e,t,di,e.dtype);var r=new gi(di,e.shape,t.shape);return this.compileAndRun(r,[e,t],n)},t.prototype.pow=function(e,t){var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new gi("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",e.shape,t.shape),r=Te(e.dtype,t.dtype);return this.compileAndRun(n,[e,t],r)},t.prototype.ceil=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.ceil(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,au,e.dtype);var t=new Jo(e.shape,au);return this.compileAndRun(t,[e])},t.prototype.floor=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.floor(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,su,e.dtype);var t=new Jo(e.shape,su);return this.compileAndRun(t,[e])},t.prototype.sign=function(e){var t=new Jo(e.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(t,[e])},t.prototype.isNaN=function(e){var t=new Jo(e.shape,"return float(isnan(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isInf=function(e){var t=new Jo(e.shape,"return float(isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.isFinite=function(e){var t=new Jo(e.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(t,[e],"bool")},t.prototype.round=function(e){var t=new Jo(e.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(t,[e])},t.prototype.exp=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.exp(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,iu,e.dtype);var t=new Jo(e.shape,iu);return this.compileAndRun(t,[e])},t.prototype.expm1=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.expm1(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,ou,e.dtype);var t=new Jo(e.shape,ou);return this.compileAndRun(t,[e])},t.prototype.softmax=function(e,t){var n=L([t],e.shape),r=this.max(e,n),a=yn(r.shape,n),s=this.subtract(e,r.reshape(a)),i=this.exp(s),o=this.sum(i,n).reshape(a);return Fa(i,o)},t.prototype.log=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.log(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",e.dtype);var t=new Jo(e.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(t,[e])},t.prototype.log1p=function(e){var t=new Jo(e.shape,"return log(1.0 + x);");return this.compileAndRun(t,[e])},t.prototype.sqrt=function(e){var t=new Jo(e.shape,"return sqrt(x);");return this.compileAndRun(t,[e])},t.prototype.rsqrt=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.rsqrt(e);var t=new Jo(e.shape,"return inversesqrt(x);");return this.compileAndRun(t,[e])},t.prototype.reciprocal=function(e){var t=new Jo(e.shape,"return 1.0 / x;");return this.compileAndRun(t,[e])},t.prototype.relu=function(e){var t;return t=l().getBool("WEBGL_PACK")?new pu(e.shape,lu):new Jo(e.shape,eu),this.compileAndRun(t,[e])},t.prototype.relu6=function(e){var t;return t=l().getBool("WEBGL_PACK")?new pu(e.shape,cu):new Jo(e.shape,tu),this.compileAndRun(t,[e])},t.prototype.prelu=function(e,t){var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi(vi,e.shape,t.shape):new gi(mi,e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.elu=function(e){if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,hu,e.dtype);var t=new Jo(e.shape,nu);return this.compileAndRun(t,[e])},t.prototype.eluDer=function(e,t){var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",e.shape,t.shape):new gi("return (b >= 1.0) ? a : a * (b + 1.0);",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.selu=function(e){var t=new Jo(e.shape,"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = 1.0507009873554805;\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n");return this.compileAndRun(t,[e])},t.prototype.int=function(e){var t=new Jo(e.shape,"return float(int(x));");return this.compileAndRun(t,[e],"int32")},t.prototype.clip=function(e,t,n){var r,a=(r=l().getBool("WEBGL_PACK_CLIP")?new xi(e.shape):new bi(e.shape)).getCustomSetupFunc(t,n);return this.compileAndRun(r,[e],null,a)},t.prototype.abs=function(e){if(this.shouldExecuteOnCPU([e]))return this.cpuBackend.abs(e);if(l().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Qo,e.dtype);var t=new Jo(e.shape,Qo);return this.compileAndRun(t,[e])},t.prototype.complexAbs=function(e){var t=this.texData.get(e.dataId),n=new wi(e.shape),r=[this.makeComplexComponentTensorInfo(e,t.complexTensors.real),this.makeComplexComponentTensorInfo(e,t.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(e){var t=new Jo(e.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(t,[e])},t.prototype.softplus=function(e){var t=new Jo(e.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(t,[e])},t.prototype.sin=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  return sin(x);\n");return this.compileAndRun(t,[e])},t.prototype.cos=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  return cos(x);\n");return this.compileAndRun(t,[e])},t.prototype.tan=function(e){var t=new Jo(e.shape,"return tan(x);");return this.compileAndRun(t,[e])},t.prototype.asin=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(t,[e])},t.prototype.acos=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(t,[e])},t.prototype.atan=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(t,[e])},t.prototype.atan2=function(e,t){var n=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",e.shape,t.shape):new gi("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",e.shape,t.shape);return this.compileAndRun(n,[e,t])},t.prototype.sinh=function(e){var t=new Jo(e.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.cosh=function(e){var t=new Jo(e.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(t,[e])},t.prototype.tanh=function(e){var t=new Jo(e.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(t,[e])},t.prototype.asinh=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(t,[e])},t.prototype.acosh=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(t,[e])},t.prototype.atanh=function(e){var t=new Jo(e.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(t,[e])},t.prototype.erf=function(e){var t=new Jo(e.shape,'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = 0.3275911;\n  float a1 = 0.254829592;\n  float a2 = -0.284496736;\n  float a3 = 1.421413741;\n  float a4 = -1.453152027;\n  float a5 = 1.061405429;\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n');return this.compileAndRun(t,[e])},t.prototype.step=function(e,t){var n=new Jo(e.shape,function(e){return void 0===e&&(e=0),Zo+"\n    return x > 0.0 ? 1.0 : float("+e+");\n  "}(t));return this.compileAndRun(n,[e])},t.prototype.conv2dByMatMul=function(e,t,n,r,a,s){var i=e.shape,o=this.texData.get(e.dataId),u=n.inChannels,c=i[0]*i[1]*i[2],h=n.outChannels,p="channelsLast"===n.dataFormat,d=(1===c||1===h)&&u>1e3,f=i[2]%2!=0&&!!o.isPacked;if(d||!l().getBool("WEBGL_LAZILY_UNPACK")||!l().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){var m=p?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],g=this.reshape(e,[1,m,n.inChannels]),v=this.reshape(t,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:g,b:v,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:s}),n.outShape)}var y=p?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),b={dataId:e.dataId,shape:[1,y,n.inChannels],dtype:e.dtype},x=o.shape;o.shape=o.shape.slice(),o.shape[o.shape.length-2]++,N(At(o.shape,b.shape),(function(){return"packed reshape "+o.shape+" to "+b.shape+" isn't free"}));var w=this.reshape(t,[1,n.inChannels,n.outChannels]),k=this.fusedBatchMatMul({a:b,b:w,transposeA:!1,transposeB:!1,bias:r,activation:a,preluActivationWeights:s}),I=this.texData.get(k.dataId);return N(I.isPacked,(function(){return"batchMatMul result is expected to be packed"})),o.shape=x,I.shape=n.outShape,Le.makeTensorFromDataId(k.dataId,n.outShape,k.dtype)},t.prototype.conv2dWithIm2Row=function(e,t,n,r,a,s){var i=n.filterWidth,o=n.filterHeight,u=n.inChannels,l=n.outWidth,c=n.outHeight,h="channelsLast"===n.dataFormat,p=i*o*u,d=c*l,f=[p,d],m=e.squeeze([0]),g=t.reshape([1,p,-1]),v=new vo(f,m.shape,n),y=this.compileAndRun(v,[m]).reshape([1,f[0],f[1]]),b=null!=r,x=null!=s,w=a?mu(a,!0):null,k=new Io(y.shape,[1,d,n.outChannels],!0,!1,b,w,x),I=[y,g];r&&I.push(r),x&&I.push(s);var C=this.compileAndRun(k,I);return h?C.reshape([1,c,l,n.outChannels]):C.reshape([1,n.outChannels,c,l])},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,s=e.activation,i=e.preluActivationWeights;if(1===r.filterHeight&&1===r.filterWidth&&1===r.dilationHeight&&1===r.dilationWidth&&1===r.strideHeight&&1===r.strideWidth&&("SAME"===r.padInfo.type||"VALID"===r.padInfo.type))return this.conv2dByMatMul(t,n,r,a,s,i);if(l().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,n,r,a,s,i);var o=null!=a,u=null!=i,c=s?mu(s,!1):null,h=new Di(r,o,c,u),p=[t,n];return a&&p.push(a),i&&p.push(i),this.compileAndRun(h,p)},t.prototype.conv2d=function(e,t,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(e,t,n);if(l().getBool("WEBGL_CONV_IM2COL")&&1===e.shape[0])return this.conv2dWithIm2Row(e,t,n);var r=new Di(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerInput=function(e,t,n){var r=new Si(n);return this.compileAndRun(r,[e,t])},t.prototype.conv2dDerFilter=function(e,t,n){var r=new Ni(n);return this.compileAndRun(r,[e,t])},t.prototype.fusedDepthwiseConv2D=function(e){var t,n=e.input,r=e.filter,a=e.convInfo,s=e.bias,i=e.activation,o=e.preluActivationWeights,u=l().getBool("WEBGL_PACK_DEPTHWISECONV")&&a.strideWidth<=2&&a.outChannels/a.inChannels==1,c=i?mu(i,u):null,h=[n,r],p=null!=s,d=null!=o;return p&&h.push(s),d&&h.push(o),u?(t=new $i(a,p,c,d),this.compileAndRun(t,h)):(t=new _i(a,p,c,d),this.compileAndRun(t,h))},t.prototype.depthwiseConv2D=function(e,t,n){var r;return l().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new $i(n),this.compileAndRun(r,[e,t])):(r=new _i(n),this.compileAndRun(r,[e,t]))},t.prototype.depthwiseConv2DDerInput=function(e,t,n){var r=new Ai(n);return this.compileAndRun(r,[e,t])},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){var r=new Ri(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3d=function(e,t,n){var r=new Fi(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerInput=function(e,t,n){var r=new Ti(n);return this.compileAndRun(r,[e,t])},t.prototype.conv3dDerFilter=function(e,t,n){var r=new Ei(n);return this.compileAndRun(r,[e,t])},t.prototype.maxPool=function(e,t){var n=new Ro(t,"max",!1);return this.compileAndRun(n,[e])},t.prototype.avgPool=function(e,t){var n=new Ro(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPoolBackprop=function(e,t,n,r){var a=new Ro(r,"max",!0),s=this.compileAndRun(a,[t]),i=new wo(r),o=this.compileAndRun(i,[e,s],t.dtype);return s.dispose(),o},t.prototype.avgPoolBackprop=function(e,t,n){var r=new oi(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.cast=function(e,t){return bs(e,t,this)},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,s=0;s<e.rank;s++)s!==t&&(r[a++]=e.shape[s]);var i=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(s=0;s<u.length;s++)i[t]=s,u[s]=this.slice(e,i,o).reshape(r);return u},t.prototype.avgPool3d=function(e,t){var n=new Ao(t,"avg",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.avgPool3dBackprop=function(e,t,n){var r=new ui(n);return this.compileAndRun(r,[e],t.dtype)},t.prototype.maxPool3d=function(e,t){var n=new Ao(t,"max",!1);return this.compileAndRun(n,[e],"float32")},t.prototype.maxPool3dBackprop=function(e,t,n,r){var a=new Ao(r,"max",!0),s=this.compileAndRun(a,[t]),i=new ko(r),o=this.compileAndRun(i,[e,s],t.dtype);return s.dispose(),o},t.prototype.reshape=function(e,t){var n=this.texData.get(e.dataId);if(n.isPacked&&!At(e.shape,t)&&(null===n.texture||!At(n.shape,t))){var r=this.packedReshape(e,t);return Le.makeTensorFromDataId(r.dataId,r.shape,r.dtype)}return xs(e,t)},t.prototype.resizeBilinear=function(e,t,n,r){var a=l().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Oo(e.shape,t,n,r):new $o(e.shape,t,n,r);return this.compileAndRun(a,[e],"float32")},t.prototype.resizeBilinearBackprop=function(e,t,n){var r=new _o(e,t,n);return this.compileAndRun(r,[e])},t.prototype.resizeNearestNeighbor=function(e,t,n,r){var a=new Lo(e.shape,t,n,r);return this.compileAndRun(a,[e])},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){var r=new Mo(e,t,n);return this.compileAndRun(r,[e])},t.prototype.multinomial=function(e,t,n,r){var a=t?e:ts(e),s=a.shape[0],i=a.shape[1],o=new Co(s,i,n),u=o.getCustomSetupFunc(r);return this.compileAndRun(o,[a],"int32",u)},t.prototype.oneHot=function(e,t,n,r){var a=new No(e.size,t,n,r);return this.compileAndRun(a,[e])},t.prototype.diag=function(e){var t=new Wi(e.size);return this.compileAndRun(t,[e])},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return cn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"),Rs(e.dataSync(),t.dataSync(),n,r,a)},t.prototype.cropAndResize=function(e,t,n,r,a,s){var i=new Oi(e.shape,t.shape,r,a,s);return this.compileAndRun(i,[e,t,n],"float32")},t.prototype.depthToSpace=function(e,t,n){N(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));var r=e.shape[0],a="NHWC"===n?e.shape[1]:e.shape[2],s="NHWC"===n?e.shape[2]:e.shape[3],i="NHWC"===n?e.shape[3]:e.shape[1],o=a*t,u=s*t,l=i/(t*t),c=new zi("NHWC"===n?[r,o,u,l]:[r,l,o,u],t,n);return this.compileAndRun(c,[e])},t.prototype.split=function(e,t,n){return Os(e,t,n)},t.prototype.scatterND=function(e,t,n){var r=Ba(0,e,n),a=r.sliceRank,s=r.numUpdates,i=r.sliceSize,o=r.strides,u=r.outputSize,l=[u/i,i],c=e.reshape([s,a]),h=t.reshape([s,i]);if(0===u)return xs(Rn([]),n);var p=Dn(0),d=new zo(s,a,c.rank,h.rank,o,l);return this.compileAndRun(d,[h,c,p]).reshape(n)},t.prototype.sparseToDense=function(e,t,n,r){var a=Ba(0,e,n),s=a.sliceRank,i=a.numUpdates,o=a.strides,u=a.outputSize,l=new zo(i,s,e.rank,t.rank,o,[u,1],!1);return this.compileAndRun(l,[t,e,r]).reshape(n)},t.prototype.fft=function(e){return this.fftImpl(e,!1)},t.prototype.ifft=function(e){return this.fftImpl(e,!0)},t.prototype.fftImpl=function(e,t){var n=this.texData.get(e.dataId),r=new qi("return real * expR - imag * expI;",e.shape,t),a=new qi("return real * expI + imag * expR;",e.shape,t),s=[this.makeComplexComponentTensorInfo(e,n.complexTensors.real),this.makeComplexComponentTensorInfo(e,n.complexTensors.imag)],i=this.compileAndRun(r,s),o=this.compileAndRun(a,s),u=this.complex(i,o).as2D(e.shape[0],e.shape[1]);return i.dispose(),o.dispose(),u},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=_a(e,t),s=a[0],i=a[1],o=a[2],u=a[3],l=t.reshape([i,r]),c=e.reshape([e.size/o,o]),h=new Xi(r,u,[i,o]);return this.compileAndRun(h,[c,l]).reshape(s)},t.prototype.fill=function(e,t,n){if("string"===(n=n||Y(t))){var r=z(n,R(e));return r.fill(t),Le.makeTensor(r,e,n,this)}var a=new ji(e,t),s=a.getCustomSetupFunc(t);return this.compileAndRun(a,[],n,s)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){return this.fill(e.shape,"string"===e.dtype?"":0,e.dtype)},t.prototype.linspace=function(e,t,n){return ws(e,t,n)},t.prototype.makeTensorInfo=function(e,t){var n=this.write(null,e,t);return this.texData.get(n).usage=null,{dataId:n,shape:e,dtype:t}},t.prototype.makeOutput=function(e,t){var n=this.makeTensorInfo(e,t).dataId;return Le.makeTensorFromDataId(n,e,t,this)},t.prototype.unpackTensor=function(e){var t=new du(e.shape);return this.runWebGLProgram(t,[e],e.dtype)},t.prototype.packTensor=function(e){var t=new So(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)},t.prototype.packedReshape=function(e,t){var n=[Nt(e.shape)].concat(St(e.shape)),r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Nt(t)].concat(St(t)),s=new Fo(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}},t.prototype.decode=function(e){var t,n=this.texData.get(e),r=n.isPacked,a=n.shape,s=n.dtype,i=Et(a);return t=r?new Pi(i):new Bi(i),{dtype:s,shape:a,dataId:this.runWebGLProgram(t,[{shape:i,dtype:s,dataId:e}],s,null,!0).dataId}},t.prototype.runWebGLProgram=function(e,t,n,r,a){var s=this;void 0===a&&(a=!1);var i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===ze.DENSE){var u=Ke(e.outputShape);o.texShape=u.map((function(e){return 2*e}))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===R(i.shape))return o.values=P(i.dtype,0),i;var c=[],h=t.map((function(t){if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");var n=s.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&R(t.shape)<=l().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?s.unpackTensor(t):s.packTensor(t),c.push(t),n=s.texData.get(t.dataId);else if(n.isPacked&&!At(n.shape,t.shape)){var r=t,a=t.shape;t.shape=n.shape,t=s.packedReshape(t,a),c.push(t),n=s.texData.get(t.dataId),r.shape=a}return s.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);var p,d={shape:i.shape,texData:o,isUniform:!1},f=function(e,t,n){var r="";t.concat(n).forEach((function(e){var t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=e.shape+"_"+n+"_"+t}));var a=e.userCode;return e.constructor.name+"_"+r+"_"+a}(e,h,d),m=this.getAndSaveBinary(f,(function(){return function(e,t,n,r){var a=t.userCode,s=n.map((function(e,n){var r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((function(e){return e.shapeInfo})),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ks(s,o,a,t.packedInputs),c=e.createProgram(u),h=null,p=e.getUniformLocation(c,"NAN",!1);1===l().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));for(var d={},f=0;f<t.variableNames.length;f++){var m=t.variableNames[f];d[m]=e.getUniformLocation(c,m,!1),d["offset"+m]=e.getUniformLocation(c,"offset"+m,!1)}return{program:t,source:u,webGLProgram:c,uniformLocations:d,inShapeInfos:i,outShapeInfo:o,infLoc:h,nanLoc:p}}(s.gpgpu,e,h,d)})),g=null!=this.activeTimers;if(g&&(p=this.startTimer()),function(e,t,n,r,a){go(t.inShapeInfos,n),go([t.outShapeInfo],[r]);var s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===l().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((function(n,r){var a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations["offset"+a];if(null!=s)if(n.isUniform)if(R(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{var o=n.uniformValues;o instanceof Float32Array||(o=new Float32Array(o)),e.gl.uniform1fv(s,o)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,m,h,d,r),c.forEach((function(e){return s.disposeData(e.dataId)})),g&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)})),!l().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){var v=this.unpackTensor(i);return this.disposeData(i.dataId),v}return i},t.prototype.compileAndRun=function(e,t,n,r,a){void 0===a&&(a=!1),n=n||t[0].dtype;var s=this.runWebGLProgram(e,t,n,r,a);return Le.makeTensorFromDataId(s.dataId,s.shape,s.dtype)},t.prototype.getAndSaveBinary=function(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){var e=this;this.disposed||(l().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((function(t){e.gpgpu.deleteProgram(e.binaryCache[t].webGLProgram),delete e.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var e=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yt((function(){if(!l().get("WEBGL_RENDER_FLOAT32_ENABLED")){var t=l().getBool("DEBUG");l().set("DEBUG",!1);var n=e.abs(Dn(1e-8)).dataSync()[0];if(l().set("DEBUG",t),n>0)return 32}return 16}))),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(e){var t,n=this.texData.get(e),r=n.shape,a=n.dtype,s=n.values,i=n.texture,o=n.usage,u=n.isPacked;if(null==i){var l,c=null!=this.activeTimers;c&&(l=ae());var h=n.texShape;if(null==h&&(h=Tt(r,u),n.texShape=h),null!=s){var p=Et(r),d=void 0,f=h[1],m=h[0],g=s instanceof Uint8Array;u?(f=(t=Xe(h[0],h[1]))[0],m=t[1],d=new Hi(p,[m,f],g)):d=new Gi(p,[m,f],g);var v=this.makeTensorInfo([m,f],a);this.texData.get(v.dataId).usage=g?We.PIXELS:We.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(v.dataId),f,m,s);var y=this.runWebGLProgram(d,[v],a,null,!0),b=this.texData.get(y.dataId);n.texture=b.texture,n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,this.disposeData(v.dataId),this.texData.delete(y.dataId),n.values=null,c&&(this.uploadWaitMs+=ae()-l)}else{var x=this.acquireTexture(h,o,a,u);n.texture=x}}},t.prototype.convertAndCacheOnCPU=function(e,t){var n=this.texData.get(e),r=n.dtype;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){for(var n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length),r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values},t.prototype.acquireTexture=function(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: "+a+" MB, most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,r)},t.prototype.computeBytes=function(e,t){return e[0]*e[1]*H(t)},t}(ss);function vu(e,t){return e(t={exports:{}},t.exports),t.exports}Be()&&Le.registerBackend("webgl",(function(){return new gu}),2),"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:"undefined"!=typeof self&&self;var yu=vu((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.alea=s}(0,e)})),bu=vu((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.xor128=s}(0,e)})),xu=vu((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.xorwow=s}(0,e)})),wu=vu((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.xorshift7=s}(0,e)})),ku=vu((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.xor4096=s}(0,e)})),Iu=vu((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&a(s,n),i.state=function(){return a(n,{})}),i}t&&t.exports?t.exports=s:this.tychei=s}(0,e)})),Cu=vu((function(e){!function(t,r){var a,s=this,i=256,o="random",u=r.pow(i,6),l=r.pow(2,52),c=2*l,h=255;function p(e,n,h){var p=[],v=m(function e(t,n){var r,a=[],s=typeof t;if(n&&"object"==s)for(r in t)try{a.push(e(t[r],n-1))}catch(e){}return a.length?a:"string"==s?t:t+"\0"}((n=1==n?{entropy:!0}:n||{}).entropy?[e,g(t)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(i):(e=new Uint8Array(i),(s.crypto||s.msCrypto).getRandomValues(e)),g(e)}catch(e){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,g(t)]}}():e,3),p),y=new d(p),b=function(){for(var e=y.g(6),t=u,n=0;e<l;)e=(e+n)*i,t*=i,n=y.g(1);for(;e>=c;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|y.g(4)},b.quick=function(){return y.g(4)/4294967296},b.double=b,m(g(y.S),t),(n.pass||h||function(e,t,n,a){return a&&(a.S&&f(a,y),e.state=function(){return f(y,{})}),n?(r[o]=e,t):e})(b,v,"global"in n?n.global:this==r,n.state)}function d(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,o=r.S=[];for(n||(e=[n++]);a<i;)o[a]=a++;for(a=0;a<i;a++)o[a]=o[s=h&s+e[a%n]+(t=o[a])],o[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,o=r.S;e--;)t=o[a=h&a+1],n=n*i+o[h&(o[a]=o[s=h&s+t])+(o[s]=t)];return r.i=a,r.j=s,n})(i)}function f(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(r["seed"+o]=p,m(r.random(),t),e.exports){e.exports=p;try{a=n(902)}catch(e){}}}([],Math)}));Cu.alea=yu,Cu.xor128=bu,Cu.xorwow=xu,Cu.xorshift7=wu,Cu.xor4096=ku,Cu.tychei=Iu;var Nu=Cu.alea,Su=Nn({addN_:function(e){N(Array.isArray(e),(function(){return"The argument passed to tf.addN() must be a list of tensors"})),N(e.length>=1,(function(){return"Must pass at least one tensor to tf.addN(), but got "+e.length}));var t=e.map((function(e,t){return dn(e,"tensors"+t,"addN")})),n=t[0];t.forEach((function(e){if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((function(e){if(!A(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));var r=t;return Le.runKernelFunc((function(e,n){return e.addN(t)}),r,null,"AddN")}});function Eu(){Ht("tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon")}function Tu(e){return 0===e.rank||1===e.rank?e.as4D(1,1,1,e.size):2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}function Ru(e,t,n,r,a,s){null==s&&(s=.001);var i,o,u=dn(e,"x","batchNorm"),l=dn(t,"mean","batchNorm"),c=dn(n,"variance","batchNorm");null!=a&&(i=dn(a,"scale","batchNorm")),null!=r&&(o=dn(r,"offset","batchNorm")),N(l.rank===c.rank,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),N(null==o||l.rank===o.rank,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),N(null==i||l.rank===i.rank,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."}));var h={x:u,scale:i,offset:o,mean:l,variance:c},p={varianceEpsilon:s};return Le.runKernelFunc((function(e,t){var n=Tu(u),r=e.batchNormalization(n,Au(l),Au(c),s,Au(i),Au(o));return t([u,l,c,i]),r}),h,null,"FusedBatchNorm",p).reshape(u.shape)}function Au(e){return null==e?null:0===e.rank?e.as1D():1===e.rank?e:2===e.rank?e.as4D(1,1,e.shape[0],e.shape[1]):3===e.rank?e.as4D(1,e.shape[0],e.shape[1],e.shape[2]):e}var Du=Nn({batchNormalization_:function(e,t,n,r,a,s){return void 0===r&&(r=.001),Eu(),Ru(e,t,n,s,a,r)}}),Fu=Nn({batchNorm_:Ru});function _u(e,t,n,r,a,s){var i,o,u=dn(e,"x","batchNorm"),l=dn(t,"mean","batchNorm"),c=dn(n,"variance","batchNorm");return null!=a&&(i=dn(a,"scale","batchNorm")),null!=r&&(o=dn(r,"offset","batchNorm")),N(2===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),N(2===l.rank||1===l.rank,(function(){return"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank "+l.rank+"."})),N(2===c.rank||1===c.rank,(function(){return"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank "+c.rank+"."})),null!=i&&N(2===i.rank||1===i.rank,(function(){return"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank "+i.rank+"."})),null!=o&&N(2===o.rank||1===o.rank,(function(){return"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank "+o.rank+"."})),Fu(u,l,c,o,i,s)}var $u=Nn({batchNormalization2d_:function(e,t,n,r,a,s){return void 0===r&&(r=.001),Eu(),_u(e,t,n,s,a,r)}}),Ou=Nn({batchNorm2d_:_u});function Mu(e,t,n,r,a,s){var i,o,u=dn(e,"x","batchNorm"),l=dn(t,"mean","batchNorm"),c=dn(n,"variance","batchNorm");return null!=a&&(i=dn(a,"scale","batchNorm")),null!=r&&(o=dn(r,"offset","batchNorm")),N(3===u.rank,(function(){return"Error in batchNorm3D: x must be rank 3 but got rank "+u.rank+"."})),N(3===l.rank||1===l.rank,(function(){return"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank "+l.rank+"."})),N(3===c.rank||1===c.rank,(function(){return"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank "+c.rank+"."})),null!=i&&N(3===i.rank||1===i.rank,(function(){return"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank "+i.rank+"."})),null!=o&&N(3===o.rank||1===o.rank,(function(){return"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank "+o.rank+"."})),Fu(u,l,c,o,i,s)}var Lu=Nn({batchNormalization3d_:function(e,t,n,r,a,s){return void 0===r&&(r=.001),Eu(),Mu(e,t,n,s,a,r)}}),Bu=Nn({batchNorm3d_:Mu});function Pu(e,t,n,r,a,s){var i,o,u=dn(e,"x","batchNorm"),l=dn(t,"mean","batchNorm"),c=dn(n,"variance","batchNorm");return null!=a&&(i=dn(a,"scale","batchNorm")),null!=r&&(o=dn(r,"offset","batchNorm")),N(4===u.rank,(function(){return"Error in batchNorm4D: x must be rank 4 but got rank "+u.rank+"."})),N(4===l.rank||1===l.rank,(function(){return"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank "+l.rank+"."})),N(4===c.rank||1===c.rank,(function(){return"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank "+c.rank+"."})),null!=i&&N(4===i.rank||1===i.rank,(function(){return"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank "+i.rank+"."})),null!=o&&N(4===o.rank||1===o.rank,(function(){return"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank "+o.rank+"."})),Fu(u,l,c,o,i,s)}var zu=Nn({batchNormalization4d_:function(e,t,n,r,a,s){return void 0===r&&(r=.001),Eu(),Pu(e,t,n,s,a,r)}}),Wu=Nn({batchNorm4d_:Pu}),Vu=Nn({broadcastTo_:function(e,t){var n=dn(e,"broadcastTo","x"),r=n.shape;if(t.some((function(e){return!(e>0)||e%1!=0})))throw new Error("broadcastTo(): Invalid broadcast shape ["+t+"].");if(t.length<n.rank)throw new Error("broadcastTo(): shape.length="+t.length+" < input.rank="+n.rank+".");if(t.length>n.rank){for(var a=n.shape.slice();a.length<t.length;)a.unshift(1);n=n.reshape(a)}for(var s=n.shape,i=Array.from(t),o=t.length-1;o>=0;o--)if(s[o]===t[o])i[o]=1;else if(1!==n.shape[o])throw new Error("broadcastTo(): ["+r+"] cannot be broadcast to ["+t+"].");var u=i.map((function(e,t){return e>1?t:-1})).filter((function(e){return e>=0}));if(0===u.length)return n.clone();var l={x:n},c={shape:t,inputShape:s};return Le.runKernelFunc((function(e){return e.tile(n,i)}),l,(function(e){return{x:function(){return e.sum(u,!0)}}}),Cr,c)}}),Uu=Nn({clone_:function(e){var t=dn(e,"x","clone",null);return Le.runKernelFunc((function(){return Le.makeTensorFromDataId(t.dataId,t.shape,t.dtype)}),{x:t},null,Sr)}}),Gu=Nn({logicalAnd_:function(e,t){var n=dn(e,"a","logicalAnd","bool"),r=dn(t,"b","logicalAnd","bool");return $r(n.shape,r.shape),Le.runKernelFunc((function(e){return e.logicalAnd(n,r)}),{a:n,b:r},null,"LogicalAnd")}}),Hu=Nn({logicalNot_:function(e){var t=dn(e,"x","logicalNot","bool");return Le.runKernelFunc((function(e){return e.logicalNot(t)}),{$x:t})}}),qu=Nn({logicalOr_:function(e,t){var n=dn(e,"a","logicalOr","bool"),r=dn(t,"b","logicalOr","bool");return $r(n.shape,r.shape),Le.runKernelFunc((function(e){return e.logicalOr(n,r)}),{$a:n,$b:r})}}),ju=Nn({logicalXor_:function(e,t){var n=dn(e,"a","logicalXor","bool"),r=dn(t,"b","logicalXor","bool");return $r(n.shape,r.shape),qu(e,t).logicalAnd(Gu(e,t).logicalNot())}}),Ku=Nn({where_:function(e,t,n){var r=dn(t,"a","where"),a=dn(n,"b","where"),s=dn(e,"condition","where","bool");return S(r.shape,a.shape,"Error in where: "),1===s.rank?N(s.shape[0]===r.shape[0],(function(){return"The first dimension of `a` must match the size of `condition`."})):S(s.shape,a.shape,"Error in where: "),Le.runKernelFunc((function(e,t){var n=e.select(s,r,a);return t([s]),n}),{$condition:s,$a:r,$b:a},(function(e,t){var n=t[0];return{$condition:function(){return Hn(n).toFloat()},$a:function(){return e.mul(n.cast(e.dtype))},$b:function(){return e.mul(n.logicalNot().cast(e.dtype))}}}))}}),Xu=function(e){return s(this,void 0,void 0,(function(){var t,n,r;return i(this,(function(a){switch(a.label){case 0:return[4,(t=dn(e,"condition","whereAsync","bool")).data()];case 1:return n=a.sent(),r=Bs(t.shape,n),e!==t&&t.dispose(),[2,r]}}))}))},Yu=Nn({divNoNan_:function(e,t){var n,r=dn(e,"a","div"),a=dn(t,"b","div");r=(n=Ae(r,a))[0],a=n[1];var s=Fa(r,a),i=Hn(s),o=a.equal(i);return Ku(o,i,s)}}),Ju=Nn({tile_:function(e,t){var n=dn(e,"x","tile",null);N(n.rank===t.length,(function(){return"Error in transpose: rank of input "+n.rank+" must match length of reps "+t+"."}));var r=[n],a={x:n},s={reps:t};return Le.runKernelFunc((function(e,r){var a=e.tile(n,t);return r([n]),a}),a,null,Er,s,r)}}),Zu=Nn({eye_:function(e,t,n,r){void 0===r&&(r="float32"),null==t&&(t=e);for(var a=Zn([e,t],r),s=e<=t?e:t,i=0;i<s;++i)a.set(1,i,i);var o=a.toTensor().as2D(e,t);if(null==n)return o;if(1===n.length)return Ju(ar(o,0),[n[0],1,1]);if(2===n.length)return Ju(ar(ar(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ju(ar(ar(ar(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D batchShapes, but received "+n.length+"D.")}}),Qu=Nn({multinomial_:function(e,t,n,r){void 0===r&&(r=!1);var a=dn(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(i>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+i);n=n||Math.random();var o=1===i?a.as2D(1,-1):a,u=Le.runKernelFunc((function(e){return e.multinomial(o,r,t,n)}),{logits2D:o});return 1===i?u.as1D():u}}),el=Nn({oneHot_:function(e,t,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);var a=dn(e,"indices","oneHot","int32"),s=a.shape.concat([t]),i={indices:a=a.flatten()},o={depth:t,onValue:n,offValue:r};return Le.runKernelFunc((function(e,s){return s([a]),e.oneHot(a,t,n,r)}),i,null,Nr,o).reshape(s)}}),tl=Nn({pad_:function(e,t,n){void 0===n&&(n=0);var r=dn(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");var a={paddings:t,constantValue:n},s={x:r};return Le.runKernelFunc((function(e,a){return a([r]),e.pad(r,t,n)}),s,null,Tr,a)}}),nl=Nn({pad1d_:function(e,t,n){return void 0===n&&(n=0),N(2===t.length,(function(){return"Invalid number of paddings. Must be length of 2."})),tl(e,[t],n)}}),rl=Nn({pad2d_:function(e,t,n){return void 0===n&&(n=0),N(2===t.length&&2===t[0].length&&2===t[1].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),tl(e,t,n)}}),al=Nn({pad3d_:function(e,t,n){return void 0===n&&(n=0),N(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),tl(e,t,n)}}),sl=Nn({pad4d_:function(e,t,n){return void 0===n&&(n=0),N(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(function(){return"Invalid number of paddings. Must be length of 2 each."})),tl(e,t,n)}}),il=Nn({rand_:function(e,t,n){var r=R(e),a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error("Unknown data type "+n);a=new Uint8Array(r)}for(var s=0;s<r;s++)a[s]=t();return Le.makeTensor(a,e,n)}});function ol(){return 32===Le.backend.floatPrecision()?.001:.1}function ul(e,t,n){var r=!0;if((G(e)||G(t))&&(r=!1),G(e)&&G(t)&&(r=!0),r){var a=e.constructor.name,s=t.constructor.name;if(a!==s)throw new Error("Arrays are of different type. Actual: "+a+". Expected: "+s)}if(Array.isArray(e)&&Array.isArray(t)){var i=hn(e),o=hn(t);if(!A(i,o))throw new Error("Arrays have different shapes. Actual: ["+i+"]. Expected: ["+o+"]")}var u=G(e)?e:T(e),l=G(t)?t:T(t);if(u.length!==l.length)throw new Error("Arrays have different lengths actual: "+u.length+" vs expected: "+l.length+".\nActual:   "+u+".\nExpected: "+l+".");for(var c=0;c<l.length;++c){var h=u[c],p=l[c];if(!n(h,p))throw new Error("Arrays differ: actual["+c+"] = "+h+", expected["+c+"] = "+p+".\nActual:   "+u+".\nExpected: "+l+".")}}function ll(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}var cl=Object.freeze({TEST_EPSILON_FLOAT16:.1,expectArraysClose:function(e,t,n){return null==n&&(n=ol()),ul(e,t,(function(e,t){return ll(e,t,n)}))},testEpsilon:ol,expectPromiseToFail:function(e,t){e().then((function(){return t.fail()}),(function(){return t()}))},expectArraysEqual:function(e,t){var n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return j(e)||j(e[0])||j(t)||j(t[0])?ul(e,n,(function(e,t){return e==t})):ul(e,t,(function(e,t){return ll(e,t,0)}))},expectNumbersClose:function(e,t,n){if(null==n&&(n=ol()),!ll(e,t,n))throw new Error("Numbers differ: actual === "+e+", expected === "+t)},expectValuesInRange:function(e,t,n){for(var r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error("Value out of range:"+e[r]+" low: "+t+", high: "+n)},expectArrayBuffersEqual:function(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}}),hl=function(){function e(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var s=a||Math.random();this.random=Nu(s.toString())}return e.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var e=this.nextVal;return this.nextVal=NaN,e}for(var t,n,r=!1;!r;){var a=void 0,s=void 0,i=void 0;do{i=(a=2*this.random()-1)*a+(s=2*this.random()-1)*s}while(i>=1||0===i);var o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*a*o,n=this.mean+this.stdDev*s*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(t)},e.prototype.convertValue=function(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)},e.prototype.isValidTruncated=function(e){return e<=this.upper&&e>=this.lower},e}(),pl=function(){function e(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;var a=r||Math.random();this.randu=Nu(a.toString()),this.randn=new hl(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}return e.prototype.nextValue=function(){for(var e,t,n,r,a,s;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,t=1-.331*(e=r*r)*e,n=.5*e+this.d*(1-s+Math.log(s)),(a=this.randu())<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)},e.prototype.convertValue=function(e){return"float32"===this.dtype?e:Math.round(e)},e}(),dl=function(){function e(e,t,n,r){var a=this;if(void 0===e&&(e=0),void 0===t&&(t=1),this.canReturnFloat=function(){return null==a.dtype||"float32"===a.dtype},this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between "+e+" - "+t+" <= 1 and dtype is not float");this.random=Nu(r)}return e.prototype.convertValue=function(e){return this.canReturnFloat()?e:Math.round(e)},e.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},e}(),fl=Nn({randomGamma_:function(e,t,n,r,a){if(void 0===n&&(n=1),void 0===r&&(r="float32"),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error("Unsupported data type "+r);for(var s=new pl(t,n,r,a),i=Zn(e,r),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),ml=Nn({randomNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type "+r);for(var s=new hl(t,n,r,!1,a),i=Zn(e,r),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),gl=Nn({randomUniform_:function(e,t,n,r,a){void 0===t&&(t=0),void 0===n&&(n=1),void 0===r&&(r="float32");for(var s=Zn(e,r),i=new dl(t,n,null,a),o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}}),vl=Nn({square_:function(e){var t=dn(e,"x","square"),n=[t];return Le.runKernelFunc((function(e,n){return n([t]),e.square(t)}),{x:t},null,"Square",{},n,[])}}),yl=Nn({squaredDifference_:function(e,t){var n,r=dn(e,"a","squaredDifference"),a=dn(t,"b","squaredDifference");n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape);var s={a:r,b:a},i=[r,a];return Le.runKernelFunc((function(e,t){var n=e.squaredDifference(r,a);return t([r,a]),n}),s,(function(e,t){var n=t[0],r=t[1],a=Dn(2);return{a:function(){return e.mul(n.sub(r).mul(a))},b:function(){return e.mul(r.sub(n).mul(a))}}}),xr,{},i,[])}}),bl=Nn({truncatedNormal_:function(e,t,n,r,a){if(void 0===t&&(t=0),void 0===n&&(n=1),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");for(var s=new hl(t,n,r,!0,a),i=Zn(e,r),o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}}),xl=Nn({equal_:function(e,t){var n,r=dn(e,"a","equal"),a=dn(t,"b","equal");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e){return e.equal(r,a)}),{$a:r,$b:a})}}),wl=Nn({equalStrict_:function(e,t){var n=dn(e,"a","equalStrict"),r=dn(t,"b","equalStrict");return S(n.shape,r.shape,"Error in equalStrict: "),n.equal(r)}}),kl=Nn({greater_:function(e,t){var n,r=dn(e,"a","greater"),a=dn(t,"b","greater");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e){return e.greater(r,a)}),{a:r,b:a},null,"Greater")}}),Il=Nn({greaterEqual_:function(e,t){var n,r=dn(e,"a","greaterEqual"),a=dn(t,"b","greaterEqual");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e,t){var n=e.greaterEqual(r,a);return t([r,a]),n}),{a:r,b:a},(function(e,t){var n=t[0],r=t[1];return{a:function(){return Hn(n)},b:function(){return Hn(r)}}}),"GreaterEqual")}}),Cl=Nn({greaterEqualStrict_:function(e,t){var n=dn(e,"a","greaterEqualStrict"),r=dn(t,"b","greaterEqualStrict");return S(n.shape,r.shape,"Error in greaterEqualStrict: "),n.greaterEqual(r)}}),Nl=Nn({greaterStrict_:function(e,t){var n=dn(e,"a","greaterStrict"),r=dn(t,"b","greaterStrict");return S(n.shape,r.shape,"Error in greaterStrict: "),n.greater(r)}}),Sl=Nn({less_:function(e,t){var n,r=dn(e,"a","less"),a=dn(t,"b","less");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e){return e.less(r,a)}),{a:r,b:a},null,"Less")}}),El=Nn({lessEqual_:function(e,t){var n,r=dn(e,"a","lessEqual"),a=dn(t,"b","lessEqual");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e,t){var n=e.lessEqual(r,a);return t([r,a]),n}),{a:r,b:a},null,"LessEqual")}}),Tl=Nn({lessEqualStrict_:function(e,t){var n=dn(e,"a","lessEqualStrict"),r=dn(t,"b","lessEqualStrict");return S(n.shape,r.shape,"Error in lessEqualStrict: "),n.lessEqual(r)}}),Rl=Nn({lessStrict_:function(e,t){var n=dn(e,"a","lessStrict"),r=dn(t,"b","lessStrict");return S(n.shape,r.shape,"Error in lessStrict: "),n.less(r)}}),Al=Nn({notEqual_:function(e,t){var n,r=dn(e,"a","notEqual"),a=dn(t,"b","notEqual");return n=Ae(r,a),r=n[0],a=n[1],$r(r.shape,a.shape),Le.runKernelFunc((function(e){return e.notEqual(r,a)}),{a:r,b:a},null,"NotEqual")}}),Dl=Nn({notEqualStrict_:function(e,t){var n=dn(e,"a","notEqualStrict"),r=dn(t,"b","notEqualStrict");return S(n.shape,r.shape,"Error in notEqualStrict: "),n.notEqual(r)}});function Fl(e,t){for(var n=[],r=e;r<t;++r)n.push(r);return n}function _l(e){for(var t=[],n=0;n<e.length;++n)for(var r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var $l=Nn({gather_:function(e,t,n){void 0===n&&(n=0);var r=dn(e,"x","gather"),a=dn(t,"indices","gather","int32");n=L(n,r.shape)[0];var s=function(e,t,n){for(var r=e.shape[n],a=[],s=1,i=1,o=0;o<n;o++)a.push(e.shape[o]),s*=e.shape[o];for(o=0;o<t.rank;o++)a.push(t.shape[o]);for(o=n+1;o<e.rank;o++)a.push(e.shape[o]),i*=e.shape[o];return{batchSize:s,sliceSize:i,dimSize:r,outputShape:a}}(r,a,n);return Le.runKernelFunc((function(e,t){var s=e.gather(r,a.flatten(),n);return t([a]),s}),{x:r,indices:a},(function(e,t){var a=t[0];return{x:function(){var t=r.shape,s=a.size,i=t.slice(0,n),o=i.length,u=t.slice(n,t.length).slice(1),l=u.length,c=Fl(0,o),h=Fl(o+1,o+1+l),p=_l([i,[s],u]),d=e.reshape(p),f=a.reshape([s]),m=_l([[o],c,h]),g=d.transpose(m),v=Ol(g,f,r.shape[n]),y=wn(m);return v.transpose(y)},indices:function(){return a}}}),"Gather",{axis:n}).reshape(s.outputShape)}}),Ol=Nn({unsortedSegmentSum_:function(e,t,n){var r=dn(e,"x","unsortedSegmentSum"),a=dn(t,"segmentIds","unsortedSegmentSum","int32");return N(D(n),(function(){return"numSegments must be of dtype int"})),Le.runKernelFunc((function(e,t){var s=e.unsortedSegmentSum(r,a,n);return t([a]),s}),{$x:r},(function(e,t){var n=t[0];return{$x:function(){return function(e,t){for(var n=ba(t,Hn(t)),r=$l(e,n),a=Il(t,Dn(0,"int32")),s=r.rank-a.rank,i=0;i<s;++i)a=ar(a,i+1);a=Gu(a,Pn(r.shape,"bool"));var o=Hn(r);return Ku(a,r,o)}(e,n)}}}))}}),Ml=function(e,t,n){return s(this,void 0,void 0,(function(){var r,a,s,o,u,l,c,h,p,d,f,m,g;return i(this,(function(i){switch(i.label){case 0:for(r=dn(e,"tensor","boolMask"),a=dn(t,"mask","boolMask","bool"),s=null==n?0:n,o=a.rank,u=r.shape,N(o>0,(function(){return"mask cannot be scalar"})),S(u.slice(s,s+o),a.shape,"mask's shape must match the first K dimensions of tensor's shape,"),l=1,c=s;c<s+o;c++)l*=u[c];return h=u.slice(0,s).concat([l],u.slice(s+o)),p=r.reshape(h),d=a.reshape([-1]),[4,Xu(d)];case 1:return f=i.sent(),m=f.squeeze([1]),g=$l(p,m,s),e!==r&&r.dispose(),t!==a&&a.dispose(),m.dispose(),p.dispose(),d.dispose(),f.dispose(),[2,g]}}))}))};function Ll(e,t,n,r,a,s,i){void 0===s&&(s="NHWC"),N(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var o=e,u=t,l=!1;3===t.rank&&(l=!0,u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]),o=[1,e[0],e[1],e[2]]),N(4===o.length,(function(){return"Error in conv2dDerInput: inShape must be length 4, but got length "+o.length+"."})),N(4===u.rank,(function(){return"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank})),N(4===n.rank,(function(){return"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank}));var c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];N(c===n.shape[2],(function(){return"Error in conv2dDerInput: depth of input ("+c+") must match input depth for filter "+n.shape[2]+"."})),N(h===n.shape[3],(function(){return"Error in conv2dDerInput: depth of output ("+h+") must match output depth for filter "+n.shape[3]+"."})),null!=i&&N(D(a),(function(){return"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var p=ys(s),d=ls(o,n.shape,r,1,a,i,!1,p),f=Le.runKernelFunc((function(e,t){var r=e.conv2dDerInput(u,n,d);return t([n,u]),r}),{dy4D:u,filter:n},(function(e,t){var n=t[0],o=t[1];return{dy4D:function(){return Wl(e,n,r,a,s,1,i)},filter:function(){return Ul(e,o,n.shape,r,a,s,i)}}}));return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function Bl(e){var t=function(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}(e),n=t[0],r=t[1],a=t[2];return 1===n&&1===r&&1===a}function Pl(e,t,n,r,a){N(e.length===t.rank,(function(){return"Length of inShape ("+e.length+") and rank of dy ("+t.rank+") must match"}));var s=e,i=t,o=!1;4===t.rank&&(o=!0,i=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]),s=[1,e[0],e[1],e[2],e[3]]);var u=s[4],l=i.shape[4];N(5===s.length,(function(){return"Error in conv3dDerInput: inShape must be length 5, but got length "+s.length+"."})),N(5===i.rank,(function(){return"Error in conv3dDerInput: dy must be rank 5, but got rank "+i.rank})),N(5===n.rank,(function(){return"Error in conv3dDerInput: filter must be rank 5, but got rank "+n.rank})),N(u===n.shape[3],(function(){return"Error in conv3dDerInput: depth of input ("+u+") must match input depth for filter "+n.shape[3]+"."})),N(l===n.shape[4],(function(){return"Error in conv3dDerInput: depth of output ("+l+") must match output depth for filter "+n.shape[4]+"."}));var c=cs(s,n.shape,r,1,a),h=Le.runKernelFunc((function(e){return e.conv3dDerInput(i,n,c)}),{dy5D:i});return o?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var zl=Nn({conv1d_:function(e,t,n,r,a,s,i){void 0===a&&(a="NWC"),void 0===s&&(s=1);var o=dn(e,"x","conv1d"),u=dn(t,"filter","conv1d"),l=o,c=!1;2===o.rank&&(c=!0,l=o.as3D(1,o.shape[0],o.shape[1])),N(3===l.rank,(function(){return"Error in conv1d: input must be rank 3, but got rank "+l.rank+"."})),N(3===u.rank,(function(){return"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."})),null!=i&&N(D(r),(function(){return"Error in conv1d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+"."})),N(l.shape[2]===u.shape[1],(function(){return"Error in conv1d: depth of input ("+l.shape[2]+") must match input depth for filter "+u.shape[1]+"."})),N(vs(n,s),(function(){return"Error in conv1D: Either stride or dilation must be 1. Got stride "+n+" and dilation '"+s+"'"})),N("NWC"===a,(function(){return"Error in conv1d: got dataFormat of "+a+" but only NWC is currently supported."}));var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),p=l.as4D(l.shape[0],1,l.shape[1],l.shape[2]),d=Wl(p,h,[1,n],r,"NHWC",[1,s],i);return c?d.as2D(d.shape[2],d.shape[3]):d.as3D(d.shape[0],d.shape[2],d.shape[3])}}),Wl=Nn({conv2d_:function(e,t,n,r,a,s,i){void 0===a&&(a="NHWC"),void 0===s&&(s=[1,1]);var o=dn(e,"x","conv2d"),u=dn(t,"filter","conv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),N(4===l.rank,(function(){return"Error in conv2d: input must be rank 4, but got rank "+l.rank+"."})),N(4===u.rank,(function(){return"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."})),null!=i&&N(D(r),(function(){return"Error in conv2d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+"."}));var h="NHWC"===a?l.shape[3]:l.shape[1];N(h===u.shape[2],(function(){return"Error in conv2d: depth of input ("+h+") must match input depth for filter "+u.shape[2]+"."})),N(vs(n,s),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"}));var p=ys(a),d=ls(l.shape,u.shape,n,s,r,i,!1,p),f=[u,l],m=Le.runKernelFunc((function(e,t){var n=e.conv2d(l,u,d);return t([u,l]),n}),{x:l,filter:u},(function(e,t){var i=t,o=i[0],u=i[1];return N(gs(s),(function(){return"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+s+"'"})),{x:function(){return Gl(u.shape,e,o,n,r,a)},filter:function(){return Ul(u,e,o.shape,n,r,a)}}}),"Conv2D",d,f);return c?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Vl=Nn({conv3d_:function(e,t,n,r,a,s){void 0===a&&(a="NDHWC"),void 0===s&&(s=[1,1,1]);var i=dn(e,"x","conv3d"),o=dn(t,"filter","conv3d"),u=i,l=!1;4===i.rank&&(l=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),N(5===u.rank,(function(){return"Error in conv3d: input must be rank 5, but got rank "+u.rank+"."})),N(5===o.rank,(function(){return"Error in conv3d: filter must be rank 5, but got rank "+o.rank+"."})),N(u.shape[4]===o.shape[3],(function(){return"Error in conv3d: depth of input ("+u.shape[4]+") must match input depth for filter "+o.shape[3]+"."})),N(function(e,t){return Bl(e)||Bl(t)}(n,s),(function(){return"Error in conv3D: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),N("NDHWC"===a,(function(){return"Error in conv3d: got dataFormat of "+a+" but only NDHWC is currently supported."}));var c=cs(u.shape,o.shape,n,s,r),h=Le.runKernelFunc((function(e,t){var n=e.conv3d(u,o,c);return t([u,o]),n}),{x:u,$filter:o},(function(e,t){N(Bl(s),(function(){return"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+s+"'"}));var a=t[0],i=t[1];return{x:function(){return Pl(a.shape,e,i,n,r)},$filter:function(){return function(e,t,n,r,a){var s=e;4===e.rank&&(s=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]));var i=t;4===i.rank&&(i=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3])),N(5===s.rank,(function(){return"Error in conv3dDerFilter: input must be rank 5, but got shape "+s.shape+"."})),N(5===i.rank,(function(){return"Error in conv3dDerFilter: dy must be rank 5, but got shape "+i.shape+"."})),N(5===n.length,(function(){return"Error in conv3dDerFilter: filterShape must be length 5, but got "+n+"."})),N(s.shape[4]===n[3],(function(){return"Error in conv3dDerFilter: depth of input "+s.shape[4]+") must match input depth in filter ("+n[3]+"."})),N(i.shape[4]===n[4],(function(){return"Error in conv3dDerFilter: depth of dy ("+i.shape[4]+") must match output depth for filter ("+n[4]+")."}));var o=cs(s.shape,n,r,1,a);return Le.runKernelFunc((function(e){return e.conv3dDerFilter(s,i,o)}),{x5D:s,dy5D:i})}(a,e,i.shape,n,r)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Ul=Nn({conv2dDerFilter_:function(e,t,n,r,a,s,i){void 0===s&&(s="NHWC");var o=e;3===e.rank&&(o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var u=t;3===u.rank&&(u=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),N(4===o.rank,(function(){return"Error in conv2dDerFilter: input must be rank 4, but got shape "+o.shape+"."})),N(4===u.rank,(function(){return"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."})),N(4===n.length,(function(){return"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+"."}));var l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];N(l===n[2],(function(){return"Error in conv2dDerFilter: depth of input "+l+") must match input depth in filter ("+n[2]+"."})),N(c===n[3],(function(){return"Error in conv2dDerFilter: depth of dy ("+c+") must match output depth for filter ("+n[3]+")."})),null!=i&&N(D(a),(function(){return"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+a+"."}));var h=ys(s),p=ls(o.shape,n,r,1,a,i,!1,h);return Le.runKernelFunc((function(e){return e.conv2dDerFilter(o,u,p)}),{x4D:o,dy4D:u})}}),Gl=Nn({conv2dDerInput_:Ll}),Hl=Nn({depthwiseConv2d_:function(e,t,n,r,a,s,i){void 0===a&&(a="NHWC"),void 0===s&&(s=[1,1]);var o=dn(e,"x","depthwiseConv2d"),u=dn(t,"filter","depthwiseConv2d"),l=o,c=!1;3===o.rank&&(c=!0,l=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),N(4===l.rank,(function(){return"Error in depthwiseConv2d: input must be rank 4, but got rank "+l.rank+"."})),N(4===u.rank,(function(){return"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."})),N(l.shape[3]===u.shape[2],(function(){return"Error in depthwiseConv2d: number of input channels ("+l.shape[3]+") must match the inChannels dimension in filter "+u.shape[2]+"."})),null==s&&(s=[1,1]),N(vs(n,s),(function(){return"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+s+"'"})),null!=i&&N(D(r),(function(){return"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+"."}));var h=ls(l.shape,u.shape,n,s,r,i,!0),p=[l,u],d=Le.runKernelFunc((function(e,t){var n=e.depthwiseConv2D(l,u,h);return t([l,u]),n}),{x:l,filter:u},(function(e,t){N(gs(s),(function(){return"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+s+"'"}));var n=t[0],r=t[1];return{x:function(){return ql(n.shape,e,r,h)},filter:function(){return jl(n,e,r.shape,h)}}}),"DepthwiseConv2dNative",h,p);return c?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}}),ql=Nn({depthwiseConv2dDerInput_:function(e,t,n,r){var a=t,s=!1;3===t.rank&&(s=!0,a=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var i=Le.runKernelFunc((function(e){return e.depthwiseConv2DDerInput(a,n,r)}),{dy4D:a});return s?i.as3D(i.shape[1],i.shape[2],i.shape[3]):i}}),jl=Nn({depthwiseConv2dDerFilter_:function(e,t,n,r){var a=e;3===e.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var s=t;return 3===s.rank&&(s=t.as4D(1,t.shape[0],t.shape[1],t.shape[2])),Le.runKernelFunc((function(e){return e.depthwiseConv2DDerFilter(a,s,r)}),{x4D:a,dy4D:s})}}),Kl=Nn({separableConv2d_:function(e,t,n,r,a,s,i){void 0===s&&(s=[1,1]),void 0===i&&(i="NHWC");var o=dn(e,"x","separableConv2d"),u=dn(t,"depthwiseFilter","separableConv2d"),l=dn(n,"pointwiseFilter","separableConv2d"),c=o,h=!1;if(3===o.rank&&(h=!0,c=o.as4D(1,o.shape[0],o.shape[1],o.shape[2])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");N(4===c.rank,(function(){return"Error in separableConv2d: input must be rank 4, but got rank "+c.rank+"."})),N(4===u.rank,(function(){return"Error in separableConv2d: depthwise filter must be rank 4, but got rank "+u.rank+"."})),N(4===l.rank,(function(){return"Error in separableConv2d: pointwise filter must be rank 4, but got rank "+u.rank+"."})),N(1===l.shape[0],(function(){return"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got "+l.shape[0]+"."})),N(1===l.shape[1],(function(){return"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got "+l.shape[1]+"."}));var p=u.shape[2],d=u.shape[3];N(l.shape[2]===p*d,(function(){return"Error in separableConv2d: the third dimension of pointwise filter must be "+p*d+", but got "+l.shape[2]+"."}));var f=Hl(c,u,r,a,i,s),m=Wl(f,l,1,"valid",i);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),Xl=Nn({conv2dTranspose_:function(e,t,n,r,a,s){return Ll(n,dn(e,"x","conv2dTranspose"),dn(t,"filter","conv2dTranspose"),r,a,"NHWC",s)}}),Yl=Nn({conv3dTranspose_:function(e,t,n,r,a){return Pl(n,dn(e,"x","conv3dTranspose"),dn(t,"filter","conv3dTranspose"),r,a)}}),Jl=Nn({matMul_:function(e,t,n,r){var a;void 0===n&&(n=!1),void 0===r&&(r=!1);var s=dn(e,"a","matMul"),i=dn(t,"b","matMul");a=Ae(s,i),s=a[0],i=a[1];var o=n?s.shape[s.rank-2]:s.shape[s.rank-1],u=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?s.shape[s.rank-1]:s.shape[s.rank-2],c=r?i.shape[i.rank-2]:i.shape[i.rank-1],h=s.shape.slice(0,-2),p=i.shape.slice(0,-2),d=R(h),f=R(p);N(s.rank>=2&&i.rank>=2&&s.rank===i.rank,(function(){return"Error in matMul: inputs must have the same rank of at least 2, got ranks "+s.rank+" and "+i.rank+"."})),N(A(h,p),(function(){return"Error in matMul: outer dimensions ("+h+") and ("+p+") of Tensors with shapes "+s.shape+" and "+i.shape+" must match."})),N(o===u,(function(){return"Error in matMul: inner shapes ("+o+") and ("+u+") of Tensors with shapes "+s.shape+" and "+i.shape+" and transposeA="+n+" and transposeB="+r+" must match."}));var m=s.shape.slice(0,-2).concat([l,c]),g=n?s.as3D(d,o,l):s.as3D(d,l,o),v=r?i.as3D(f,c,u):i.as3D(f,u,c),y={transposeA:n,transposeB:r};return Le.runKernelFunc((function(e,t){var a=e.batchMatMul(g,v,n,r);return t([g,v]),a}),{a:g,b:v},(function(e,t){var a=t,s=a[0],i=a[1];return n||r?!n&&r?{a:function(){return e.matMul(i,!1,!1)},b:function(){return e.matMul(s,!0,!1)}}:n&&!r?{a:function(){return i.matMul(e,!1,!0)},b:function(){return s.matMul(e,!1,!1)}}:{a:function(){return i.matMul(e,!0,!0)},b:function(){return e.matMul(s,!0,!0)}}:{a:function(){return e.matMul(i,!1,!0)},b:function(){return s.matMul(e,!0,!1)}}}),"BatchMatMul",y).reshape(m)}}),Zl=Nn({dot_:function(e,t){var n=dn(e,"t1","dot"),r=dn(t,"t2","dot");N(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(function(){return"Error in dot: inputs must all be rank 1 or 2, but got ranks "+n.rank+" and "+r.rank+"."}));var a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];return N(a===s,(function(){return"Error in dot: inner dimensions of inputs must match, but got "+a+" and "+s+"."})),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),Ql=Nn({outerProduct_:function(e,t){var n=dn(e,"v1","outerProduct"),r=dn(t,"v2","outerProduct");return N(1===n.rank&&1===r.rank,(function(){return"Error in outerProduct: inputs must be rank 1, but got ranks "+n.rank+" and "+r.rank+"."})),n.as2D(-1,1).matMul(r.as2D(1,-1))}}),ec=Nn({reverse_:function(e,t){var n=dn(e,"x","reverse");if(0===n.rank)return n.clone();var r=L(t,n.shape);return Le.runKernelFunc((function(e){return e.reverse(n,r)}),{$x:n},(function(e){return{$x:function(){return e.reverse(r)}}})).reshapeAs(n)}}),tc=Nn({reverse1d_:function(e){var t=dn(e,"x","reverse");return N(1===t.rank,(function(){return"Error in reverse1D: x must be rank 1 but got rank "+t.rank+"."})),ec(t,0)}}),nc=Nn({reverse2d_:function(e,t){var n=dn(e,"x","reverse");return N(2===n.rank,(function(){return"Error in reverse2D: x must be rank 2 but got rank "+n.rank+"."})),ec(n,t)}}),rc=Nn({reverse3d_:function(e,t){var n=dn(e,"x","reverse");return N(3===n.rank,(function(){return"Error in reverse3D: x must be rank 3 but got rank "+n.rank+"."})),ec(n,t)}}),ac=Nn({reverse4d_:function(e,t){var n=dn(e,"x","reverse");return N(4===n.rank,(function(){return"Error in reverse4D: x must be rank 4 but got rank "+n.rank+"."})),ec(n,t)}});function sc(e,t,n,r,a,s){var i=dn(e,"x","maxPool"),o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),null==r&&(r=[1,1]),N(4===o.rank,(function(){return"Error in maxPool: input must be rank 4 but got rank "+o.rank+"."})),N(vs(n,r),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"})),null!=s&&N(D(a),(function(){return"Error in maxPool: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var l=os(o.shape,t,n,r,a,s);if(1===l.filterWidth&&1===l.filterHeight&&A(l.inShape,l.outShape))return i.clone();var c=[o],h=Le.runKernelFunc((function(e,t){var n=e.maxPool(o,l);return t([o,n]),n}),{x:o},(function(e,s){var i=s[0],o=s[1];return{x:function(){return function(e,t,n,r,a,s,i,o){var u=dn(e,"dy","maxPoolBackprop"),l=dn(t,"input","maxPoolBackprop"),c=dn(n,"output","maxPoolBackprop");N(l.rank===u.rank,(function(){return"Rank of input ("+l.rank+") does not match rank of dy ("+u.rank+")"})),null==s&&(s=[1,1]),N(vs(a,s),(function(){return"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+s+"'"})),N(4===u.rank,(function(){return"Error in maxPoolBackprop: dy must be rank 4 but got rank "+u.rank+"."})),N(4===l.rank,(function(){return"Error in maxPoolBackprop: input must be rank 4 but got rank "+l.rank+"."}));var h=os(l.shape,r,a,s,i,void 0);return Le.runKernelFunc((function(e){return e.maxPoolBackprop(u,l,c,h)}),{$dy:u,$input:l})}(e,i,o,t,n,r,a)}}}),"MaxPool",l,c);return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h}function ic(e,t,n,r,a,s){var i=dn(e,"x","avgPool","float32");null==r&&(r=[1,1]),N(vs(n,r),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+r+"'"}));var o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),N(4===o.rank,(function(){return"Error in avgPool: x must be rank 4 but got rank "+o.rank+"."})),null!=s&&N(D(a),(function(){return"Error in avgPool: pad must be an integer when using, dimRoundingMode "+s+" but got pad "+a+"."}));var l=os(o.shape,t,n,r,a,s);if(1===l.filterWidth&&1===l.filterHeight&&A(l.inShape,l.outShape))return i.clone();var c=Le.runKernelFunc((function(e){return e.avgPool(o,l)}),{x:o},(function(e){return{x:function(){return function(e,t,n,r,a,s){var i=dn(e,"dy","avgPoolBackprop"),o=dn(t,"input","avgPoolBackprop");N(o.rank===i.rank,(function(){return"Rank of input ("+o.rank+") does not match rank of dy ("+i.rank+")"})),null==a&&(a=[1,1]),N(vs(r,a),(function(){return"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"}));var u=o,l=i,c=!1;3===o.rank&&(c=!0,u=o.as4D(1,o.shape[0],o.shape[1],o.shape[2]),l=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),N(4===l.rank,(function(){return"Error in avgPoolBackprop: dy must be rank 4 but got rank "+l.rank+"."})),N(4===u.rank,(function(){return"Error in avgPoolBackprop: input must be rank 4 but got rank "+u.rank+"."}));var h=os(u.shape,n,r,a,s),p=Le.runKernelFunc((function(e){return e.avgPoolBackprop(l,u,h)}),{dy4D:l,input4D:u});return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}(e,o,t,n,r,a)}}}),"AvgPool",l);return c=c.cast(i.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}var oc=Nn({maxPool_:function(e,t,n,r,a){return sc(e,t,n,1,r,a)}}),uc=Nn({avgPool_:function(e,t,n,r,a){return ic(e,t,n,1,r,a)}}),lc=Nn({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");var i=dn(e,"x","maxPool"),o=i,u=!1;3===i.rank&&(u=!0,o=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),N(vs(s,a),(function(){return"Error in pool: Either strides or dilations must be 1. Got strides "+s+" and dilations '"+a+"'"}));var l,c=os(o.shape,t,s,a,r),h=[c.dilationHeight,c.dilationWidth];l="same"===r?function(e,t){var n=e.map((function(e,n){return e+(e-1)*(t[n]-1)})).map((function(e){return e-1})),r=n.map((function(e){return Math.floor(e/2)})),a=n.map((function(e,t){return e-r[t]}));return n.map((function(e,t){return[r[t],a[t]]}))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];var p=1===h[0]&&1===h[1],d=function(e,t,n){var r=n.map((function(e){return e[0]})),a=n.map((function(e){return e[1]})),s=e.concat(r,a),i=t.map((function(e,t){return(e-s[t]%e)%e})),o=a.map((function(e,t){return e+i[t]}));return[t.map((function(e,t){return[r[t],o[t]]})),t.map((function(e,t){return[0,i[t]]}))]}([c.inHeight,c.inWidth],h,l),f=d[0],m=d[1],g=p?r:"valid",v=p?o:ir(o,h,f),y=("avg"===n?function(){return ic(v,t,s,1,g)}:function(){return sc(v,t,s,1,g)})(),b=p?y:er(y,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),cc=Nn({maxPool3d_:function(e,t,n,r,a,s,i){void 0===s&&(s="NDHWC");var o=dn(e,"x","maxPool3d"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==i&&(i=[1,1,1]),N(5===u.rank,(function(){return"Error in maxPool3d: x must be rank 5 but got rank "+u.rank+"."})),N("NDHWC"===s,(function(){return"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s})),N(vs(n,i),(function(){return"Error in maxPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),null!=a&&N(D(r),(function(){return"Error in maxPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=us(u.shape,t,n,i,r,a,s),h=Le.runKernelFunc((function(e,t){var n=e.maxPool3d(u,c);return t([u,n]),n}),{x:u},(function(e,s){var o=s[0],u=s[1];return{x:function(){return function(e,t,n,r,a,s,i,o){var u=dn(e,"dy","maxPool3dBackprop"),l=dn(t,"input","maxPool3dBackprop"),c=dn(n,"output","maxPool3dBackprop"),h=u,p=l,d=c,f=!1;4===l.rank&&(f=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),p=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),d=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),N(5===h.rank,(function(){return"Error in maxPool3dBackprop: dy must be rank 5 but got rank "+h.rank+"."})),N(5===p.rank,(function(){return"Error in maxPool3dBackprop: input must be rank 5 but got rank "+p.rank+"."})),N(5===d.rank,(function(){return"Error in maxPool3dBackprop: output must be rank 5 but got rank "+d.rank+"."})),null==s&&(s=[1,1,1]),N(vs(a,s),(function(){return"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides "+a+" and dilations '"+s+"'"})),null!=o&&N(D(i),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+i+"."}));var m=us(p.shape,r,a,s,i,o),g=Le.runKernelFunc((function(e){return e.maxPool3dBackprop(h,p,d,m)}),{dy5D:h,input5D:p});return f?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}(e,o,u,t,n,i,r,a)}}}));return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),hc=Nn({avgPool3d_:function(e,t,n,r,a,s,i){void 0===s&&(s="NDHWC");var o=dn(e,"x","avgPool3d","float32"),u=o,l=!1;4===o.rank&&(l=!0,u=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3])),null==i&&(i=[1,1,1]),N(5===u.rank,(function(){return"Error in avgPool3d: x must be rank 5 but got rank "+u.rank+"."})),N("NDHWC"===s,(function(){return"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s})),N(vs(n,i),(function(){return"Error in avgPool3d: Either strides or dilations must be 1. Got strides "+n+" and dilations '"+i+"'"})),null!=a&&N(D(r),(function(){return"Error in avgPool3d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."}));var c=us(u.shape,t,n,i,r,a,s),h=Le.runKernelFunc((function(e){return e.avgPool3d(u,c)}),{x:u},(function(e){return{x:function(){return function(e,t,n,r,a,s,i){var o=dn(e,"dy","avgPool3dBackprop"),u=dn(t,"input","avgPool3dBackprop"),l=o,c=u,h=!1;4===u.rank&&(h=!0,l=o.as5D(1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),N(5===l.rank,(function(){return"Error in avgPool3dBackprop: dy must be rank 5 but got rank "+l.rank+"."})),N(5===c.rank,(function(){return"Error in avgPool3dBackprop: input must be rank 5 but got rank "+c.rank+"."})),null==a&&(a=[1,1,1]),N(vs(r,a),(function(){return"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+a+"'"})),null!=i&&N(D(s),(function(){return"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+s+"."}));var p=us(c.shape,n,r,a,s,i),d=Le.runKernelFunc((function(e){return e.avgPool3dBackprop(l,c,p)}),{dy5D:l,input5D:c});return h?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}(e,u,t,n,i,r,a)}}}));return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),pc=Nn({maxPoolWithArgmax_:function(e,t,n,r,a){void 0===a&&(a=!1);var s=dn(e,"x","maxPoolWithArgmax"),i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=Le.runKernel("MaxPoolWithArgmax",{x:s},i);return{result:o[0],indexes:o[1]}}}),dc=Nn({slice_:function(e,t,n){var r,a,s=dn(e,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");(r="number"==typeof t?[t].concat(new Array(s.rank-1).fill(0)):t.length<s.rank?t.concat(new Array(s.rank-t.length).fill(0)):t.slice()).forEach((function(e){N(-1!==e,(function(){return"slice() does not support negative begin indexing."}))})),a=(a=null==n?new Array(s.rank).fill(-1):"number"==typeof n?[n].concat(new Array(s.rank-1).fill(-1)):n.length<s.rank?n.concat(new Array(s.rank-n.length).fill(-1)):n).map((function(e,t){return e>=0?e:(N(-1===e,(function(){return"Negative size values should be exactly -1 but got "+e+" for the slice() size at index "+t+"."})),s.shape[t]-r[t])})),za(s,r,a);var i=s.shape,o={begin:r,size:a};return Le.runKernelFunc((function(e){return e.slice(s,r,a)}),{x:s},(function(e){for(var t=[],n=0;n<e.rank;n++)t.push([r[n],i[n]-r[n]-a[n]]);return{x:function(){return tl(e,t)}}}),"Slice",o)}}),fc=Nn({slice1d_:function(e,t,n){var r=dn(e,"x","slice1d");return N(1===r.rank,(function(){return"slice1d expects a rank-1 tensor, but got a rank-"+r.rank+" tensor"})),dc(r,[t],[n])}}),mc=Nn({slice2d_:function(e,t,n){var r=dn(e,"x","slice2d");return N(2===r.rank,(function(){return"slice2d expects a rank-2 tensor, but got a rank-"+r.rank+" tensor"})),dc(r,t,n)}}),gc=Nn({slice3d_:function(e,t,n){var r=dn(e,"x","slice3d");return N(3===r.rank,(function(){return"slice3d expects a rank-3 tensor, but got a rank-"+r.rank+" tensor"})),dc(r,t,n)}}),vc=Nn({slice4d_:function(e,t,n){var r=dn(e,"x","slice4d");return N(4===r.rank,(function(){return"slice4d expects a rank-4 tensor, but got a rank-"+r.rank+" tensor"})),dc(r,t,n)}});function yc(e,t,n,r,a){return t.rank<n.rank&&(t=t.reshape(yn(t.shape,r))),e.rank<n.rank&&(e=e.reshape(yn(e.shape,r))),{x:function(){var r=e.mul(n.equal(t).cast(e.dtype));return null==a?r:r.transpose(a)}}}var bc=Nn({all_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","all","bool"),a=L(t,r.shape),s=a,i=xn(s,r.rank);null!=i&&(r=r.transpose(i),s=kn(s.length,r.rank));var o=Le.runKernelFunc((function(e){return e.all(r,s)}),{$x:r});if(n){var u=yn(o.shape,a);return o.reshape(u)}return o}}),xc=Nn({any_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","any","bool"),a=L(t,r.shape),s=a,i=xn(s,r.rank);null!=i&&(r=r.transpose(i),s=kn(s.length,r.rank));var o=Le.runKernelFunc((function(e){return e.any(r,s)}),{$x:r});if(n){var u=yn(o.shape,a);return o.reshape(u)}return o}}),wc=Nn({argMax_:function(e,t){void 0===t&&(t=0);var n=dn(e,"x","argMax");null==t&&(t=0);var r=L(t,n.shape),a=xn(r,n.rank);null!=a&&(n=n.transpose(a),r=kn(r.length,n.rank));var s={axis:r[0]},i=[n];return Le.runKernelFunc((function(e,t){var a=e.argMax(n,r[0]);return t([n]),a}),{x:n},(function(e,t){var n=t[0];return{x:function(){return Hn(n)}}}),"ArgMax",s,i)}}),kc=Nn({argMin_:function(e,t){void 0===t&&(t=0);var n=dn(e,"x","argMin");null==t&&(t=0);var r=L(t,n.shape),a=xn(r,n.rank);return null!=a&&(n=n.transpose(a),r=kn(r.length,n.rank)),Le.runKernelFunc((function(e,t){var a=e.argMin(n,r[0]);return t([n]),a}),{$x:n},(function(e,t){var n=t[0];return{$x:function(){return Hn(n)}}}))}}),Ic=Nn({logSumExp_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","logSumExp"),a=L(t,r.shape),s=r.max(a,!0),i=r.sub(s).exp().sum(a).log(),o=s.reshape(i.shape).add(i);if(n){var u=yn(o.shape,a);return o.reshape(u)}return o}}),Cc=Nn({max_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","max"),a=r,s=L(t,r.shape),i=s,o=xn(i,r.rank);null!=o&&(r=r.transpose(o),i=kn(i.length,r.rank));var u=[r],l=Le.runKernelFunc((function(e,t){var n=e.max(r,i);return t([a,n]),n}),{x:r},(function(e,t){return yc(e,t[1],t[0],s,o)}),"Max",{axes:i},u,[!0]);if(n){var c=yn(l.shape,s);l=l.reshape(c)}return l}}),Nc=Nn({mean_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","mean"),a=L(t,r.shape),s=R(vn(r.shape,a)[1]);return Qa((function(e){var r=Dn(s);return{value:(r.dtype===e.dtype?e:e.cast(r.dtype)).div(r).sum(t,n),gradFunc:function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(Pn(e.shape,"float32")).div(s)}}}))(r)}}),Sc=Nn({min_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","min"),a=r,s=L(t,r.shape),i=s,o=xn(i,r.rank);null!=o&&(r=r.transpose(o),i=kn(i.length,r.rank));var u=[r],l=Le.runKernelFunc((function(e,t){var n=e.min(r,i);return t([a,n]),n}),{x:r},(function(e,t){return yc(e,t[1],t[0],s,o)}),"Min",{axes:i},u,[!0]);if(n){var c=yn(l.shape,s);l=l.reshape(c)}return l}}),Ec=Nn({moments_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=L(t,(e=dn(e,"x","moments")).shape),a=e.mean(r,n),s=a.shape;n||(s=yn(a.shape,r));var i=e.toFloat().sub(a.reshape(s)).square();return{mean:a,variance:i.mean(r,n)}}}),Tc=Nn({sum_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","sum");"bool"===r.dtype&&(r=r.toInt());var a=L(t,r.shape);return Qa((function(e){var t=xn(a,e.rank),r=a,s=e;null!=t&&(s=e.transpose(t),r=kn(r.length,e.rank));var i=function(t){var n=e.shape.slice();return a.forEach((function(e){n[e]=1})),t.reshape(n).mul(Pn(e.shape,"float32"))},o={axes:r},u=Le.runKernelFunc((function(e){return e.sum(s,r)}),{x:s},(function(e){return{x:function(){return i(e)}}}),"Sum",o);if(n){var l=yn(u.shape,a);u=u.reshape(l)}return{value:u,gradFunc:i}}))(r)}}),Rc=Nn({prod_:function(e,t,n){void 0===t&&(t=null),void 0===n&&(n=!1);var r=dn(e,"x","prod");"bool"===r.dtype&&(r=r.toInt());var a=L(t,r.shape),s=xn(a,r.rank),i=a,o=r;null!=s&&(o=r.transpose(s),i=kn(i.length,r.rank));var u=Le.runKernelFunc((function(e){return e.prod(o,i)}),{permutedX:o});if(n){var l=yn(u.shape,a);u=u.reshape(l)}return u}}),Ac=Nn({elu_:function(e){var t=dn(e,"x","elu");return Le.runKernelFunc((function(e,n){var r=e.elu(t);return n([r]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){return Le.runKernelFunc((function(t){return t.eluDer(e,n)}),{dy:e,y:n})}}}))}}),Dc=Nn({leakyRelu_:function(e,t){void 0===t&&(t=.2);var n=dn(e,"x","leakyRelu");return ba(Dn(t).mul(n),n)}}),Fc=Nn({prelu_:function(e,t){var n=dn(e,"x","prelu"),r=dn(t,"alpha","prelu");return Le.runKernelFunc((function(e,t){var a=e.prelu(n,r);return t([n,r]),a}),{x:n,alpha:r},(function(e,t){var n=t[0],r=t[1],a=n.greater(0);return{x:function(){return Ku(a,e,e.mul(r))},alpha:function(){var t=Ku(a,Hn(e),e.mul(n)),s=_r(r.shape,e.shape);return s.length>0&&(t=t.sum(s)),t.reshape(r.shape)}}}),"Prelu")}}),_c=Nn({relu_:function(e){var t=dn(e,"x","relu");return"bool"===t.dtype?t.toInt():Le.runKernelFunc((function(e,n){var r=e.relu(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0];return{x:function(){return e.mulStrict(n.step().toFloat())}}}),"Relu")}}),$c=Nn({relu6_:function(e){var t=dn(e,"x","relu6");return"bool"===t.dtype?t.toInt():Le.runKernelFunc((function(e,n){var r=e.relu6(t);return n([t]),r}),{x:t},(function(e,t){var n=t[0],r=n.lessEqual(6).mul(n.step());return{x:function(){return e.mulStrict(r.toFloat())}}}),"Relu6")}}),Oc=Nn({selu_:function(e){var t=dn(e,"x","selu");return Le.runKernelFunc((function(e,n){var r=e.selu(t);return n([t]),r}),{$x:t},(function(e,t){var n=t[0];return{$x:function(){var t=n.greater(Dn(0)),r=Dn(1.7580993408473768),a=Dn(1.0507009873554805),s=e.mul(a),i=e.mul(r).mul(n.toFloat().exp());return Ku(t,s,i)}}}))}}),Mc=Nn({localResponseNormalization_:function(e,t,n,r,a){void 0===t&&(t=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===a&&(a=.5);var s=dn(e,"x","localResponseNormalization");N(4===s.rank||3===s.rank,(function(){return"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank "+s.rank+"."})),N(D(t),(function(){return"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius "+t+"."}));var i=s,o=!1;3===s.rank&&(o=!0,i=s.as4D(1,s.shape[0],s.shape[1],s.shape[2]));var u=Le.runKernelFunc((function(e,s){var o=e.localResponseNormalization4D(i,t,n,r,a);return s([i,o]),o}),{x4D:i},(function(e,s){var i=s[0],o=s[1];return{x4D:function(){return Le.runKernelFunc((function(s){return s.LRNGrad(e,i,o,t,n,r,a)}),{})}}}));return o?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Lc=Nn({norm_:function(e,t,n,r){void 0===t&&(t="euclidean"),void 0===n&&(n=null),void 0===r&&(r=!1);var a=function e(t,n,r){if(void 0===r&&(r=null),0===t.rank)return t.abs();if(1!==t.rank&&null===r)return e(t.reshape([-1]),n,r);if(1===t.rank||"number"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return t.abs().sum(r);if(n===1/0)return t.abs().max(r);if(n===-1/0)return t.abs().min(r);if("euclidean"===n||2===n)return t.abs().pow(Dn(2,"int32")).sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return t.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return t.abs().sum(r[1]).max(r[0]);if(n===-1/0)return t.abs().sum(r[1]).min(r[0]);if("fro"===n||"euclidean"===n)return t.square().sum(r).sqrt();throw new Error("Error in norm: invalid ord value: "+n)}throw new Error("Error in norm: invalid axis: "+r)}(e=dn(e,"x","norm"),t,n),s=a.shape;if(r){var i=L(n,e.shape);s=yn(a.shape,i)}return a.reshape(s)}}),Bc=Nn({basicLSTMCell_:function(e,t,n,r,a,s){var i=dn(e,"forgetBias","basicLSTMCell"),o=dn(t,"lstmKernel","basicLSTMCell"),u=dn(n,"lstmBias","basicLSTMCell"),l=dn(r,"data","basicLSTMCell"),c=dn(a,"c","basicLSTMCell"),h=dn(s,"h","basicLSTMCell"),p=l.concat(h,1).matMul(o).add(u),d=p.shape[0],f=p.shape[1]/4,m=[d,f],g=p.slice([0,0],m),v=p.slice([0,f],m),y=p.slice([0,2*f],m),b=p.slice([0,3*f],m),x=g.sigmoid().mulStrict(v.tanh()).addStrict(c.mulStrict(i.add(y).sigmoid())),w=x.tanh().mulStrict(b.sigmoid());return[x,w]}}),Pc=Nn({multiRNNCell_:function(e,t,n,r){for(var a=dn(t,"data","multiRNNCell"),s=fn(n,"c","multiRNNCell"),i=fn(r,"h","multiRNNCell"),o=a,u=[],l=0;l<e.length;l++){var c=e[l](o,s[l],i[l]);u.push(c[0]),u.push(c[1]),o=c[1]}var h=[],p=[];for(l=0;l<u.length;l+=2)h.push(u[l]),p.push(u[l+1]);return[h,p]}}),zc=Nn({movingAverage_:function(e,t,n,r,a){void 0===a&&(a=!0);var s=dn(e,"v","movingAverage"),i=dn(t,"x","movingAverage"),o=dn(n,"decay","movingAverage");De(s,i),N(A(s.shape,i.shape),(function(){return"Shape mismatch in v and x"}));var u=Dn(1),l=u.sub(o),c=i.sub(s).mul(l);if(a){N(null!=r,(function(){return"When using zeroDebias: true, step is required."}));var h=dn(r,"step","movingAverage");c=c.div(u.sub(Ea(o,h)))}return s.add(c)}}),Wc=Nn({stridedSlice_:function(e,t,n,r,a,s,i,o,u){if(void 0===a&&(a=0),void 0===s&&(s=0),void 0===i&&(i=0),void 0===o&&(o=0),void 0===u&&(u=0),null==r&&(r=new Array(t.length)),0!==i)throw new Error("ellipsis mask is not yet supported");var l=dn(e,"x","stridedSlice"),c=Wa(o),h=l.shape.slice();c.forEach((function(e){t[e]=0,n[e]=1,h.splice(e,0,1)})),l=l.reshape(h);for(var p=0;p<l.rank;p++)t[p]=Ua(a,t,r,l.shape,p),n[p]=Ga(s,n,r,l.shape,p),r[p]=r[p]||1;var d=Wa(u);d.forEach((function(e){n[e]=t[e]+1,r[e]=1}));var f=Va(t,n,r),m=f.filter((function(e,t){return-1===d.indexOf(t)}));return r.every((function(e){return 1===e}))?dc(l,t,f).reshape(m):Le.runKernelFunc((function(e){return e.stridedSlice(l,t,n,r)}),{$x:l}).reshape(m)}}),Vc=Nn({topk_:function(e,t,n){void 0===t&&(t=1),void 0===n&&(n=!0);var r=dn(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");var a=r.shape[r.shape.length-1];if(t>a)throw new Error("'k' passed to topk() must be <= the last dimension ("+a+") but got "+t);var s=Le.runKernelFunc((function(e){return e.topk(r,t,n)}),{$x:r});return{values:s[0],indices:s[1]}}}),Uc=Nn({scatterND_:function(e,t,n){var r=dn(e,"indices","scatterND","int32"),a=dn(t,"updates","scatterND");return La(a,r,n),Le.runKernelFunc((function(e){return e.scatterND(r,a,n)}),{indices:r,updates:a},null,"ScatterNd",{shape:n})}}),Gc=Nn({fft_:function(e){N("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.fft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return Le.runKernelFunc((function(e){return e.fft(r)}),{input:e}).reshape(e.shape)}}),Hc=Nn({ifft_:function(e){N("complex64"===e.dtype,(function(){return"The dtype for tf.spectral.ifft() must be complex64 but got "+e.dtype+"."}));var t=e.shape[e.shape.length-1],n=e.size/t,r=e.as2D(n,t);return Le.runKernelFunc((function(e){return e.ifft(r)}),{input:e}).reshape(e.shape)}}),qc=Nn({rfft_:function(e,t){N("float32"===e.dtype,(function(){return"The dtype for rfft() must be real value but got "+e.dtype}));var n,r=e.shape[e.shape.length-1],a=e.size/r;if(null!=t&&t<r){var s=e.shape.map((function(e){return 0})),i=e.shape.map((function(e){return e}));i[e.shape.length-1]=t,n=e.slice(s,i),r=t}else if(null!=t&&t>r){var o=e.shape.map((function(e){return e}));o[e.shape.length-1]=t-r,n=e.concat(zn(o),e.shape.length-1),r=t}else n=e;var u=n.zerosLike(),l=Sn(n,u).as2D(a,r),c=Gc(l),h=Math.floor(r/2)+1,p=En(c),d=Tn(c),f=p.split([h,r-h],p.shape.length-1),m=d.split([h,r-h],d.shape.length-1),g=n.shape.slice();return g[n.shape.length-1]=h,Sn(f[0],m[0]).reshape(g)}}),jc=Nn({irfft_:function(e){var t=e.shape[e.shape.length-1],n=e.size/t;if(t<=2){var r=e.as2D(n,t),a=Hc(r);return En(a)}var s=[n,2*(t-1)],i=En(e).as2D(n,t),o=Tn(e).as2D(n,t),u=i.slice([0,1],[n,t-2]).reverse(1),l=o.slice([0,1],[n,t-2]).reverse(1).mul(Dn(-1)),c=i.concat(u,1),h=o.concat(l,1);return r=Sn(c,h).as2D(s[0],s[1]),a=Hc(r),En(a)}}),Kc=Object.freeze({fft:Gc,ifft:Hc,rfft:qc,irfft:jc}),Xc=Nn({sparseToDense_:function(e,t,n,r){void 0===r&&(r=0);var a=dn(e,"sparseIndices","sparseToDense","int32"),s=dn(t,"sparseValues","sparseToDense"),i=dn(r,"defaultValue","sparseToDense",s.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type, but the dtype was "+e.dtype+".");if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix, but got shape "+e.shape+".");var a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:, "+n.length+", should be: "+s+".");var i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error("sparseValues has incorrect shape "+t.shape+", should be [] or ["+a+"]");if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i),Le.runKernelFunc((function(e){return e.sparseToDense(a,s,n,i)}),{$sparseIndices:a,$sparseValues:s,$defaultValue:i})}}),Yc=Nn({gatherND_:function(e,t){var n=dn(t,"indices","gatherND","int32"),r=dn(e,"x","gatherND");return Le.runKernelFunc((function(e){return e.gatherND(r,n)}),{x:r,indices:n},null,"GatherNd")}}),Jc=Nn({diag_:function(e){var t=dn(e,"x","diag").flatten(),n=e.shape.concat(e.shape);return Le.runKernelFunc((function(e){return e.diag(t)}),{$x:t}).reshape(n)}}),Zc=Nn({dropout_:function(e,t,n,r){var a=dn(e,"x","dropout");if(N("float32"===a.dtype,(function(){return"x has to be a floating point tensor since it's going to be scaled, but got a "+a.dtype+" tensor instead."})),N(t>=0&&t<1,(function(){return"rate must be a float in the range [0, 1), but got "+t+"."})),0===t)return e instanceof xe?a.clone():a;var s=function(e,t){if(null==t)return e.shape.slice();if(A(e.shape,t))return t;if(e.shape.length===t.length){for(var n=[],r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=gl(s,0,1,"float32",r).add(i).floor().div(i);return a.mul(o)}});function Qc(e,t,n){for(var r=1-e%2,a=new Float32Array(e),s=0;s<e;++s){var i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Fn(a,"float32")}var eh,th=Nn({hannWindow_:function(e){return Qc(e,.5,.5)}}),nh=Nn({hammingWindow_:function(e){return Qc(e,.54,.46)}}),rh=Nn({frame_:function(e,t,n,r,a){void 0===r&&(r=!1),void 0===a&&(a=0);for(var s=0,i=[];s+t<=e.size;)i.push(dc(e,s,t)),s+=n;if(r)for(;s<e.size;){var o=s+t-e.size,u=qn([dc(e,s,t-o),Wn([o],a)]);i.push(u),s+=n}return 0===i.length?_n([],[0,t]):qn(i).as2D(i.length,t)}}),ah=Nn({stft_:function(e,t,n,r,a){var s;void 0===a&&(a=th),null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));for(var i=rh(e,t,n),o=Na(i,a(t)),u=[],l=0;l<i.shape[0];l++)u.push(qc(o.slice([l,0],[1,t]),r));return qn(u)}}),sh=Object.freeze({hannWindow:th,hammingWindow:nh,frame:rh,stft:ah}),ih=function(e,t,n){return void 0===n&&(n=1),s(this,void 0,void 0,(function(){var r,a,s,o,u,l,c,h,p,d,f,m,g,v;return i(this,(function(i){switch(i.label){case 0:return r=dn(e,"predictions","inTopK"),a=dn(t,"targets","inTopK"),N(r.rank>1,(function(){return"inTopK() expects the predictions to be of rank 2 or higher, but got "+r.rank})),N(r.rank-1===a.rank,(function(){return"predictions rank should be 1 larger than targets rank, but got predictions rank "+r.rank+" and targets rank "+a.rank})),S(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension."),s=r.shape[r.shape.length-1],N(n>0&&n<=s,(function(){return"'k' passed to inTopK() must be > 0 && <= the predictions last dimension ("+s+"), but got "+n})),[4,r.data()];case 1:return o=i.sent(),[4,a.data()];case 2:for(u=i.sent(),l=[o.length/s,s],h=l[1],p=P("bool",c=l[0]),d=0;d<c;d++){for(f=d*h,m=o.subarray(f,f+h),g=[],v=0;v<m.length;v++)g.push({value:m[v],index:v});for(g.sort((function(e,t){return t.value-e.value})),p[d]=0,v=0;v<n;v++)if(g[v].index===u[d]){p[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),[2,Rn(p,a.shape,"bool")]}}))}))};!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(eh||(eh={}));var oh=Nn({absoluteDifference_:function(e,t,n,r){void 0===r&&(r=eh.SUM_BY_NONZERO_WEIGHTS);var a=dn(e,"labels","absoluteDifference"),s=dn(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=dn(n,"weights","absoluteDifference")),S(a.shape,s.shape,"Error in absoluteDifference: ");var o=a.sub(s).abs();return uh(o,i,r)}}),uh=Nn({computeWeightedLoss_:function(e,t,n){void 0===n&&(n=eh.SUM_BY_NONZERO_WEIGHTS);var r=dn(e,"losses","computeWeightedLoss"),a=null;null!=t&&(a=dn(t,"weights","computeWeightedLoss"));var s=null==a?r:r.mul(a);if(n===eh.NONE)return s;if(n===eh.SUM)return s.sum();if(n===eh.MEAN){if(null==a)return s.mean();var i=r.size/a.size,o=s.sum().div(a.sum());return i>1?o.div(Dn(i)):o}if(n===eh.SUM_BY_NONZERO_WEIGHTS){if(null==a)return s.sum().div(Dn(r.size));var u=a.mul(Pn(r.shape)).notEqual(Dn(0)).sum().toFloat();return s.sum().div(u)}throw Error("Unknown reduction: "+n)}}),lh=Nn({cosineDistance_:function(e,t,n,r,a){void 0===a&&(a=eh.SUM_BY_NONZERO_WEIGHTS);var s=dn(e,"labels","cosineDistance"),i=dn(t,"predictions","cosineDistance"),o=null;null!=r&&(o=dn(r,"weights","cosineDistance")),S(s.shape,i.shape,"Error in cosineDistance: ");var u=Dn(1).sub(s.mul(i).sum(n,!0));return uh(u,o,a)}}),ch=Nn({hingeLoss_:function(e,t,n,r){void 0===r&&(r=eh.SUM_BY_NONZERO_WEIGHTS);var a=dn(e,"labels","hingeLoss"),s=dn(t,"predictions","hingeLoss"),i=null;null!=n&&(i=dn(n,"weights","hingeLoss")),S(a.shape,s.shape,"Error in hingeLoss: ");var o=Dn(1);a=Dn(2).mul(a).sub(o);var u=o.sub(a.mul(s)).relu();return uh(u,i,r)}}),hh=Nn({huberLoss_:function(e,t,n,r,a){void 0===r&&(r=1),void 0===a&&(a=eh.SUM_BY_NONZERO_WEIGHTS);var s=dn(e,"labels","huberLoss"),i=dn(t,"predictions","huberLoss"),o=null;null!=n&&(o=dn(n,"weights","huberLoss")),S(s.shape,i.shape,"Error in huberLoss: ");var u=Dn(r),l=i.sub(s).abs(),c=wa(l,u),h=l.sub(c),p=Dn(.5).mul(c.square()).add(u.mul(h));return uh(p,o,a)}}),ph=Nn({logLoss_:function(e,t,n,r,a){void 0===r&&(r=1e-7),void 0===a&&(a=eh.SUM_BY_NONZERO_WEIGHTS);var s=dn(e,"labels","logLoss"),i=dn(t,"predictions","logLoss"),o=null;null!=n&&(o=dn(n,"weights","logLoss")),S(s.shape,i.shape,"Error in logLoss: ");var u=Dn(1),l=Dn(r),c=s.mul(i.add(l).log()).neg().sub(u.sub(s).mul(u.sub(i).add(l).log()));return uh(c,o,a)}}),dh=Nn({meanSquaredError_:function(e,t,n,r){void 0===r&&(r=eh.SUM_BY_NONZERO_WEIGHTS);var a=dn(e,"labels","meanSquaredError"),s=dn(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=dn(n,"weights","meanSquaredError")),S(a.shape,s.shape,"Error in meanSquaredError: ");var o=a.squaredDifference(s);return uh(o,i,r)}}),fh=Nn({sigmoidCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=eh.SUM_BY_NONZERO_WEIGHTS);var s=dn(e,"multiClassLabels","sigmoidCrossEntropy"),i=dn(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=dn(n,"weights","sigmoidCrossEntropy")),S(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){var u=Dn(r),l=Dn(1),c=Dn(.5);s=s.mul(l.sub(u)).add(c.mul(u))}var h=function(e,t){var n=dn(e,"labels","sigmoidCrossEntropyWithLogits"),r=dn(t,"logits","sigmoidCrossEntropyWithLogits");S(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");var a=r.relu(),s=r.mul(n),i=r.abs().neg().exp().log1p();return a.sub(s).add(i)}(s,i);return uh(h,o,a)}}),mh=Nn({softmaxCrossEntropy_:function(e,t,n,r,a){void 0===r&&(r=0),void 0===a&&(a=eh.SUM_BY_NONZERO_WEIGHTS);var s=dn(e,"onehotLabels","softmaxCrossEntropy"),i=dn(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=dn(n,"weights","softmaxCrossEntropy")),S(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){var u=Dn(r),l=Dn(1),c=Dn(s.shape[1]);s=s.mul(l.sub(u)).add(u.div(c))}var h=function(e,t,n){if(void 0===n&&(n=-1),-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank "+t.rank+" and dim was "+n);return Qa((function(e,t,r){var a=t.logSumExp([n],!0),s=t.toFloat().sub(a);return r([e,s]),{value:s.mul(e).neg().sum([n]),gradFunc:function(e,t){var r=t[0],a=t[1],s=yn(e.shape,[n]);return[e.reshape(s).mul(r.toFloat().sub(a.exp())),e.reshape(s).mul(a.exp().sub(r.toFloat()))]}}}))(e,t)}(s,i);return uh(h,o,a)}}),gh=Object.freeze({get Reduction(){return eh},absoluteDifference:oh,computeWeightedLoss:uh,cosineDistance:lh,hingeLoss:ch,huberLoss:hh,logLoss:ph,meanSquaredError:dh,sigmoidCrossEntropy:fh,softmaxCrossEntropy:mh});function vh(e,t){return void 0===t&&(t=!1),Le.tidy((function(){if(2!==e.shape.length)throw new Error("qr2d() requires a 2D Tensor, but got a "+e.shape.length+"D Tensor.");for(var n=e.shape[0],r=e.shape[1],a=Zu(n),s=e.clone(),i=_n([[1]],[1,1]),o=i.clone(),u=n>=r?r:n,l=function(e){var t,u=s,l=o,c=a;t=Le.tidy((function(){var t=s.slice([e,e],[n-e,1]),u=t.norm(),l=s.slice([e,e],[1,1]),c=_n([[-1]]).where(l.greater(0),_n([[1]])),h=l.sub(c.mul(u)),p=t.div(h);o=1===p.shape[0]?i.clone():i.concat(p.slice([1,0],[p.shape[0]-1,p.shape[1]]),0);var d=c.matMul(h).div(u).neg(),f=s.slice([e,0],[n-e,r]),m=d.mul(o),g=o.transpose();if(0===e)s=f.sub(m.matMul(g.matMul(f)));else{var v=f.sub(m.matMul(g.matMul(f)));s=s.slice([0,0],[e,r]).concat(v,0)}var y=m.transpose(),b=a.slice([0,e],[n,a.shape[1]-e]);if(0===e)a=b.sub(b.matMul(o).matMul(y));else{var x=b.sub(b.matMul(o).matMul(y));a=a.slice([0,0],[n,e]).concat(x,1)}return[o,s,a]})),o=t[0],s=t[1],a=t[2],Jt([u,l,c])},c=0;c<u;++c)l(c);return!t&&n>r&&(a=a.slice([0,0],[n,r]),s=s.slice([0,0],[r,r])),[a,s]}))}var yh=Nn({bandPart_:function(e,t,n){if(t%1!=0)throw new Error("bandPart(): numLower must be an integer, got "+t+".");if(n%1!=0)throw new Error("bandPart(): numUpper must be an integer, got "+n+".");var r=dn(e,"a","bandPart");if(r.rank<2)throw new Error("bandPart(): Rank must be at least 2, got "+r.rank+".");var a=r.shape,s=r.shape.slice(-2),i=s[0],o=s[1];if(!(t<=i))throw new Error("bandPart(): numLower ("+t+") must not be greater than the number of rows ("+i+").");if(!(n<=o))throw new Error("bandPart(): numUpper ("+n+") must not be greater than the number of columns ("+o+").");t<0&&(t=i),n<0&&(n=o);var u=Un(0,i,1,"int32").reshape([-1,1]),l=Un(0,o,1,"int32"),c=Aa(u,l),h=Gu(c.lessEqual(Dn(+t,"int32")),c.greaterEqual(Dn(-n,"int32"))),p=zn([i,o],r.dtype);return ur(lr(r.reshape([-1,i,o])).map((function(e){return Ku(h,e,p)}))).reshape(a)}}),bh=Nn({gramSchmidt_:function(e){var t;if(Array.isArray(e)){t=!1,N(null!=e&&e.length>0,(function(){return"Gram-Schmidt process: input must not be null, undefined, or empty"}));for(var n=e[0].shape[0],r=function(t){N(e[t].shape[0]===n,(function(){return"Gram-Schmidt: Non-unique lengths found in the input vectors: ("+e[t].shape[0]+" vs. "+n+")"}))},a=1;a<e.length;++a)r(a)}else t=!0,e=Jn(e,e.shape[0],0).map((function(e){return or(e,[0])}));N(e.length<=e[0].shape[0],(function(){return"Gram-Schmidt: Number of vectors ("+e.length+") exceeds number of dimensions ("+e[0].shape[0]+")."}));var s=[],i=e,o=function(e){s.push(Le.tidy((function(){var t=i[e];if(e>0)for(var n=0;n<e;++n){var r=Tc(s[n].mulStrict(t)).mul(s[n]);t=t.sub(r)}return t.div(Lc(t,"euclidean"))})))};for(a=0;a<e.length;++a)o(a);return t?ur(s,0):s}}),xh=Nn({qr_:function(e,t){if(void 0===t&&(t=!1),e.rank<2)throw new Error("qr() requires input tensor to have a rank >= 2, but got rank "+e.rank);if(2===e.rank)return vh(e,t);var n=e.shape.slice(0,e.shape.length-2).reduce((function(e,t){return e*t})),r=lr(e.reshape([n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((function(e){var n=vh(e,t),r=n[0],i=n[1];a.push(r),s.push(i)})),[ur(a,0).reshape(e.shape),ur(s,0).reshape(e.shape)]}}),wh=Object.freeze({bandPart:yh,gramSchmidt:bh,qr:xh});function kh(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);var i=e.shape[0];return n=Math.min(n,i),N(0<=r&&r<=1,(function(){return"iouThreshold must be in [0, 1], but was '"+r+"'"})),N(2===e.rank,(function(){return"boxes must be a 2D tensor, but was of rank '"+e.rank+"'"})),N(4===e.shape[1],(function(){return"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]})),N(1===t.rank,(function(){return"scores must be a 1D tensor"})),N(t.shape[0]===i,(function(){return"scores has incompatible shape with boxes. Expected "+i+", but was "+t.shape[0]})),N(0<=s&&s<=1,(function(){return"softNmsSigma must be in [0, 1], but was '"+s+"'"})),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}var Ih=Nn({resizeBilinear_:function(e,t,n){void 0===n&&(n=!1);var r=dn(e,"images","resizeBilinear");N(3===r.rank||4===r.rank,(function(){return"Error in resizeBilinear: x must be rank 3 or 4, but got rank "+r.rank+"."})),N(2===t.length,(function(){return"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."}));var a=r,s=!1;3===r.rank&&(s=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=t[0],o=t[1],u=Le.runKernelFunc((function(e,t){return t([a]),e.resizeBilinear(a,i,o,n)}),{x:a},(function(e,t){return{x:function(){return Le.runKernelFunc((function(r){return r.resizeBilinearBackprop(e,t[0],n)}),{})}}}),"ResizeBilinear",{alignCorners:n,newHeight:i,newWidth:o});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ch=Nn({resizeNearestNeighbor_:function(e,t,n){void 0===n&&(n=!1);var r=dn(e,"images","resizeNearestNeighbor");N(3===r.rank||4===r.rank,(function(){return"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank "+r.rank+"."})),N(2===t.length,(function(){return"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."})),N("float32"===r.dtype||"int32"===r.dtype,(function(){return"`images` must have `int32` or `float32` as dtype"}));var a=r,s=!1;3===r.rank&&(s=!0,a=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=t[0],o=t[1],u=Le.runKernelFunc((function(e,t){return t([a]),e.resizeNearestNeighbor(a,i,o,n)}),{batchImages:a},(function(e,t){return{batchImages:function(){return Le.runKernelFunc((function(r){return r.resizeNearestNeighborBackprop(e,t[0],n)}),{})}}}));return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Nh=Nn({nonMaxSuppression_:function(e,t,n,r,a){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY);var s=dn(e,"boxes","nonMaxSuppression"),i=dn(t,"scores","nonMaxSuppression"),o=kh(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;var u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return Le.runKernelFunc((function(e){return e.nonMaxSuppression(s,i,n,r,a)}),{boxes:s,scores:i},null,"NonMaxSuppressionV3",u)}}),Sh=Nn({nonMaxSuppressionWithScore_:function(e,t,n,r,a,s){void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===s&&(s=0);var i=dn(e,"boxes","nonMaxSuppression"),o=dn(t,"scores","nonMaxSuppression"),u=kh(i,o,n,r,a,s),l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},c=Le.runKernel("NonMaxSuppressionV5",{boxes:i,scores:o},l);return{selectedIndices:c[0],selectedScores:c[1]}}}),Eh=Nn({cropAndResize_:function(e,t,n,r,a,s){var i=dn(e,"image","cropAndResize"),o=dn(t,"boxes","cropAndResize","float32"),u=dn(n,"boxInd","cropAndResize","int32");a=a||"bilinear",s=s||0;var l=o.shape[0];return N(4===i.rank,(function(){return"Error in cropAndResize: image must be rank 4,but got rank "+i.rank+"."})),N(2===o.rank&&4===o.shape[1],(function(){return"Error in cropAndResize: boxes must be have size ["+l+",4] but had shape "+o.shape+"."})),N(1===u.rank&&u.shape[0]===l,(function(){return"Error in cropAndResize: boxInd must be have size ["+l+"] but had shape "+o.shape+"."})),N(2===r.length,(function(){return"Error in cropAndResize: cropSize must be of length 2, but got length "+r.length+"."})),N(r[0]>=1&&r[1]>=1,(function(){return"cropSize must be atleast [1,1], but was "+r})),N("bilinear"===a||"nearest"===a,(function(){return"method must be bilinear or nearest, but was "+a})),Le.runKernelFunc((function(e,t){return e.cropAndResize(i,o,u,r,a,s)}),{images:i,boxes:o,boxInd:u},null,"CropAndResize",{method:a,extrapolationValue:s,cropSize:r})}}),Th=Object.freeze({resizeBilinear:Ih,resizeNearestNeighbor:Ch,nonMaxSuppression:Nh,nonMaxSuppressionAsync:function(e,t,n,r,a){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),s(this,void 0,void 0,(function(){var s,o,u,l,c,h,p;return i(this,(function(i){switch(i.label){case 0:return s=dn(e,"boxes","nonMaxSuppressionAsync"),o=dn(t,"scores","nonMaxSuppressionAsync"),u=kh(s,o,n,r,a),n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,[4,Promise.all([s.data(),o.data()])];case 1:return l=i.sent(),c=l[0],h=l[1],p=Rs(c,h,n,r,a),s!==e&&s.dispose(),o!==t&&o.dispose(),[2,p]}}))}))},nonMaxSuppressionWithScore:Sh,nonMaxSuppressionWithScoreAsync:function(e,t,n,r,a,o){return void 0===r&&(r=.5),void 0===a&&(a=Number.NEGATIVE_INFINITY),void 0===o&&(o=0),s(this,void 0,void 0,(function(){var s,u,l,c,h,p,d;return i(this,(function(i){switch(i.label){case 0:return s=dn(e,"boxes","nonMaxSuppressionAsync"),u=dn(t,"scores","nonMaxSuppressionAsync"),l=kh(s,u,n,r,a,o),n=l.maxOutputSize,r=l.iouThreshold,a=l.scoreThreshold,o=l.softNmsSigma,[4,Promise.all([s.data(),u.data()])];case 1:return c=i.sent(),h=c[0],p=c[1],d=As(h,p,n,r,a,o),s!==e&&s.dispose(),u!==t&&u.dispose(),[2,d]}}))}))},cropAndResize:Eh}),Rh=function(e,t){return!(e>0)||"linear"===t},Ah=function(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return e.mul(t.step());throw new Error("Gradient for activation "+n+" has not been implemented yet.")},Dh=function(e,t){var n=t,r=_r(e.shape,t.shape);return r.length>0&&(n=n.sum(r)),n.reshape(e.shape)},Fh=function(e,t,n){if("linear"===t)return e;if("relu"===t)return _c(e);if("elu"===t)return Ac(e);if("relu6"===t)return $c(e);if("prelu"===t)return Fc(e,n);throw new Error("Unknown fused activation "+t+".")},_h=Nn({fusedMatMul_:function(e){var t,n=e.a,r=e.b,a=e.transposeA,s=void 0!==a&&a,i=e.transposeB,o=void 0!==i&&i,u=e.bias,l=e.activation,c=void 0===l?"linear":l,h=e.preluActivationWeights;if(!1===Rh(Le.state.gradientDepth,c)){var p=Jl(n,r,s,o);return null!=u&&(p=Dr(p,u)),Fh(p,c,h)}var d=dn(n,"a","fused matMul"),f=dn(r,"b","fused matMul");t=Ae(d,f),d=t[0],f=t[1];var m=s?d.shape[d.rank-2]:d.shape[d.rank-1],g=o?f.shape[f.rank-1]:f.shape[f.rank-2],v=s?d.shape[d.rank-1]:d.shape[d.rank-2],y=o?f.shape[f.rank-2]:f.shape[f.rank-1],b=d.shape.slice(0,-2),x=f.shape.slice(0,-2),w=R(b),k=R(x);N(d.rank>=2&&f.rank>=2&&d.rank===f.rank,(function(){return"Error in fused matMul: inputs must have the same rank of at least 2, got ranks "+d.rank+" and "+f.rank+"."})),N(A(b,x),(function(){return"Error in fused matMul: outer dimensions ("+b+") and ("+x+") of Tensors with shapes "+d.shape+" and "+f.shape+" must match."})),N(m===g,(function(){return"Error in fused matMul: inner shapes ("+m+") and ("+g+") of Tensors with shapes "+d.shape+" and "+f.shape+" and transposeA="+s+" and transposeB="+o+" must match."}));var I,C,S=d.shape.slice(0,-2).concat([v,y]),E=s?d.as3D(w,m,v):d.as3D(w,v,m),T=o?f.as3D(k,y,g):f.as3D(k,g,y);null!=u&&$r(S,(I=Ae(I=dn(u,"bias","fused matMul"),d)[0]).shape),null!=h&&(C=dn(h,"prelu weights","fused matMul"));var D={a:E,b:T};null!=u&&(D.bias=I),null!=h&&(D.preluActivationWeights=C);var F=[E,T];return Le.runKernelFunc((function(e,t){var n=e.fusedBatchMatMul({a:E,b:T,transposeA:s,transposeB:o,bias:I,activation:c,preluActivationWeights:C});return t([E,T,n]),n}),D,(function(e,t){var n=t[0],r=t[1],a=t[2],i=Ah(e,a,c),l={};return null!=u&&(l={bias:function(){return Dh(I,i)}}),s||o?!s&&o?Object.assign({a:function(){return i.matMul(r,!1,!1)},b:function(){return i.matMul(n,!0,!1)}},l):s&&!o?Object.assign({a:function(){return r.matMul(i,!1,!0)},b:function(){return n.matMul(i,!1,!1)}},l):Object.assign({a:function(){return r.matMul(i,!0,!0)},b:function(){return i.matMul(n,!0,!0)}},l):Object.assign({a:function(){return i.matMul(r,!1,!0)},b:function(){return n.matMul(i,!0,!1)}},l)}),"_FusedMatMul",{transposeA:s,transposeB:o,activation:c},F,[!0]).reshape(S)}}),$h=Nn({fusedConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,s=e.dataFormat,i=void 0===s?"NHWC":s,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,p=void 0===h?"linear":h,d=e.preluActivationWeights;if(p=p||"linear",!1===Rh(Le.state.gradientDepth,p)){var f=Wl(t,n,r,a,i,u,l);return null!=c&&(f=Dr(f,c)),Fh(f,p,d)}var m=dn(t,"x","conv2d"),g=dn(n,"filter","conv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),N(4===v.rank,(function(){return"Error in fused conv2d: input must be rank 4, but got rank "+v.rank+"."})),N(4===g.rank,(function(){return"Error in fused conv2d: filter must be rank 4, but got rank "+g.rank+"."})),null!=l&&N(D(a),(function(){return"Error in fused conv2d: pad must be an integer when using, dimRoundingMode "+l+" but got pad "+a+"."})),N(v.shape[3]===g.shape[2],(function(){return"Error in conv2d: depth of input ("+v.shape[3]+") must match input depth for filter "+g.shape[2]+"."})),N(vs(r,u),(function(){return"Error in conv2D: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),N("NHWC"===i,(function(){return"Error in conv2d: got dataFormat of "+i+" but only NHWC is currently supported."}));var b,x,w=ls(v.shape,g.shape,r,u,a,l);null!=c&&(b=Ae(b=dn(c,"bias","fused conv2d"),m)[0],$r(w.outShape,b.shape)),null!=d&&(x=dn(d,"prelu weights","fused conv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=d&&(k.preluActivationWeights=x);var I=[g,v],C=Le.runKernelFunc((function(e,t){var n=e.fusedConv2d({input:v,filter:g,convInfo:w,bias:b,activation:p,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){var n=t,s=n[0],i=n[1],o=n[2],l=Ah(e,o,p);N(gs(u),(function(){return"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '"+u+"'"}));var h={};return null!=c&&(h={bias:function(){return Dh(b,l)}}),Object.assign({x:function(){return Gl(i.shape,l,s,r,a)},filter:function(){return Ul(i,l,s.shape,r,a)}},h)}),"FusedConv2D",{convInfo:w,activation:p},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Oh=Nn({fusedDepthwiseConv2d_:function(e){var t=e.x,n=e.filter,r=e.strides,a=e.pad,s=e.dataFormat,i=void 0===s?"NHWC":s,o=e.dilations,u=void 0===o?[1,1]:o,l=e.dimRoundingMode,c=e.bias,h=e.activation,p=void 0===h?"linear":h,d=e.preluActivationWeights;if(!1===Rh(Le.state.gradientDepth,p)){var f=Hl(t,n,r,a,i,u,l);return null!=c&&(f=Dr(f,c)),Fh(f,p,d)}var m=dn(t,"x","depthwiseConv2d"),g=dn(n,"filter","depthwiseConv2d"),v=m,y=!1;3===m.rank&&(y=!0,v=m.as4D(1,m.shape[0],m.shape[1],m.shape[2])),N(4===v.rank,(function(){return"Error in fused depthwiseConv2d: input must be rank 4, but got rank "+v.rank+"."})),N(4===g.rank,(function(){return"Error in fused depthwiseConv2d: filter must be rank 4, but got rank "+g.rank+"."})),N(v.shape[3]===g.shape[2],(function(){return"Error in fused depthwiseConv2d: number of input channels ("+v.shape[3]+") must match the inChannels dimension in filter "+g.shape[2]+"."})),null==u&&(u=[1,1]),N(vs(r,u),(function(){return"Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides "+r+" and dilations '"+u+"'"})),null!=l&&N(D(a),(function(){return"Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode "+l+" but got pad "+a+"."}));var b,x,w=ls(v.shape,g.shape,r,u,a,l,!0);null!=c&&(b=Ae(b=dn(c,"bias","fused conv2d"),m)[0],$r(w.outShape,b.shape)),null!=d&&(x=dn(d,"prelu weights","fused depthwiseConv2d"));var k={x:v,filter:g};null!=c&&(k.bias=b),null!=d&&(k.preluActivationWeights=x);var I=[g,v],C=Le.runKernelFunc((function(e,t){var n=e.fusedDepthwiseConv2D({input:v,filter:g,convInfo:w,bias:b,activation:p,preluActivationWeights:x});return t([g,v,n]),n}),k,(function(e,t){N(gs(u),(function(){return"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '"+u+"'"}));var n=t[0],r=t[1],a=t[2],s=Ah(e,a,p),i={};return null!=c&&(i={bias:function(){return Dh(b,s)}}),Object.assign({x:function(){return ql(r.shape,s,n,w)},filter:function(){return jl(r,s,n.shape,w)}},i)}),"FusedDepthwiseConv2D",{convInfo:w,activation:p},I,[!0]);return y?C.as3D(C.shape[1],C.shape[2],C.shape[3]):C}}),Mh=Object.freeze({matMul:_h,conv2d:$h,depthwiseConv2d:Oh}),Lh=Object.freeze({image:Th,linalg:wh,losses:gh,spectral:Kc,fused:Mh,signal:sh,add:Dr,addN:Su,batchNorm:Fu,batchNormalization:Du,batchNorm2d:Ou,batchNormalization2d:$u,batchNorm3d:Bu,batchNormalization3d:Lu,batchNorm4d:Wu,batchNormalization4d:zu,broadcastTo:Vu,clone:Uu,div:Fa,divNoNan:Yu,eye:Zu,multinomial:Qu,oneHot:el,pad:tl,pad1d:nl,pad2d:rl,pad3d:al,pad4d:sl,rand:il,randomGamma:fl,randomNormal:ml,randomUniform:gl,square:vl,squaredDifference:yl,tile:Ju,truncatedNormal:bl,conv1d:zl,conv2d:Wl,conv3d:Vl,depthwiseConv2d:Hl,separableConv2d:Kl,conv2dTranspose:Xl,conv3dTranspose:Yl,op:Nn,booleanMaskAsync:Ml,complex:Sn,real:En,imag:Tn,concat:qn,concat1d:jn,concat2d:Kn,concat3d:Xn,concat4d:Yn,split:Jn,matMul:Jl,dot:Zl,outerProduct:Ql,reverse:ec,reverse1d:tc,reverse2d:nc,reverse3d:rc,reverse4d:ac,maxPool:oc,avgPool:uc,pool:lc,maxPool3d:cc,avgPool3d:hc,maxPoolWithArgmax:pc,slice:dc,slice1d:fc,slice2d:mc,slice3d:gc,slice4d:vc,abs:Or,acos:Mr,acosh:Lr,asin:Br,asinh:Pr,atan:zr,atanh:Wr,ceil:Vr,clipByValue:Ur,cos:Gr,cosh:Hr,erf:qr,exp:jr,expm1:Kr,floor:Xr,log:Yr,log1p:Jr,logSigmoid:Zr,neg:Qr,reciprocal:ea,round:ta,rsqrt:na,sigmoid:ra,sign:aa,isNaN:sa,isInf:ia,isFinite:oa,sin:ua,sinh:la,softplus:ca,sqrt:ha,step:pa,tan:da,tanh:fa,all:bc,any:xc,argMax:wc,argMin:kc,logSumExp:Ic,max:Cc,mean:Nc,min:Sc,moments:Ec,sum:Tc,prod:Rc,equal:xl,equalStrict:wl,greater:kl,greaterEqual:Il,greaterEqualStrict:Cl,greaterStrict:Nl,less:Sl,lessEqual:El,lessEqualStrict:Tl,lessStrict:Rl,notEqual:Al,notEqualStrict:Dl,addStrict:ma,atan2:ga,divStrict:va,floorDiv:ya,maximum:ba,maximumStrict:xa,minimum:wa,minimumStrict:ka,mod:Ia,modStrict:Ca,mul:Na,mulStrict:Sa,pow:Ea,powStrict:Ta,squaredDifferenceStrict:Ra,sub:Aa,subStrict:Da,elu:Ac,leakyRelu:Dc,prelu:Fc,relu:_c,relu6:$c,selu:Oc,logicalAnd:Gu,logicalNot:Hu,logicalOr:qu,logicalXor:ju,where:Ku,whereAsync:Xu,buffer:Zn,print:Qn,batchToSpaceND:er,cast:tr,cumsum:nr,depthToSpace:rr,expandDims:ar,reshape:sr,spaceToBatchND:ir,squeeze:or,stack:ur,unstack:lr,setdiff1dAsync:cr,fill:Wn,linspace:Vn,ones:Pn,range:Un,scalar:Dn,tensor:Rn,tensor1d:Fn,tensor2d:_n,tensor3d:$n,tensor4d:On,tensor5d:Mn,tensor6d:Ln,variable:Bn,zeros:zn,onesLike:Gn,zerosLike:Hn,transpose:rs,softmax:ts,logSoftmax:ns,localResponseNormalization:Mc,norm:Lc,gather:$l,unsortedSegmentSum:Ol,basicLSTMCell:Bc,multiRNNCell:Pc,movingAverage:zc,stridedSlice:Wc,topk:Vc,scatterND:Uc,fft:Gc,ifft:Hc,rfft:qc,irfft:jc,sparseToDense:Xc,gatherND:Yc,diag:Jc,dropout:Zc,hannWindow:th,hammingWindow:nh,frame:rh,stft:ah,inTopKAsync:ih});function Bh(e,t){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&N("complex64"!==e.dtype,(function(){return t+" does not support complex64 tensors."}))}))}function Ph(e,t,n,r,a,s){for(var i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Zn(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3],x=0;x<a.batchSize;++x)for(var w=x*v,k=x*r[0],I=0;I<a.inChannels;++I)for(var C=0;C<a.outHeight;++C)for(var N=C*i-p,S=Math.max(0,N),E=Math.min(a.inHeight,c+N),T=w+C*y,R=0;R<a.outWidth;++R){for(var A=R*o-d,D=Math.max(0,A),F=Math.min(a.inWidth,h+A),_=f,$=0,O=0,M=S;M<E;M+=u){for(var L=k+M*r[1],B=D;B<F;B+=l){var P=e[L+B*r[2]+I];"max"===s&&P>_?_=P:"avg"===s&&($+=P,O++)}if(isNaN(_))break}g[T+R*b+I]="avg"===s?$/O:_}return m}function zh(e,t,n,r,a,s){void 0===a&&(a=!1),void 0===s&&(s=!1);for(var i=Zn(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Zn(t,n,e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.outHeight;++y){for(var b=y*o-d,x=b;x<0;)x+=l;for(var w=Math.min(r.inHeight,h+b),k=0;k<r.outWidth;++k){for(var I=k*u-f,C=I;C<0;)C+=c;for(var N=Math.min(r.inWidth,p+I),S=Number.NEGATIVE_INFINITY,E=-1,T=x;T<w;T+=l)for(var R=T-b,A=C;A<N;A+=c){var D=A-I,F=m.get(g,T,A,v);F>S&&(S=F,E=a?s?((g*r.inHeight+T)*r.inWidth+A)*r.inChannels+v:(T*r.inWidth+A)*r.inChannels+v:R*p+D)}i.set(E,g,y,k,v)}}return i}function Wh(e,t,n,r){if("linear"===n)return e.linear(t);if("relu"===n)return e.relu(t);if("elu"===n)return e.elu(t);if("relu6"===n)return e.relu6(t);if("prelu"===n)return e.prelu(t,r);throw new Error("Activation "+n+" has not been implemented for the CPU backend.")}var Vh=function(e){function t(){var t=e.call(this)||this;return t.blockSize=48,t.firstUse=!0,t.data=new as(t,Le),t}return a(t,e),t.prototype.write=function(e,t,n){this.firstUse&&(this.firstUse=!1,l().get("IS_NODE")&&cn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var r={};return this.data.set(r,{values:e,dtype:n}),r},t.prototype.move=function(e,t,n,r){this.data.set(e,{values:t,dtype:r})},t.prototype.numDataIds=function(){return this.data.numDataIds()},t.prototype.read=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.readSync(e)]}))}))},t.prototype.readSync=function(e){var t=this.data.get(e),n=t.dtype,r=t.complexTensors;return"complex64"===n?Is(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(e).values},t.prototype.bufferSync=function(e){var t=this.readSync(e.dataId),n=t;if("string"===e.dtype)try{n=t.map((function(e){return oe(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Zn(e.shape,e.dtype,n)},t.prototype.makeOutput=function(e,t,n){var r=this.write(e,t,n);return Le.makeTensorFromDataId(r,t,n,this)},t.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensors;null!=t&&(t.real.dispose(),t.imag.dispose()),this.data.delete(e)}},t.prototype.time=function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){return t=ae(),e(),[2,{kernelMs:ae()-t}]}))}))},t.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},t.prototype.complex=function(e,t){var n=this.makeOutput(null,e.shape,"complex64");return this.data.get(n.dataId).complexTensors={real:Le.keep(e.clone()),imag:Le.keep(t.clone())},n},t.prototype.real=function(e){return this.data.get(e.dataId).complexTensors.real.clone()},t.prototype.imag=function(e){return this.data.get(e.dataId).complexTensors.imag.clone()},t.prototype.slice=function(e,t,n){if(Bh(e,"slice"),Ha(e.shape,t,n)){var r=qa(t,e.strides),a=R(n);return Rn(this.readSync(e.dataId).subarray(r,r+a),n,e.dtype)}for(var s=Zn(n,e.dtype),i=this.bufferSync(e),o=0;o<s.size;++o){var u=s.indexToLoc(o).map((function(e,n){return e+t[n]}));s.values[o]=i.get.apply(i,u)}return s.toTensor()},t.prototype.stridedSlice=function(e,t,n,r){Bh(e,"stridedSlice");var a=Va(t,n,r);if(a.some((function(e){return 0===e})))return Rn([],a);for(var s=Zn(a,e.dtype),i=this.bufferSync(e),o=0;o<s.size;o++){for(var u=s.indexToLoc(o),l=new Array(u.length),c=0;c<l.length;c++)l[c]=u[c]*r[c]+t[c];s.set.apply(s,[i.get.apply(i,l)].concat(u))}return s.toTensor()},t.prototype.diag=function(e){for(var t=this.readSync(e.dataId),n=Zn([e.size,e.size],e.dtype),r=n.values,a=0;a<t.length;a++)r[a*e.size+a]=t[a];return n.toTensor()},t.prototype.unstack=function(e,t){for(var n=e.shape[t],r=new Array(e.rank-1),a=0,s=0;s<e.rank;s++)s!==t&&(r[a++]=e.shape[s]);var i=new Array(e.rank).fill(0),o=e.shape.slice();o[t]=1;var u=new Array(n);for(s=0;s<u.length;s++)i[t]=s,u[s]=this.slice(e,i,o).reshape(r);return u},t.prototype.reverse=function(e,t){Bh(e,"reverse");for(var n=Zn(e.shape,e.dtype),r=this.bufferSync(e),a=function(a){var s=n.indexToLoc(a),i=s.slice();t.forEach((function(t){return i[t]=e.shape[t]-1-i[t]})),n.set.apply(n,[r.get.apply(r,i)].concat(s))},s=0;s<n.size;s++)a(s);return n.toTensor()},t.prototype.concat=function(e,t){var n=this;if("complex64"===e[0].dtype){var r=e.map((function(e){return En(e)})),a=e.map((function(e){return Tn(e)}));return Sn(this.concat(r,t),this.concat(a,t))}var s=e.map((function(e){var n=R(e.shape.slice(t));return e.as2D(-1,n)})),i=Cn(s.map((function(e){return e.shape})),1),o=Zn(i,e[0].dtype).values;if(1===s[0].shape[0]){var u=0;s.forEach((function(e){o.set(n.readSync(e.dataId),u),u+=e.size}))}else{var l=0;s.forEach((function(e){for(var t=n.readSync(e.dataId),r=0,a=0;a<e.shape[0];++a)for(var s=a*i[1]+l,u=0;u<e.shape[1];++u)o[s+u]=t[r++];l+=e.shape[1]}))}var c=Cn(e.map((function(e){return e.shape})),t);return Rn(o,c,e[0].dtype)},t.prototype.neg=function(e){return Bh(e,"neg"),this.multiply(Dn(-1),e)},t.prototype.add=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e+n,imag:t+r}})):this.broadcastedBinaryOp(e,t,Te(e.dtype,t.dtype),(function(e,t){return e+t}))},t.prototype.addN=function(e){var t=this;Bh(e,"addN");for(var n=e.map((function(e){return t.readSync(e.dataId)})),r=Zn(e[0].shape,e[0].dtype),a=r.values,s=0;s<e.length;s++)for(var i=n[s],o=0;o<a.length;o++)a[o]+=i[o];return r.toTensor()},t.prototype.softmax=function(e,t){var n=L([t],e.shape),r=this.max(e,n),a=yn(r.shape,n),s=this.subtract(e,r.reshape(a)),i=this.exp(s),o=this.sum(i,n).reshape(a);return Fa(i,o)},t.prototype.subtract=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e-n,imag:t-r}})):this.broadcastedBinaryOp(e,t,Te(e.dtype,t.dtype),(function(e,t){return e-t}))},t.prototype.pow=function(e,t){return Bh([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.pow(e,t)}))},t.prototype.batchMatMul=function(e,t,n,r){Bh([e,t],"matMul");for(var a=n?e.shape[1]:e.shape[2],s=n?e.shape[2]:e.shape[1],i=r?t.shape[1]:t.shape[2],o=e.shape[0],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=n?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],h=c[0],p=c[1],d=c[2],f=r?[1,t.strides[1],t.strides[0]]:[t.strides[1],1,t.strides[0]],m=f[0],g=f[1],v=f[2],y=s*i,b=Zn([o,s,i],e.dtype),x=b.values,w=this.blockSize,k=0;k<o;k++)for(var I=0;I<s;I+=w)for(var C=0;C<i;C+=w)for(var N=0;N<a;N+=w)for(var S=Math.min(I+w,s),E=Math.min(C+w,i),T=Math.min(N+w,a),R=I;R<S;R++)for(var A=C;A<E;A++){for(var D=0,F=N;F<T;F++)D+=u[k*h+R*p+F*d]*l[F*m+A*g+k*v];x[k*y+(R*i+A)]+=D}return b.toTensor()},t.prototype.fusedBatchMatMul=function(e){var t=e.a,n=e.b,r=e.transposeA,a=e.transposeB,s=e.bias,i=e.activation,o=e.preluActivationWeights,u=this.batchMatMul(t,n,r,a);return s&&(u=this.add(u,s)),i&&(u=Wh(this,u,i,o)),u},t.prototype.multiply=function(e,t){return"complex64"===e.dtype||"complex64"===t.dtype?this.broadcastedBinaryComplexOp(e.cast("complex64"),t.cast("complex64"),(function(e,t,n,r){return{real:e*n-t*r,imag:e*r+t*n}})):this.broadcastedBinaryOp(e,t,Te(e.dtype,t.dtype),(function(e,t){return e*t}))},t.prototype.floorDiv=function(e,t){return Bh([e,t],"floorDiv"),this.broadcastedBinaryOp(e,t,"int32",(function(e,t){return Math.floor(e/t)}))},t.prototype.sum=function(e,t){Bh(e,"sum"),bn("sum",t,e.rank);for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,Te(e.dtype,"int32")),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=0,p=0;p<i;++p)h+=u[c+p];o[l]=h}return s},t.prototype.prod=function(e,t){Bh(e,"sum");for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,Te(e.dtype,"int32")),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=1,p=0;p<i;++p)h*=u[c+p];o[l]=h}return s},t.prototype.unsortedSegmentSum=function(e,t,n){Bh(e,"unsortedSegmentSum");for(var r=[],a=e.rank-t.rank,s=0;s<a;++s)t=t.expandDims(s+1);for(s=0;s<n;++s){var i=Dn(s,"int32"),o=xl(i,t).asType("float32").mul(e).sum(0);r.push(o)}return ur(r)},t.prototype.argMin=function(e,t){Bh(e,"argMin");var n=[t];bn("argMin",n,e.rank);for(var r=vn(e.shape,n),a=r[0],s=r[1],i=zn(a,"int32"),o=R(s),u=this.readSync(i.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,p=l[h],d=0,f=0;f<o;++f){var m=l[h+f];m<p&&(p=m,d=f)}u[c]=d}return i},t.prototype.argMax=function(e,t){Bh(e,"argMax");var n=[t];bn("argMax",n,e.rank);for(var r=vn(e.shape,n),a=r[0],s=r[1],i=zn(a,"int32"),o=R(s),u=this.readSync(i.dataId),l=this.readSync(e.dataId),c=0;c<u.length;++c){for(var h=c*o,p=l[h],d=0,f=0;f<o;++f){var m=l[h+f];m>p&&(p=m,d=f)}u[c]=d}return i},t.prototype.cumsum=function(e,t,n,r){if(Bh(e,"cumsum"),t!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+t);for(var a=Te(e.dtype,"int32"),s=zn(e.shape,a),i=this.readSync(s.dataId),o=this.readSync(e.dataId),u=e.shape[e.rank-1],l=r?function(e,t){return e+u-t-1}:function(e,t){return e+t},c=0;c<o.length;c+=u)for(var h=0;h<u;h++){var p=l(c,h);if(0===h)i[p]=n?0:o[p];else{var d=l(c,h-1);i[p]=n?o[d]+i[d]:o[p]+i[d]}}return s},t.prototype.equal=function(e,t){return Bh([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e===t?1:0}))},t.prototype.notEqual=function(e,t){return Bh([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e!==t?1:0}))},t.prototype.less=function(e,t){return Bh([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<t?1:0}))},t.prototype.lessEqual=function(e,t){return Bh([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<=t?1:0}))},t.prototype.greater=function(e,t){return Bh([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>t?1:0}))},t.prototype.greaterEqual=function(e,t){return Bh([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>=t?1:0}))},t.prototype.logicalNot=function(e){Bh(e,"logicalNot");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t[r]?0:1;return this.makeOutput(n,e.shape,"bool")},t.prototype.logicalAnd=function(e,t){return Bh([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e&&t}))},t.prototype.logicalOr=function(e,t){return Bh([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e||t}))},t.prototype.select=function(e,t,n){Bh([e,t,n],"select");for(var r=this.readSync(e.dataId),a=this.readSync(t.dataId),s=this.readSync(n.dataId),i=zn(t.shape,Te(t.dtype,n.dtype)),o=this.readSync(i.dataId),u=0,l=0===e.rank||e.rank>1||1===t.rank?1:R(t.shape.slice(1)),c=0;c<r.length;c++)for(var h=0;h<l;h++)1===r[c]?o[u++]=a[c]:o[u++]=s[c];return i},t.prototype.where=function(e){Bh([e],"where");var t=this.readSync(e.dataId);return Bs(e.shape,t)},t.prototype.topk=function(e,t,n){return Bh(e,"topk"),Ls(this.readSync(e.dataId),e.shape,e.dtype,t)},t.prototype.min=function(e,t){Bh(e,"min"),bn("min",t,e.rank);for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,e.dtype),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var d=u[c+p];d<h&&(h=d)}o[l]=h}return s},t.prototype.minimum=function(e,t){return Bh([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.min(e,t)}))},t.prototype.mod=function(e,t){return Bh([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}))},t.prototype.max=function(e,t){Bh(e,"max"),bn("max",t,e.rank);for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,e.dtype),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var d=u[c+p];d>h&&(h=d)}o[l]=h}return s},t.prototype.maximum=function(e,t){return Bh([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.max(e,t)}))},t.prototype.all=function(e,t){Bh(e,"all"),bn("all",t,e.rank);for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,e.dtype),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var d=u[c+p];h=h&&d}o[l]=h}return s},t.prototype.any=function(e,t){Bh(e,"any"),bn("any",t,e.rank);for(var n=vn(e.shape,t),r=n[0],a=n[1],s=zn(r,e.dtype),i=R(a),o=this.readSync(s.dataId),u=this.readSync(e.dataId),l=0;l<o.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var d=u[c+p];h=h||d}o[l]=h}return s},t.prototype.squaredDifference=function(e,t){return Bh([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var n=e-t;return n*n}))},t.prototype.ceil=function(e){Bh(e,"ceil");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.ceil(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.floor=function(e){Bh(e,"floor");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.floor(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.sign=function(e){Bh(e,"x");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)t[r]<0?n[r]=-1:t[r]>0?n[r]=1:n[r]=0;return this.makeOutput(n,e.shape,"float32")},t.prototype.isNaN=function(e){Bh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isNaN(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isInf=function(e){Bh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Math.abs(t[r])===1/0&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.isFinite=function(e){Bh(e,"x");for(var t=this.readSync(e.dataId),n=new Uint8Array(t.length),r=0;r<t.length;++r)Number.isFinite(t[r])&&(n[r]=1);return this.makeOutput(n,e.shape,"bool")},t.prototype.round=function(e){Bh(e,"round");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=Math.floor(t[r]);t[r]-a<.5?n[r]=Math.floor(t[r]):t[r]-a>.5?n[r]=Math.ceil(t[r]):n[r]=a%2==0?a:a+1}return this.makeOutput(n,e.shape,"float32")},t.prototype.exp=function(e){Bh(e,"exp");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.exp(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.expm1=function(e){Bh(e,"expm1");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=Math.expm1(t[r]);return this.makeOutput(n,e.shape,"float32")},t.prototype.log=function(e){Bh(e,"log");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.log1p=function(e){Bh(e,"log1p");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.log1p(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.sqrt=function(e){Bh(e,"sqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.rsqrt=function(e){Bh(e,"rsqrt");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r){var a=t[r];n[r]=1/Math.sqrt(a)}return this.makeOutput(n,e.shape,"float32")},t.prototype.reciprocal=function(e){Bh(e,"reciprocal");for(var t=this.readSync(e.dataId),n=new Float32Array(t.length),r=0;r<t.length;++r)n[r]=1/t[r];return this.makeOutput(n,e.shape,"float32")},t.prototype.linear=function(e){return e},t.prototype.relu=function(e){Bh(e,"relu");for(var t=zn(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.max(0,r[a]);return t},t.prototype.relu6=function(e){Bh(e,"relu");for(var t=zn(e.shape,e.dtype),n=this.readSync(t.dataId),r=this.readSync(e.dataId),a=0;a<r.length;++a)n[a]=Math.min(Math.max(0,r[a]),6);return t},t.prototype.prelu=function(e,t){return Bh([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return e<0?t*e:e}))},t.prototype.elu=function(e){Bh(e,"elu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?a:Math.exp(a)-1}return this.makeOutput(t,e.shape,"float32")},t.prototype.eluDer=function(e,t){Bh([e,t],"eluDer");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),a=this.readSync(e.dataId),s=0;s<r.length;++s){var i=r[s];n[s]=i>=1?a[s]:a[s]*(i+1)}return this.makeOutput(n,t.shape,"float32")},t.prototype.selu=function(e){Bh(e,"selu");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=n[r];t[r]=a>=0?1.0507009873554805*a:1.7580993408473768*(Math.exp(a)-1)}return this.makeOutput(t,e.shape,"float32")},t.prototype.clip=function(e,t,n){Bh(e,"clip");for(var r=new Float32Array(e.size),a=this.readSync(e.dataId),s=0;s<a.length;++s){var i=a[s];r[s]=i>n?n:i<t?t:i}return this.makeOutput(r,e.shape,"float32")},t.prototype.abs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.abs(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.complexAbs=function(e){for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<e.size;++r){var a=n[2*r],s=n[2*r+1];t[r]=Math.hypot(a,s)}return this.makeOutput(t,e.shape,"float32")},t.prototype.int=function(e){Bh(e,"int");for(var t=new Int32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=n[r];return this.makeOutput(t,e.shape,"int32")},t.prototype.sigmoid=function(e){Bh(e,"sigmoid");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=1/(1+Math.exp(-n[r]));return this.makeOutput(t,e.shape,"float32")},t.prototype.softplus=function(e){Bh(e,"softplus");for(var t=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var s,i=r[a]>-t,o=r[a]<t,u=Math.exp(r[a]);s=o?u:i?r[a]:Math.log(1+u),n[a]=s}return this.makeOutput(n,e.shape,"float32")},t.prototype.sin=function(e){Bh(e,"sin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cos=function(e){Bh(e,"cos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tan=function(e){Bh(e,"tan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.tan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asin=function(e){Bh(e,"asin");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asin(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acos=function(e){Bh(e,"acos");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acos(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan=function(e){Bh(e,"atan");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atan(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atan2=function(e,t){return Bh([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.atan2(e,t)}))},t.prototype.sinh=function(e){Bh(e,"sinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.sinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.cosh=function(e){Bh(e,"cosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.cosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.tanh=function(e){Bh(e,"tanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=F(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.asinh=function(e){Bh(e,"asinh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.asinh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.acosh=function(e){Bh(e,"acosh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.acosh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.atanh=function(e){Bh(e,"atanh");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r)t[r]=Math.atanh(n[r]);return this.makeOutput(t,e.shape,"float32")},t.prototype.erf=function(e){Bh(e,"erf");for(var t=new Float32Array(e.size),n=this.readSync(e.dataId),r=0;r<n.length;++r){var a=Math.sign(n[r]),s=Math.abs(n[r]),i=1/(1+.3275911*s);t[r]=a*(1-((((1.061405429*i-1.453152027)*i+1.421413741)*i-.284496736)*i+.254829592)*i*Math.exp(-s*s))}return this.makeOutput(t,e.shape,"float32")},t.prototype.step=function(e,t){void 0===t&&(t=0),Bh(e,"step");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),a=0;a<r.length;++a){var s=r[a];isNaN(s)?n[a]=NaN:n[a]=s>0?1:t}return this.makeOutput(n,e.shape,"float32")},t.prototype.fusedConv2d=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,s=e.activation,i=e.preluActivationWeights,o=this.conv2d(t,n,r);return a&&(o=this.add(o,a)),s&&(o=Wh(this,o,s,i)),o},t.prototype.conv2d=function(e,t,n){Bh([e,t],"conv2d");for(var r=n.filterHeight,a=n.filterWidth,s=n.dilationHeight,i=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l="channelsLast"===n.dataFormat,c=Zn(n.outShape,e.dtype),h=e.strides[0],p=l?e.strides[1]:e.strides[2],d=l?e.strides[2]:1,f=l?1:e.strides[1],m=c.strides[0],g=l?c.strides[1]:c.strides[2],v=l?c.strides[2]:1,y=l?1:c.strides[1],b=this.readSync(e.dataId),x=this.readSync(t.dataId),w=c.values,k=0;k<n.batchSize;++k)for(var I=k*h,C=k*m,N=0;N<n.outHeight;++N)for(var S=C+N*g,E=N*n.strideHeight-u,T=0;T<r;T++){var R=E+T*s;if(!(R<0||R>=n.inHeight))for(var A=T*t.strides[0],D=I+R*p,F=0;F<n.outWidth;++F)for(var _=S+F*v,$=F*n.strideWidth-o,O=0;O<a;O++){var M=$+O*i;if(!(M<0||M>=n.inWidth))for(var L=D+M*d,B=A+O*t.strides[1],P=0;P<n.inChannels;++P){for(var z=b[L+P*f],W=0;W<n.outChannels;++W)w[_+W*y]+=z*x[B+W];B+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(e,t,n){for(var r=n.filterDepth,a=n.filterHeight,s=n.filterWidth,i=n.dilationDepth,o=n.dilationHeight,u=n.dilationWidth,l=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,p=Zn(n.outShape,e.dtype),d=this.readSync(e.dataId),f=this.readSync(t.dataId),m=p.values,g=0;g<n.batchSize;++g)for(var v=g*e.strides[0],y=g*p.strides[0],b=0;b<n.outDepth;++b)for(var x=y+b*p.strides[1],w=b*n.strideDepth-l,k=0;k<r;k++){var I=w+k*i;if(!(I<0||I>=n.inDepth))for(var C=k*t.strides[0],N=v+I*e.strides[1],S=0;S<n.outHeight;++S)for(var E=x+S*p.strides[2],T=S*n.strideHeight-h,R=0;R<a;R++){var A=T+R*o;if(!(A<0||A>=n.inHeight))for(var D=C+R*t.strides[1],F=N+A*e.strides[2],_=0;_<n.outWidth;++_)for(var $=E+_*n.outChannels,O=_*n.strideWidth-c,M=0;M<s;M++){var L=O+M*u;if(!(L<0||L>=n.inWidth))for(var B=D+M*t.strides[2],P=F+L*n.inChannels,z=B,W=0;W<n.inChannels;++W){for(var V=d[P+W],U=0;U<n.outChannels;++U)m[$+U]+=V*f[z+U];z+=n.outChannels}}}}return p.toTensor()},t.prototype.conv2dDerInput=function(e,t,n){Bh([e,t],"conv2dDerInput");for(var r=Zn(n.inShape,"float32"),a=r.values,s=this.readSync(e.dataId),i=this.readSync(t.dataId),o=t.strides,u=o[0],l=o[1],c=o[2],h=n.batchSize,p=n.filterHeight,d=n.filterWidth,f=n.inChannels,m=n.inHeight,g=n.inWidth,v=n.outChannels,y=n.outHeight,b=n.outWidth,x=n.strideHeight,w=n.strideWidth,k=n.dataFormat,I=p-1-n.padInfo.top,C=d-1-n.padInfo.left,N="channelsLast"===k,S=r.strides[0],E=N?r.strides[1]:r.strides[2],T=N?r.strides[2]:1,R=N?1:r.strides[1],A=e.strides[0],D=N?e.strides[1]:e.strides[2],F=N?e.strides[2]:1,_=N?1:e.strides[1],$=0;$<h;++$)for(var O=0;O<f;++O)for(var M=0;M<m;++M)for(var L=M-I,B=Math.max(0,Math.ceil(L/x)),P=Math.min(y,(p+L)/x),z=0;z<g;++z){for(var W=z-C,V=Math.max(0,Math.ceil(W/w)),U=Math.min(b,(d+W)/w),G=0,H=B;H<P;++H)for(var q=H*x-L,j=V;j<U;++j)for(var K=A*$+D*H+F*j,X=u*(p-1-q)+l*(d-1-(j*w-W))+c*O,Y=0;Y<v;++Y)G+=s[K+_*Y]*i[X+Y];a[S*$+E*M+T*z+R*O]=G}return r.toTensor()},t.prototype.conv3dDerInput=function(e,t,n){for(var r=Zn(n.inShape,"float32"),a=r.values,s=r.strides,i=s[0],o=s[1],u=s[2],l=s[3],c=this.readSync(e.dataId),h=e.strides,p=h[0],d=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=n.batchSize,I=n.filterDepth,C=n.filterHeight,N=n.filterWidth,S=n.inChannels,E=n.inDepth,T=n.inHeight,R=n.inWidth,A=n.outChannels,D=n.outDepth,F=n.outHeight,_=n.outWidth,$=n.strideDepth,O=n.strideHeight,M=n.strideWidth,L=I-1-n.padInfo.front,B=C-1-n.padInfo.top,P=N-1-n.padInfo.left,z=0;z<k;++z)for(var W=0;W<S;++W)for(var V=0;V<E;++V)for(var U=V-L,G=Math.max(0,Math.ceil(U/$)),H=Math.min(D,(I+U)/$),q=0;q<T;++q)for(var j=q-B,K=Math.max(0,Math.ceil(j/O)),X=Math.min(F,(C+j)/O),Y=0;Y<R;++Y){for(var J=Y-P,Z=Math.max(0,Math.ceil(J/M)),Q=Math.min(_,(N+J)/M),ee=0,te=G;te<H;++te)for(var ne=te*$-U,re=K;re<X;++re)for(var ae=re*O-j,se=Z;se<Q;++se)for(var ie=p*z+d*te+f*re+m*se,oe=y*(I-1-ne)+b*(C-1-ae)+x*(N-1-(se*M-J))+w*W,ue=0;ue<A;++ue)ee+=c[ie+ue]*g[oe+ue];a[i*z+o*V+u*q+l*Y+W]=ee}return r.toTensor()},t.prototype.conv2dDerFilter=function(e,t,n){Bh([e,t],"conv2dDerFilter");for(var r=n.strideHeight,a=n.strideWidth,s=n.filterHeight,i=n.filterWidth,o="channelsLast"===n.dataFormat,u=Zn(n.filterShape,"float32"),l=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(e),p=this.bufferSync(t),d=0;d<s;++d)for(var f=Math.max(0,Math.ceil((c-d)/r)),m=Math.min(n.outHeight,(n.inHeight+c-d)/r),g=0;g<i;++g)for(var v=Math.max(0,Math.ceil((l-g)/a)),y=Math.min(n.outWidth,(n.inWidth+l-g)/a),b=0;b<n.inChannels;++b)for(var x=0;x<n.outChannels;++x){for(var w=0,k=0;k<n.batchSize;++k)for(var I=f;I<m;++I)for(var C=d+I*r-c,N=v;N<y;++N){var S=g+N*a-l;w+=o?h.get(k,C,S,b)*p.get(k,I,N,x):h.get(k,b,C,S)*p.get(k,x,I,N)}u.set(w,d,g,b,x)}return u.toTensor()},t.prototype.conv3dDerFilter=function(e,t,n){for(var r=n.strideDepth,a=n.strideHeight,s=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=Zn(n.filterShape,"float32"),c=l.values,h=l.strides,p=h[0],d=h[1],f=h[2],m=h[3],g=this.readSync(t.dataId),v=t.strides,y=v[0],b=v[1],x=v[2],w=v[3],k=this.readSync(e.dataId),I=e.strides,C=I[0],N=I[1],S=I[2],E=I[3],T=n.padInfo.front,R=n.padInfo.left,A=n.padInfo.top,D=0;D<i;++D)for(var F=Math.max(0,Math.ceil((T-D)/r)),_=Math.min(n.outDepth,(n.inDepth+T-D)/r),$=D*p,O=0;O<o;++O)for(var M=Math.max(0,Math.ceil((A-O)/a)),L=Math.min(n.outHeight,(n.inHeight+A-O)/a),B=O*d+$,P=0;P<u;++P)for(var z=Math.max(0,Math.ceil((R-P)/s)),W=Math.min(n.outWidth,(n.inWidth+R-P)/s),V=P*f+B,U=0;U<n.inChannels;++U)for(var G=U*m+V,H=0;H<n.outChannels;++H){for(var q=0,j=0;j<n.batchSize;++j)for(var K=j*C,X=j*y,Y=F;Y<_;++Y)for(var J=(D+Y*r-T)*N+K,Z=Y*b+X,Q=M;Q<L;++Q)for(var ee=(O+Q*a-A)*S+J,te=Q*x+Z,ne=z;ne<W;++ne){var re=ne*w+te;q+=k[(P+ne*s-R)*E+ee+U]*g[re+H]}c[G+H]=q}return l.toTensor()},t.prototype.fusedDepthwiseConv2D=function(e){var t=e.input,n=e.filter,r=e.convInfo,a=e.bias,s=e.activation,i=e.preluActivationWeights,o=this.depthwiseConv2D(t,n,r);return a&&(o=this.add(o,a)),s&&(o=Wh(this,o,s,i)),o},t.prototype.depthwiseConv2D=function(e,t,n){Bh([e,t],"depthwiseConv2D");for(var r=n.filterHeight,a=n.filterWidth,s=n.dilationHeight,i=n.dilationWidth,o=n.padInfo.left,u=n.padInfo.top,l=n.outChannels/n.inChannels,c=Zn(n.outShape,e.dtype),h=this.readSync(e.dataId),p=this.readSync(t.dataId),d=c.values,f=0;f<n.batchSize;++f)for(var m=f*e.strides[0],g=f*c.strides[0],v=0;v<n.outHeight;++v)for(var y=g+v*c.strides[1],b=v*n.strideHeight-o,x=0;x<r;++x){var w=b+x*s;if(!(w<0||w>=n.inHeight))for(var k=x*t.strides[0],I=m+w*e.strides[1],C=0;C<n.outWidth;++C)for(var N=y+C*c.strides[2],S=C*n.strideWidth-u,E=0;E<a;++E){var T=S+E*i;if(!(T<0||T>=n.inWidth))for(var R=k+E*t.strides[1],A=I+T*n.inChannels,D=N,F=R,_=0;_<n.inChannels;++_){for(var $=h[A+_],O=0;O<l;++O)d[D+O]+=$*p[F+O];D+=l,F+=l}}}return c.toTensor()},t.prototype.depthwiseConv2DDerInput=function(e,t,n){Bh([e,t],"depthwiseConv2DDerInput");for(var r=Zn(n.inShape,"float32"),a=r.values,s=r.strides,i=s[0],o=s[1],u=s[2],l=this.readSync(e.dataId),c=e.strides,h=c[0],p=c[1],d=c[2],f=this.readSync(t.dataId),m=t.strides,g=m[0],v=m[1],y=m[2],b=n.batchSize,x=n.filterHeight,w=n.filterWidth,k=n.inChannels,I=n.inHeight,C=n.inWidth,N=n.outChannels,S=n.outHeight,E=n.outWidth,T=n.strideHeight,R=n.strideWidth,A=x-1-n.padInfo.top,D=w-1-n.padInfo.left,F=N/k,_=0;_<b;++_)for(var $=0;$<k;++$)for(var O=0;O<I;++O)for(var M=O-A,L=Math.max(0,Math.ceil(M/T)),B=Math.min(S,(x+M)/T),P=0;P<C;++P){for(var z=P-D,W=Math.max(0,Math.ceil(z/R)),V=Math.min(E,(w+z)/R),U=0,G=L;G<B;++G)for(var H=G*T-M,q=W;q<V;++q)for(var j=h*_+p*G+d*q,K=g*(x-1-H)+v*(w-1-(q*R-z))+y*$,X=0;X<F;++X)U+=l[j+($*F+X)]*f[K+X];a[i*_+o*O+u*P+$]=U}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(e,t,n){Bh([e,t],"depthwiseConv2DDerFilter");for(var r=n.strideHeight,a=n.strideWidth,s=n.filterHeight,i=n.filterWidth,o=Zn(n.filterShape,"float32"),u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(e),p=this.bufferSync(t),d=0;d<s;++d)for(var f=Math.max(0,Math.ceil((l-d)/r)),m=Math.min(n.outHeight,(n.inHeight+l-d)/r),g=0;g<i;++g)for(var v=Math.max(0,Math.ceil((u-g)/a)),y=Math.min(n.outWidth,(n.inWidth+u-g)/a),b=0;b<n.outChannels;++b){for(var x=Math.trunc(b/c),w=b%c,k=0,I=0;I<n.batchSize;++I)for(var C=f;C<m;++C)for(var N=d+C*r-l,S=v;S<y;++S){var E=g+S*a-u;k+=h.get(I,N,E,x)*p.get(I,C,S,b)}o.set(k,d,g,x,w)}return o.toTensor()},t.prototype.tile=function(e,t){return Bh(e,"tile"),Ms(this.bufferSync(e),t)},t.prototype.pad=function(e,t,n){Bh(e,"pad");var r=t.map((function(t,n){return t[0]+e.shape[n]+t[1]})),a=t.map((function(e){return e[0]})),s=this.bufferSync(e),i=Zn(r,e.dtype);0!==n&&i.values.fill(n);for(var o=0;o<e.size;o++){var u=s.indexToLoc(o),l=u.map((function(e,t){return e+a[t]}));i.set.apply(i,[s.get.apply(s,u)].concat(l))}return i.toTensor()},t.prototype.gather=function(e,t,n){Bh([e,t],"gather");var r=e.shape.slice(),a=this.readSync(t.dataId);r[n]=a.length;for(var s=Zn(r,e.dtype),i=this.bufferSync(e),o=0;o<s.size;++o){var u=s.indexToLoc(o),l=u.slice();l[n]=a[u[n]];var c=i.locToIndex(l);s.values[o]=i.values[c]}return s.toTensor()},t.prototype.batchToSpaceND=function(e,t,n){Bh([e],"batchToSpaceND");var r=t.reduce((function(e,t){return e*t})),a=hr(e.shape,t,r),s=pr(a.length,t.length),i=dr(e.shape,t,r),o=fr(n,t.length),u=mr(i,n,t.length);return rs(e.reshape(a),s).reshape(i).slice(o,u)},t.prototype.spaceToBatchND=function(e,t,n){Bh([e],"spaceToBatchND");var r=t.reduce((function(e,t){return e*t})),a=[[0,0]];a.push.apply(a,n);for(var s=1+t.length;s<e.shape.length;++s)a.push([0,0]);var i=e.pad(a),o=hr(i.shape,t,r,!1),u=pr(o.length,t.length,!1),l=dr(i.shape,t,r,!1);return rs(i.reshape(o),u).reshape(l)},t.prototype.maxPool=function(e,t){return Bh(e,"maxPool"),Ph(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"max").toTensor()},t.prototype.maxPoolBackprop=function(e,t,n,r){Bh([t,n],"maxPoolBackprop");for(var a=this.readSync(t.dataId),s=Zn(r.outShape,t.dtype,zh(a,t.shape,t.dtype,r).values),i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=h-1-r.padInfo.left,d=c-1-r.padInfo.top,f=Zn(t.shape,"float32"),m=this.bufferSync(e),g=0;g<r.batchSize;++g)for(var v=0;v<r.inChannels;++v)for(var y=0;y<r.inHeight;++y)for(var b=0;b<r.inWidth;++b){for(var x=y-d,w=b-p,k=0,I=0;I<c;I+=u){var C=(x+I)/i;if(!(C<0||C>=r.outHeight||Math.floor(C)!==C))for(var N=0;N<h;N+=l){var S=(w+N)/o;if(!(S<0||S>=r.outWidth||Math.floor(S)!==S)){var E=c*h-1-s.get(g,C,S,v)===I*h+N?1:0;0!==E&&(k+=m.get(g,C,S,v)*E)}}}f.set(k,g,y,b,v)}return f.toTensor()},t.prototype.avgPoolBackprop=function(e,t,n){Bh([e,t],"avgPoolBackprop");for(var r=n.strideHeight,a=n.strideWidth,s=n.filterHeight,i=n.filterWidth,o=n.dilationHeight,u=n.dilationWidth,l=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,p=l-1-n.padInfo.top,d=Zn(t.shape,"float32"),f=1/(s*i),m=this.bufferSync(e),g=0;g<n.batchSize;++g)for(var v=0;v<n.inChannels;++v)for(var y=0;y<n.inHeight;++y)for(var b=0;b<n.inWidth;++b){for(var x=y-p,w=b-h,k=0,I=0;I<l;I+=o){var C=(x+I)/r;if(!(C<0||C>=n.outHeight||Math.floor(C)!==C))for(var N=0;N<c;N+=u){var S=(w+N)/a;S<0||S>=n.outWidth||Math.floor(S)!==S||(k+=m.get(g,C,S,v))}}d.set(k*f,g,y,b,v)}return d.toTensor()},t.prototype.pool3d=function(e,t,n){Bh(e,"pool3d");for(var r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left,m="max"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=this.readSync(e.dataId),v=Zn(t.outShape,e.dtype),y=v.values,b=t.outShape[1]*t.outShape[2]*t.outShape[3]*t.outShape[4],x=t.outShape[2]*t.outShape[3]*t.outShape[4],w=t.outShape[3]*t.outShape[4],k=t.outShape[4],I=0;I<t.batchSize;++I)for(var C=I*b,N=I*e.strides[0],S=0;S<t.inChannels;++S)for(var E=0;E<t.outDepth;++E){for(var T=E*r-p,R=T;R<0;)R+=i;for(var A=Math.min(t.inDepth,l+T),D=C+E*x,F=0;F<t.outHeight;++F){for(var _=F*a-d,$=_;$<0;)$+=o;for(var O=Math.min(t.inHeight,c+_),M=D+F*w,L=0;L<t.outWidth;++L){for(var B=L*s-f,P=B;P<0;)P+=u;for(var z=Math.min(t.inWidth,h+B),W=M+L*k,V=m,U=0,G=0,H=R;H<A;H+=i){for(var q=N+H*e.strides[1],j=$;j<O;j+=o){for(var K=q+j*e.strides[2],X=P;X<z;X+=u){var Y=g[K+X*e.strides[3]+S];if("max"===n&&Y>V?V=Y:"avg"===n&&(U+=Y,G++),isNaN(V))break}if(isNaN(V))break}if(isNaN(V))break}y[W+S]="avg"===n?U/G:V}}}return v.toTensor()},t.prototype.avgPool3d=function(e,t){return Bh(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},t.prototype.avgPool3dBackprop=function(e,t,n){Bh([e,t],"avgPool3dBackprop");for(var r=n.strideDepth,a=n.strideHeight,s=n.strideWidth,i=n.filterDepth,o=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,d=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=p-1-n.padInfo.front,g=f-1-n.padInfo.left,v=d-1-n.padInfo.top,y=Zn(t.shape,"float32"),b=1/(i*o*u),x=this.bufferSync(e),w=0;w<n.batchSize;++w)for(var k=0;k<n.inChannels;++k)for(var I=0;I<n.inDepth;++I)for(var C=0;C<n.inHeight;++C)for(var N=0;N<n.inWidth;++N){for(var S=I-m,E=C-v,T=N-g,R=0,A=0;A<p;A+=l){var D=(S+A)/r;if(!(D<0||D>=n.outDepth||Math.floor(D)!==D))for(var F=0;F<d;F+=c){var _=(E+F)/a;if(!(_<0||_>=n.outHeight||Math.floor(_)!==_))for(var $=0;$<f;$+=h){var O=(T+$)/s;O<0||O>=n.outWidth||Math.floor(O)!==O||(R+=x.get(w,D,_,O,k))}}}y.set(R*b,w,I,C,N,k)}return y.toTensor()},t.prototype.maxPool3d=function(e,t){return Bh(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},t.prototype.maxPool3dPositions=function(e,t){for(var n=Zn(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left,m=this.bufferSync(e),g=0;g<t.batchSize;++g)for(var v=0;v<t.inChannels;++v)for(var y=0;y<t.outDepth;++y){for(var b=y*r-p,x=b;x<0;)x+=i;for(var w=Math.min(t.inDepth,l+b),k=0;k<t.outHeight;++k){for(var I=k*a-d,C=I;C<0;)C+=o;for(var N=Math.min(t.inHeight,c+I),S=0;S<t.outWidth;++S){for(var E=S*s-f,T=E;T<0;)T+=u;for(var R=Math.min(t.inWidth,h+E),A=Number.NEGATIVE_INFINITY,D=-1,F=x;F<w;F+=i)for(var _=F-b,$=C;$<N;$+=o)for(var O=$-I,M=T;M<R;M+=u){var L=M-E,B=m.get(g,F,$,M,v);B>=A&&(A=B,D=_*c*h+O*c+L)}n.set(D,g,y,k,S,v)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(e,t,n,r){Bh([t,n],"maxPool3dBackprop");for(var a=this.maxPool3dPositions(t,r),s=r.strideDepth,i=r.strideHeight,o=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,d=r.effectiveFilterWidth,f=h-1-r.padInfo.front,m=d-1-r.padInfo.left,g=p-1-r.padInfo.top,v=Zn(t.shape,"float32"),y=this.bufferSync(a),b=this.bufferSync(e),x=0;x<r.batchSize;++x)for(var w=0;w<r.inChannels;++w)for(var k=0;k<r.inDepth;++k)for(var I=0;I<r.inHeight;++I)for(var C=0;C<r.inWidth;++C){for(var N=k-f,S=I-g,E=C-m,T=0,R=0;R<h;R+=u){var A=(N+R)/s;if(!(A<0||A>=r.outDepth||Math.floor(A)!==A))for(var D=0;D<p;D+=l){var F=(S+D)/i;if(!(F<0||F>=r.outHeight||Math.floor(F)!==F))for(var _=0;_<d;_+=c){var $=(E+_)/o;if(!($<0||$>=r.outWidth||Math.floor($)!==$)){var O=h*p*d-1-y.get(x,A,F,$,w)===R*p*d+D*d+_?1:0;0!==O&&(T+=b.get(x,A,F,$,w)*O)}}}}v.set(T,x,k,I,C,w)}return v.toTensor()},t.prototype.cast=function(e,t){return bs(e,t,this)},t.prototype.reshape=function(e,t){return xs(e,t)},t.prototype.avgPool=function(e,t){return Bh(e,"avgPool"),Bh(e,"maxPool"),Ph(this.readSync(e.dataId),e.shape,e.dtype,e.strides,t,"avg").toTensor().toFloat()},t.prototype.resizeBilinear=function(e,t,n,r){Bh(e,"resizeBilinear");for(var a=e.shape,s=a[0],i=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(R([s,t,n,u])),h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=0,f=h[0]/p[0],m=h[1]/p[1],g=0;g<s;g++)for(var v=0;v<t;v++)for(var y=f*v,b=Math.floor(y),x=y-b,w=Math.min(i-1,Math.ceil(y)),k=g*e.strides[0]+b*e.strides[1],I=g*e.strides[0]+w*e.strides[1],C=0;C<n;C++)for(var N=m*C,S=Math.floor(N),E=N-S,T=Math.min(o-1,Math.ceil(N)),A=k+S*e.strides[2],D=I+S*e.strides[2],F=k+T*e.strides[2],_=I+T*e.strides[2],$=0;$<u;$++){var O=l[A+$],M=l[D+$],L=O+(l[F+$]-O)*E,B=L+(M+(l[_+$]-M)*E-L)*x;c[d++]=B}return Rn(c,[s,t,n,u])},t.prototype.resizeBilinearBackprop=function(e,t,n){Bh([e,t],"resizeBilinearBackprop");for(var r=t.shape,a=r[0],s=r[1],i=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*s*i*o),p=[n&&l>1?s-1:s,n&&c>1?i-1:i],d=[n&&l>1?l-1:l,n&&c>1?c-1:c],f=p[0]/d[0],m=p[1]/d[1],g=this.readSync(e.dataId),v=0,y=0;y<a;y++)for(var b=y*t.strides[0],x=0;x<l;x++)for(var w=x*f,k=Math.floor(w),I=Math.min(Math.ceil(w),s-1),C=b+k*t.strides[1],N=b+I*t.strides[1],S=w-k,E=1-S,T=0;T<c;T++)for(var R=T*m,A=Math.floor(R),D=Math.min(Math.ceil(R),i-1),F=R-A,_=1-F,$=C+A*t.strides[2],O=C+D*t.strides[2],M=N+A*t.strides[2],L=N+D*t.strides[2],B=E*_,P=E*F,z=S*_,W=S*F,V=0;V<o;V++){var U=g[v++];h[$+V]+=U*B,h[O+V]+=U*P,h[M+V]+=U*z,h[L+V]+=U*W}return On(h,[a,i,s,o],t.dtype)},t.prototype.resizeNearestNeighbor=function(e,t,n,r){Bh(e,"resizeNearestNeighbor");for(var a=e.shape,s=a[0],i=a[1],o=a[2],u=a[3],l=this.readSync(e.dataId),c=new Float32Array(s*t*n*u),h=[r&&t>1?i-1:i,r&&n>1?o-1:o],p=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=h[0]/p[0],f=h[1]/p[1],m=0,g=0;g<s;g++)for(var v=g*e.strides[0],y=0;y<t;y++)for(var b=d*y,x=v+Math.min(i-1,r?Math.round(b):Math.floor(b))*e.strides[1],w=0;w<n;w++)for(var k=f*w,I=x+Math.min(o-1,r?Math.round(k):Math.floor(k))*e.strides[2],C=0;C<u;C++){var N=l[I+C];c[m++]=N}return Rn(c,[s,t,n,u],e.dtype)},t.prototype.resizeNearestNeighborBackprop=function(e,t,n){Bh([e,t],"resizeNearestNeighborBackprop");for(var r=t.shape,a=r[0],s=r[1],i=r[2],o=r[3],u=e.shape,l=u[1],c=u[2],h=new Float32Array(a*s*i*o),p=this.readSync(e.dataId),d=[n&&l>1?s-1:s,n&&c>1?i-1:i],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],m=d[0]/f[0],g=d[1]/f[1],v=1/m,y=1/g,b=2*Math.ceil(v)+2,x=2*Math.ceil(y)+2,w=0;w<a;w++)for(var k=w*t.strides[0],I=0;I<s;I++)for(var C=k+I*t.strides[1],N=Math.floor(I*v),S=Math.floor(N-b/2),E=0;E<i;E++)for(var T=C+E*t.strides[2],R=Math.floor(E*y),A=Math.floor(R-x/2),D=0;D<o;D++){for(var F=0,_=0;_<b;_++){var $=_+S;if(!($<0||$>=l)){var O=k+$*e.strides[1],M=$*m;if(I===Math.min(s-1,n?Math.round(M):Math.floor(M)))for(var L=0;L<x;L++){var B=L+A;if(!(B<0||B>=c)){var P=O+B*e.strides[2],z=B*g;E===Math.min(i-1,n?Math.round(z):Math.floor(z))&&(F+=p[P+D])}}}}h[T+D]=F}return On(h,t.shape,t.dtype)},t.prototype.batchNormalization=function(e,t,n,r,a,s){Bh([e,t,n,a,s],"batchNorm");for(var i=this.readSync(e.dataId),o=this.readSync(t.dataId),u=this.readSync(n.dataId),l=a?this.readSync(a.dataId):new Float32Array([1]),c=s?this.readSync(s.dataId):new Float32Array([0]),h=new Float32Array(i.length),p=c.length,d=l.length,f=u.length,m=o.length,g=0,v=0,y=0,b=0,x=0;x<i.length;++x)h[x]=c[g++]+(i[x]-o[v++])*l[y++]/Math.sqrt(u[b++]+r),g>=p&&(g=0),v>=m&&(v=0),y>=d&&(y=0),b>=f&&(b=0);return On(h,e.shape)},t.prototype.localResponseNormalization4D=function(e,t,n,r,a){Bh(e,"localResponseNormalization4D");var s=e.shape[3],i=s-1,o=this.readSync(e.dataId),u=e.size,l=new Float32Array(u);function c(e){for(var n=e%s,r=e-n+Math.max(0,n-t),a=e-n+Math.min(n+t,i),u=0;r<=a;r++){var l=o[r];u+=l*l}return u}for(var h=0;h<u;h++){var p=c(h),d=o[h]*Math.pow(n+r*p,-a);l[h]=d}return On(l,e.shape)},t.prototype.LRNGrad=function(e,t,n,r,a,s,i){Bh(e,"LRNGrad");for(var o=e.shape[3],u=this.readSync(e.dataId),l=this.readSync(t.dataId),c=this.readSync(n.dataId),h=new Float32Array(e.size),p=e.size,d=0;d<p;d++){for(var f=d%o,m=d-f+Math.max(0,f-r),g=d-f+Math.min(o,f+r+1),v=0,y=m;y<g;y++)v+=Math.pow(l[y],2);for(v=s*v+a,y=m;y<g;y++){var b=-2*s*i*l[y]*c[d]/v;d===y&&(b+=Math.pow(v,-i)),b*=u[d],h[y]+=b}}return On(h,e.shape)},t.prototype.multinomial=function(e,t,n,r){Bh(e,"multinomial");for(var a=t?e:ts(e),s=a.shape[0],i=a.shape[1],o=zn([s,n],"int32"),u=this.readSync(o.dataId),l=this.readSync(a.dataId),c=0;c<s;++c){var h=c*i,p=new Float32Array(i-1);p[0]=l[h];for(var d=1;d<p.length;++d)p[d]=p[d-1]+l[h+d];for(var f=Nu(r.toString()),m=c*n,g=0;g<n;++g){var v=f();u[m+g]=p.length;for(var y=0;y<p.length;y++)if(v<p[y]){u[m+g]=y;break}}}return o},t.prototype.oneHot=function(e,t,n,r){Bh(e,"oneHot");var a=new Float32Array(e.size*t);a.fill(r);for(var s=this.readSync(e.dataId),i=0;i<e.size;++i)s[i]>=0&&s[i]<t&&(a[i*t+s[i]]=n);return _n(a,[e.size,t],"int32")},t.prototype.nonMaxSuppression=function(e,t,n,r,a){return Bh(e,"nonMaxSuppression"),Rs(this.readSync(e.dataId),this.readSync(t.dataId),n,r,a)},t.prototype.fft=function(e){return this.fftBatch(e,!1)},t.prototype.ifft=function(e){return this.fftBatch(e,!0)},t.prototype.fftBatch=function(e,t){for(var n=e.shape[0],r=e.shape[1],a=Zn(e.shape,"float32"),s=Zn(e.shape,"float32"),i=En(e).as2D(n,r),o=Tn(e).as2D(n,r),u=0;u<n;u++)for(var l=i.slice([u,0],[1,r]),c=o.slice([u,0],[1,r]),h=Sn(l,c),p=this.readSync(this.fftImpl(h,t).dataId),d=0;d<r;d++){var f=Cs(p,d);a.values[u*r+d]=f.real,s.values[u*r+d]=f.imag}return Sn(a.toTensor(),s.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(e,t){var n=e.as1D(),r=n.size;if(this.isExponentOf2(r)){var a=this.fftRadix2(n,r,t).as2D(e.shape[0],e.shape[1]);return t&&(a=Sn(En(a).div(Dn(r)),Tn(a).div(Dn(r)))),a}var s=this.readSync(e.dataId),i=function(e){for(var t=new Float32Array(e.length/2),n=new Float32Array(e.length/2),r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}(this.fourierTransformByMatmul(s,r,t));return Sn(i.real,i.imag).as2D(e.shape[0],e.shape[1])},t.prototype.isExponentOf2=function(e){return 0==(e&e-1)},t.prototype.fftRadix2=function(e,t,n){if(1===t)return e;var r=this.readSync(e.dataId),a=t/2,s=function(e){for(var t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),i=Sn(s.real,s.imag).as1D(),o=function(e){for(var t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t),a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}(r),u=Sn(o.real,o.imag).as1D();i=this.fftRadix2(i,a,n),u=this.fftRadix2(u,a,n);var l=function(e,t){for(var n=new Float32Array(e/2),r=new Float32Array(e/2),a=0;a<Math.ceil(e/2);a++){var s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}(t,n),c=Sn(l.real,l.imag).mul(u),h=i.add(c),p=i.sub(c),d=En(h).concat(En(p)),f=Tn(h).concat(Tn(p));return Sn(d,f).as1D()},t.prototype.fourierTransformByMatmul=function(e,t,n){for(var r=new Float32Array(2*t),a=0;a<t;a++){for(var s=0,i=0,o=0;o<t;o++){var u=Ss(a*o,t,n),l=Cs(e,o);s+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(s/=t,i/=t),Ns(r,s,i,a)}return r},t.prototype.depthToSpace=function(e,t,n){N("NHWC"===n,(function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+n})),N(t>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+t}));for(var r=e.shape[0],a=e.shape[1],s=e.shape[2],i=e.shape[3],o=a*t,u=s*t,l=i/(t*t),c=this.readSync(e.dataId),h=new Float32Array(r*o*u*l),p=0,d=0;d<r;++d)for(var f=0;f<o;++f)for(var m=Math.floor(f/t),g=f%t,v=0;v<u;++v)for(var y=Math.floor(v/t),b=(g*t+v%t)*l,x=0;x<l;++x){var w=x+b+i*(y+s*(m+a*d));h[p++]=c[w]}return On(h,[r,o,u,l])},t.prototype.broadcastedBinaryOp=function(e,t,n,r){var a=$r(e.shape,t.shape),s=Zn(a,n),i=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Fr(e.shape,a),l=Fr(t.shape,a),c=s.values;if(u.length+l.length===0)for(var h=0;h<c.length;++h)c[h]=r(i[h%i.length],o[h%o.length]);else{var p=this.bufferSync(e),d=this.bufferSync(t),f=function(n){var a=s.indexToLoc(n),h=a.slice(-e.rank);u.forEach((function(e){return h[e]=0}));var f=p.locToIndex(h),m=a.slice(-t.rank);l.forEach((function(e){return m[e]=0}));var g=d.locToIndex(m);c[n]=r(i[f],o[g])};for(h=0;h<c.length;++h)f(h)}return s.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(e,t,n){var r=$r(e.shape,t.shape),a=Zn(r,"float32"),s=Zn(r,"float32"),i=this.readSync(e.dataId),o=this.readSync(t.dataId),u=Fr(e.shape,r),l=Fr(t.shape,r),c=a.values,h=s.values;if(u.length+l.length===0)for(var p=0;p<c.length;p++){var d=p%i.length,f=p%o.length,m=n(i[2*d],i[2*d+1],o[2*f],o[2*f+1]);c[p]=m.real,h[p]=m.imag}else{var g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),v=this.bufferSync(this.data.get(t.dataId).complexTensors.real),y=function(r){var s=a.indexToLoc(r),p=s.slice(-e.rank);u.forEach((function(e){return p[e]=0}));var d=g.locToIndex(p),f=s.slice(-t.rank);l.forEach((function(e){return f[e]=0}));var m=v.locToIndex(f),y=n(i[2*d],i[2*d+1],o[2*m],o[2*m+1]);c[r]=y.real,h[r]=y.imag};for(p=0;p<c.length;p++)y(p)}return this.complex(a.toTensor(),s.toTensor())},t.prototype.split=function(e,t,n){return Os(e,t,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(e,t,n,r,a,s){for(var i=e.shape,o=i[0],u=i[1],l=i[2],c=i[3],h=t.shape[0],p=r[0],d=r[1],f=Zn([h,p,d,c],"float32"),m=this.readSync(t.dataId),g=this.readSync(n.dataId),v=this.readSync(e.dataId),y=e.strides,b=f.strides,x=0;x<h;x++){var w=4*x,k=m[w],I=m[w+1],C=m[w+2],N=m[w+3],S=g[x];if(!(S>=o))for(var E=p>1?(C-k)*(u-1)/(p-1):0,T=d>1?(N-I)*(l-1)/(d-1):0,R=0;R<p;R++){var A=p>1?k*(u-1)+R*E:.5*(k+C)*(u-1);if(A<0||A>u-1)for(var D=0;D<d;D++)for(var F=0;F<c;F++){var _=F+D*b[2]+R*b[1]+x*b[0];f.values[_]=s}else if("bilinear"===a){var $=Math.floor(A),O=Math.ceil(A),M=A-$;for(D=0;D<d;D++)if((H=d>1?I*(l-1)+D*T:.5*(I+N)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=s;else{var L=Math.floor(H),B=Math.ceil(H),P=H-L;for(F=0;F<c;F++){var z=v[_=F+L*y[2]+$*y[1]+S*y[0]],W=v[_=F+B*y[2]+$*y[1]+S*y[0]],V=v[_=F+L*y[2]+O*y[1]+S*y[0]],U=z+(W-z)*P,G=V+(v[_=F+B*y[2]+O*y[1]+S*y[0]]-V)*P;_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=U+(G-U)*M}}}else for(D=0;D<d;++D){var H;if((H=d>1?I*(l-1)+D*T:.5*(I+N)*(l-1))<0||H>l-1)for(F=0;F<c;F++)_=F+D*b[2]+R*b[1]+x*b[0],f.values[_]=s;else{var q=Math.round(H),j=Math.round(A);for(F=0;F<c;F++){var K=F+q*y[2]+j*y[1]+S*y[0],X=F+D*b[2]+R*b[1]+x*b[0];f.values[X]=v[K]}}}}}return f.toTensor()},t.prototype.sparseToDense=function(e,t,n,r){var a=Ba(0,e,n),s=a.sliceRank,i=a.numUpdates,o=a.sliceSize,u=a.strides,l=a.outputSize;return this.scatter(e,t,n,l,o,i,s,u,r,!1)},t.prototype.gatherND=function(e,t){var n=t.shape,r=n[n.length-1],a=_a(e,t),s=a[0],i=a[1],o=a[2],u=a[3];if(0===i)return Rn([],s,e.dtype);for(var l=new ge([i,o],e.dtype),c=this.readSync(t.dataId),h=this.readSync(e.dataId),p=0;p<i;p++){for(var d=[],f=0,m=0;m<r;m++){var g=c[p*r+m];f+=g*u[m],d.push(g)}if(f<0||f>=e.size/o)throw new Error("Invalid indices: "+d+" does not index into "+e.shape);for(var v=0;v<o;v++)l.values[p*o+v]=h[f*o+v]}return l.toTensor().reshape(s)},t.prototype.scatterND=function(e,t,n){var r=Ba(0,e,n),a=r.sliceRank,s=r.numUpdates,i=r.sliceSize,o=r.strides,u=r.outputSize,l=Dn(0);return this.scatter(e,t,n,u,i,s,a,o,l,!0)},t.prototype.fill=function(e,t,n){var r=z(n=n||Y(t),R(e));return r.fill(t),Le.makeTensor(r,e,n,this)},t.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},t.prototype.zerosLike=function(e){var t=z(e.dtype,R(e.shape));return this.makeOutput(t,e.shape,e.dtype)},t.prototype.linspace=function(e,t,n){return ws(e,t,n)},t.prototype.scatter=function(e,t,n,r,a,s,i,o,u,l){var c=[r/a,a],h=this.readSync(e.dataId),p=this.readSync(t.dataId);if(0===r)return Rn([],n,t.dtype);var d=new ge(c,t.dtype);d.values.fill(this.readSync(u.dataId)[0]);for(var f=0;f<s;f++){for(var m=[],g=0,v=0;v<i;v++){var y=h[f*i+v];m.push(y),g+=y*o[v]}if(g<0||g>=r/a)throw new Error("Invalid indices: "+m+" does not index into "+n);for(var b=0;b<a;b++)l?d.values[g*a+b]+=p[f*a+b]:d.values[g*a+b]=0===t.rank?p[0]:p[f*a+b]}return d.toTensor().reshape(n)},t}(ss);function Uh(e,t){return{kernelName:e,backendName:"cpu",kernelFunc:function(n){var r=n.inputs,a=n.backend,s=r,i=s.a,o=s.b,u=a;Bh([i,o],e);var l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,h=t(i.shape,o.shape,l,c,i.dtype),p=h[0],d=h[1];return{dataId:u.write(p,d,i.dtype),shape:d,dtype:i.dtype}}}}function Gh(e){return function(t,n,r,a,s){var i=$r(t,n),o=i.length,u=Q(i),l=P(s,R(i)),c=t.length,h=n.length,p=Q(t),d=Q(n),f=Fr(t,i),m=Fr(n,i);if(f.length+m.length===0)for(var g=0;g<l.length;++g)l[g]=e(r[g%r.length],a[g%a.length]);else{var v=function(t){var n=le(t,o,u),s=n.slice(-c);f.forEach((function(e){return s[e]=0}));var i=ue(s,c,p),g=n.slice(-h);m.forEach((function(e){return g[e]=0}));var v=ue(g,h,d);l[t]=e(r[i],a[v])};for(g=0;g<l.length;++g)v(g)}return[l,i]}}Le.registerBackend("cpu",(function(){return new Vh}),1);var Hh=Gh((function(e,t){return e/t})),qh=Uh(yr,Hh),jh={kernelName:"MaxPoolWithArgmax",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,s=n,i=s.filterSize,o=s.strides,u=s.pad,l=s.includeBatchInIndex,c=r;Bh(a,"MaxPoolWithArgmax");var h=c.data.get(a.dataId).values,p=os(a.shape,i,o,[1,1],u),d=function(e,t,n,r,a){var s=Ph(e,0,n,Q(t),a,"max"),i=zh(e,t,n,a,!0,r);return[s.values,i.values]}(h,a.shape,a.dtype,l,p),f=d[0],m=d[1],g=c.write(f,p.outShape,a.dtype),v=c.write(m,p.outShape,a.dtype);return[{dataId:g,shape:p.outShape,dtype:a.dtype},{dataId:v,shape:p.outShape,dtype:"int32"}]}},Kh={kernelName:"NonMaxSuppressionV5",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t,s=a.boxes,i=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,p=n;Bh(s,"NonMaxSuppressionWithScore");var d=As(p.data.get(s.dataId).values,p.data.get(i.dataId).values,u,l,c,h);return[d.selectedIndices,d.selectedScores]}},Xh={kernelName:"Square",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n;Bh(r,"square");for(var s=a.data.get(r.dataId).values,i=new Float32Array(s.length),o=0;o<s.length;++o){var u=s[o];i[o]=u*u}return{dataId:a.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Yh=Gh((function(e,t){var n=e-t;return n*n}));function Jh(e,t,n,r,a){for(var s=R(t),i=t.length,o=Q(t),u=Q(a),l=P(n,R(a)),c=0;c<s;++c){for(var h=le(c,i,o),p=new Array(h.length),d=0;d<p.length;d++)p[d]=h[r[d]];l[ue(p,i,u)]=e[c]}return l}for(var Zh=0,Qh=[Kh,Xh,Uh(xr,Yh),qh,{kernelName:"Transpose",backendName:"cpu",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,s=n.perm,i=r;Bh(a,"transpose");for(var o=a.shape.length,u=new Array(o),l=0;l<u.length;l++)u[l]=a.shape[s[l]];var c=Jh(i.data.get(a.dataId).values,a.shape,a.dtype,s,u);return{dataId:i.write(c,u,a.dtype),shape:u,dtype:a.dtype}}},jh];Zh<Qh.length;Zh++)g(Qh[Zh]);for(var ep,tp=function(e){this.variableNames=["A"];var t=Gs(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2("+r+".0, "+n+".0);\n\n        vec4 values = "+t.texture2D+"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    "},np=function(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;var t=Gs(),n=e[0],r=e[1];this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2("+r+".0, "+n+".0);\n            vec4 values = "+t.texture2D+"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        "+t.output+" = result;\n      }\n    "},rp=function(e,t){this.variableNames=["A"];for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;var a=ri(this.rank),s=function(e){var t=e.length;if(t>6)throw Error("Transpose for rank "+t+" is not yet supported");for(var n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t),a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}(t);this.userCode="\n    void main() {\n      "+a+" resRC = getOutputCoords();\n      setOutput(getA("+s+"));\n    }\n    "},ap=function(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;for(var n=new Array(e.length),r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank "+this.rank+" is not yet supported.");var a=ri(this.rank),s=Vs("rc",this.rank),i=new Array(this.rank);for(r=0;r<t.length;r++)i[t[r]]=s[r];var o="vec2("+i.slice(-2).join()+")",u="++"+s[this.rank-1]+" < "+n[this.rank-1],l="getChannel(getA("+i.join()+"), "+o+")";this.userCode="\n    void main() {\n      "+a+" rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = "+l+";\n      if("+u+") {\n        result[1] = "+l+";\n      }\n      --"+s[this.rank-1]+";\n      if(++"+s[this.rank-2]+" < "+n[this.rank-2]+") {\n        result[2] = "+l+";\n        if("+u+") {\n          result[3] = "+l+";\n        }\n      }\n      setOutput(result);\n    }\n    "},sp=0,ip=[{kernelName:"FromPixels",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs,a=t.pixels,s=r.numChannels,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,u=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=u[0],h=u[1],p=[h,c],d=[h,c,s];(o||i)&&(null==ep&&(ep=document.createElement("canvas").getContext("2d")),ep.canvas.width=c,ep.canvas.height=h,ep.drawImage(a,0,0,c,h),a=ep.canvas);var f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=We.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);var m=l().getBool("WEBGL_PACK")?new np(d):new tp(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}},{kernelName:yr,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t;return function(e,t,n){var r=new gi("\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",e.shape,t.shape);return l().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&(r=new yi("\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",e.shape,t.shape,!0)),n.runWebGLProgram(r,[e,t],"float32")}(r.a,r.b,n)}},{kernelName:"NonMaxSuppressionV5",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=e.attrs;cn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");var a=t,s=a.boxes,i=a.scores,o=r,u=o.maxOutputSize,l=o.iouThreshold,c=o.scoreThreshold,h=o.softNmsSigma,p=n,d=As(p.readSync(s.dataId),p.readSync(i.dataId),u,l,c,h);return[d.selectedIndices,d.selectedScores]}},{kernelName:"Square",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t.x,a=n,s=new Jo(r.shape,"return x * x;");return a.runWebGLProgram(s,[r],r.dtype)}},{kernelName:xr,backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.backend,r=t,a=r.a,s=r.b,i=n,o=l().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new yi("return (a - b) * (a - b);",a.shape,s.shape):new gi("return (a - b) * (a - b);",a.shape,s.shape);return i.compileAndRun(o,[a,s])}},{kernelName:"Transpose",backendName:"webgl",kernelFunc:function(e){for(var t,n=e.inputs,r=e.attrs,a=e.backend,s=n.x,i=r.perm,o=a,u=s.shape.length,c=new Array(u),h=0;h<c.length;h++)c[h]=s.shape[i[h]];if(o.shouldExecuteOnCPU([s])){var p=Jh(o.texData.get(s.dataId).values,s.shape,s.dtype,i,c);t=o.makeTensorInfo(c,s.dtype),o.texData.get(t.dataId).values=p}else t=function(e,t,n){var r=l().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ap(e.shape,t):new rp(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}(s,i,o);return t}},{kernelName:"MaxPoolWithArgmax",backendName:"webgl",kernelFunc:function(e){var t=e.inputs,n=e.attrs,r=e.backend,a=t.x,s=n,i=s.filterSize,o=s.strides,u=s.pad,l=s.includeBatchInIndex,c=r;N(4===a.shape.length,(function(){return"Error in maxPool: input must be rank 4 but got rank "+a.shape.length+"."}));var h=[1,1];N(vs(o,h),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+o+" and dilations '"+h+"'"}));var p=os(a.shape,i,o,h,u),d=function(e,t,n,r){var a=new Ro(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");return a=new Ro(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(a,l,p,c);return[d[0],d[1]]}}];sp<ip.length;sp++)g(ip[sp]);for(var op=0,up=[{kernelName:gr,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=$r(n.shape,r.shape);return{a:function(){var t=e,r=_r(n.shape,a);return r.length>0&&(t=t.sum(r)),t.reshape(n.shape)},b:function(){var t=e,n=_r(r.shape,a);return n.length>0&&(t=t.sum(n)),t.reshape(r.shape)}}}},{kernelName:"AddN",saveAllInputs:!0,gradFunc:function(e,t){var n={};return t.forEach((function(t,r){n[r]=function(){return e.clone()}})),n}},{kernelName:Cr,gradFunc:function(e,t,n){for(var r=n,a=r.inputShape,s=r.shape,i=Array.from(s),o=a.length-1;o>=0;o--)if(a[o]===s[o])i[o]=1;else if(1!==a[o])throw new Error("broadcastTo(): ["+a+"] cannot be broadcast to ["+s+"].");var u=[];for(o=0;o<i.length;o++)i[o]>1&&u.push(o);return{x:function(){return e.sum(u,!0)}}}},{kernelName:yr,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=$r(n.shape,r.shape);return{a:function(){var t=Fa(e,r.toFloat()),s=_r(n.shape,a);return s.length>0?Tc(t,s).reshape(n.shape):t},b:function(){var t=e.mul(n.toFloat()),s=_r(r.shape,a);s.length>0&&(t=Tc(t,s).reshape(r.shape));var i=vl(r);return Qr(Fa(t,i.toFloat()))}}}},{kernelName:"FusedBatchNorm",inputsToSave:["x","mean","variance","scale"],gradFunc:function(e,t,n){var r=n.varianceEpsilon,a=t[0],s=t[1],i=t[2],o=t[3],u=Tu(a),l=null==o?Dn(1):o,c=_r(s.shape,u.shape),h=[];if(1===s.rank){for(var p=0;p<u.shape.length-1;++p)h.push(u.shape[p]);h.push(1)}var d=Aa(a,s),f=Na(e,l),m=na(Dr(i,Dn(r))),g=Na(Na(Na(m,m),m),Dn(-.5));return{x:function(){return 1===s.rank?sr(Na(Na(e,Ju(m.as4D(1,1,1,s.shape[0]),h)),l),a.shape):sr(Na(Na(e,m),l),a.shape)},mean:function(){var e=Na(Na(m,Dn(-1)),f);return 1===s.rank&&(e=Tc(e,c)),sr(e,s.shape)},variance:function(){var e=Na(Na(g,d),f);return 1===s.rank&&(e=Tc(e,c)),sr(e,s.shape)},scale:function(){var t=Na(d,m),n=Na(e,t);return 1===s.rank&&(n=Tc(n,c)),sr(n,s.shape)},offset:function(){var t=e;return 1===s.rank&&(t=Tc(t,c)),sr(t,s.shape)}}}},{kernelName:Sr,gradFunc:function(e){return{x:function(){return e.toFloat()}}}},{kernelName:Nr,inputsToSave:["indices"],gradFunc:function(e,t){var n=t[0];return{indices:function(){return zn(n.shape,"float32")}}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.paddings.map((function(e){return e[0]}));return{x:function(){return e.slice(a,r.shape)}}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:function(e,t){var n=t[0];return{x:function(){return e.mul(n.toFloat().mul(2))}}}},{kernelName:xr,inputsToSave:["a","b"],gradFunc:function(e,t){var n=t[0],r=t[1],a=Dn(2);return{a:function(){return Na(e,Na(a,Aa(n,r)))},b:function(){return Na(e,Na(a,Aa(r,n)))}}}},{kernelName:Er,inputsToSave:["x"],gradFunc:function(e,t,n){var r=t[0],a=n.reps;return{x:function(){var t=Hn(r);if(1===r.rank)for(var n=0;n<a[0];++n)t=t.add(e.slice([n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(n=0;n<a[0];++n)for(var s=0;s<a[1];++s)t=t.add(e.slice([n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(n=0;n<a[0];++n)for(s=0;s<a[1];++s)for(var i=0;i<a[2];++i)t=t.add(e.slice([n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+r.rank+" tensors yet.");for(n=0;n<a[0];++n)for(s=0;s<a[1];++s)for(i=0;i<a[2];++i)for(var o=0;o<a[3];++o)t=t.add(e.slice([n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:"Transpose",gradFunc:function(e,t,n){var r=wn(n.perm);return{x:function(){return rs(e,r)}}}}];op<up.length;op++)v(up[op]);var lp=function(){function e(){}return e.prototype.fetch=function(e,t){return fetch(e,t)},e.prototype.now=function(){return performance.now()},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return new TextDecoder(t).decode(e)},e}();l().get("IS_BROWSER")&&l().setPlatform("browser",new lp);var cp,hp=function(){function e(){this.util=n(753),this.textEncoder=new this.util.TextEncoder}return e.prototype.fetch=function(e,t){return null!=l().global.fetch?l().global.fetch(e,t):(null==cp&&(cp=n(522)),cp(e,t))},e.prototype.now=function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6},e.prototype.encode=function(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)},e.prototype.decode=function(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)},e}();l().get("IS_NODE")&&l().setPlatform("node",new hp);var pp={float32:4,int32:4,uint16:2,uint8:1,bool:1};function dp(e,t){for(var n={},r=0,a=function(t){var a=t.name,s=t.dtype,i=t.shape,o=R(i),u=void 0;if("quantization"in t){var l=t.quantization;if("uint8"!==l.dtype&&"uint16"!==l.dtype)throw new Error("Weight "+t.name+" has unknown quantization dtype "+l.dtype+". Supported quantization dtypes are: 'uint8' and 'uint16'.");var c=pp[l.dtype],h=e.slice(r,r+o*c),p="uint8"===l.dtype?new Uint8Array(h):new Uint16Array(h);if("float32"===s)u=Float32Array.from(p,(function(e){return e*l.scale+l.min}));else{if("int32"!==s)throw new Error("Unsupported dtype in weight '"+a+"': "+s);u=Int32Array.from(p,(function(e){return Math.round(e*l.scale+l.min)}))}r+=o*c}else if("string"===s){var d=R(t.shape);u=[];for(var f=0;f<d;f++){var m=new Uint32Array(e.slice(r,r+4))[0];r+=4;var g=new Uint8Array(e.slice(r,r+m));u.push(g),r+=m}}else{var v=pp[s];if(h=e.slice(r,r+o*v),"float32"===s)u=new Float32Array(h);else if("int32"===s)u=new Int32Array(h);else{if("bool"!==s)throw new Error("Unsupported dtype in weight '"+a+"': "+s);u=new Uint8Array(h)}r+=o*v}n[a]=Rn(u,i,s)},s=0,i=t;s<i.length;s++)a(i[s]);return n}function fp(e){if(null===e)throw new Error("Invalid input value: "+JSON.stringify(e));var t=0,n=[];e.forEach((function(e){if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: "+e.constructor.name)}));var r=new Uint8Array(t),a=0;return n.forEach((function(e){r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}var mp="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function gp(e){return mp?Buffer.byteLength(e):new Blob([e]).size}function vp(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function yp(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);var t=e.split("/");return t[t.length-1]}function bp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:gp(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:gp(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}var xp=function(){function e(){this.saveRouters=[],this.loadRouters=[]}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerSaveRouter=function(t){e.getInstance().saveRouters.push(t)},e.registerLoadRouter=function(t){e.getInstance().loadRouters.push(t)},e.getSaveHandlers=function(t){return e.getHandlers(t,"save")},e.getLoadHandlers=function(t,n){return e.getHandlers(t,"load",n)},e.getHandlers=function(t,n,r){var a=[];return("load"===n?e.getInstance().loadRouters:e.getInstance().saveRouters).forEach((function(e){var n=e(t,r);null!==n&&a.push(n)})),a},e}(),wp="://",kp=function(){function e(){this.managers={}}return e.getInstance=function(){return null==e.instance&&(e.instance=new e),e.instance},e.registerManager=function(t,n){N(null!=t,(function(){return"scheme must not be undefined or null."})),t.endsWith(wp)&&(t=t.slice(0,t.indexOf(wp))),N(t.length>0,(function(){return"scheme must not be an empty string."}));var r=e.getInstance();N(null==r.managers[t],(function(){return"A model store manager is already registered for scheme '"+t+"'."})),r.managers[t]=n},e.getManager=function(e){var t=this.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '"+e+"'");return t},e.getSchemes=function(){return Object.keys(this.getInstance().managers)},e}();function Ip(e){if(-1===e.indexOf(wp))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+kp.getSchemes().join(","));return{scheme:e.split(wp)[0],path:e.split(wp)[1]}}function Cp(e,t,n){return void 0===n&&(n=!1),s(this,void 0,void 0,(function(){var r,a,s,o,u,l,c,h,p;return i(this,(function(i){switch(i.label){case 0:return N(e!==t,(function(){return"Old path and new path are the same: '"+e+"'"})),N((r=xp.getLoadHandlers(e)).length>0,(function(){return"Copying failed because no load handler is found for source URL "+e+"."})),N(r.length<2,(function(){return"Copying failed because more than one ("+r.length+") load handlers for source URL "+e+"."})),a=r[0],N((s=xp.getSaveHandlers(t)).length>0,(function(){return"Copying failed because no save handler is found for destination URL "+t+"."})),N(s.length<2,(function(){return"Copying failed because more than one ("+r.length+") save handlers for destination URL "+t+"."})),o=s[0],u=Ip(e).scheme,l=Ip(e).path,c=u===Ip(e).scheme,[4,a.load()];case 1:return h=i.sent(),n&&c?[4,kp.getManager(u).removeModel(l)]:[3,3];case 2:i.sent(),i.label=3;case 3:return[4,o.save(h)];case 4:return p=i.sent(),!n||c?[3,6]:[4,kp.getManager(u).removeModel(l)];case 5:i.sent(),i.label=6;case 6:return[2,p.modelArtifactsInfo]}}))}))}var Np="models_store",Sp="model_info_store";function Ep(){if(!l().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");var e=window||self,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Tp(e){var t=e.result;t.createObjectStore(Np,{keyPath:"modelPath"}),t.createObjectStore(Sp,{keyPath:"modelPath"})}var Rp=function(){function e(e){if(this.indexedDB=Ep(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}return e.prototype.save=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return[2,this.databaseAction(this.modelPath,e)]}))}))},e.prototype.load=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){return[2,this.databaseAction(this.modelPath)]}))}))},e.prototype.databaseAction=function(e,t){var n=this;return new Promise((function(e,r){var a=n.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Tp(a)},a.onsuccess=function(){var s=a.result;if(null==t){var i=s.transaction(Np,"readonly"),o=i.objectStore(Np).get(n.modelPath);o.onsuccess=function(){if(null==o.result)return s.close(),r(new Error("Cannot find model with path '"+n.modelPath+"' in IndexedDB."));e(o.result.modelArtifacts)},o.onerror=function(e){return s.close(),r(o.error)},i.oncomplete=function(){return s.close()}}else{var u,l=bp(t),c=s.transaction(Sp,"readwrite"),h=c.objectStore(Sp),p=h.put({modelPath:n.modelPath,modelArtifactsInfo:l});p.onsuccess=function(){var a=(u=s.transaction(Np,"readwrite")).objectStore(Np).put({modelPath:n.modelPath,modelArtifacts:t,modelArtifactsInfo:l});a.onsuccess=function(){return e({modelArtifactsInfo:l})},a.onerror=function(e){var t=(h=c.objectStore(Sp)).delete(n.modelPath);t.onsuccess=function(){return s.close(),r(a.error)},t.onerror=function(e){return s.close(),r(a.error)}}},p.onerror=function(e){return s.close(),r(p.error)},c.oncomplete=function(){null==u?s.close():u.oncomplete=function(){return s.close()}}}},a.onerror=function(e){return r(a.error)}}))},e.URL_SCHEME="indexeddb://",e}(),Ap=function(e){return l().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rp.URL_SCHEME)?(t=e.slice(Rp.URL_SCHEME.length),new Rp(t)):null;var t};xp.registerSaveRouter(Ap),xp.registerLoadRouter(Ap);var Dp=function(){function e(){this.indexedDB=Ep()}return e.prototype.listModels=function(){return s(this,void 0,void 0,(function(){var e=this;return i(this,(function(t){return[2,new Promise((function(t,n){var r=e.indexedDB.open("tensorflowjs",1);r.onupgradeneeded=function(){return Tp(r)},r.onsuccess=function(){var e=r.result,a=e.transaction(Sp,"readonly"),s=a.objectStore(Sp).getAll();s.onsuccess=function(){for(var e={},n=0,r=s.result;n<r.length;n++){var a=r[n];e[a.modelPath]=a.modelArtifactsInfo}t(e)},s.onerror=function(t){return e.close(),n(s.error)},a.oncomplete=function(){return e.close()}},r.onerror=function(e){return n(r.error)}}))]}))}))},e.prototype.removeModel=function(e){return s(this,void 0,void 0,(function(){var t=this;return i(this,(function(n){var r;return e=(r=e).startsWith(Rp.URL_SCHEME)?r.slice(Rp.URL_SCHEME.length):r,[2,new Promise((function(n,r){var a=t.indexedDB.open("tensorflowjs",1);a.onupgradeneeded=function(){return Tp(a)},a.onsuccess=function(){var t,s=a.result,i=s.transaction(Sp,"readwrite"),o=i.objectStore(Sp),u=o.get(e);u.onsuccess=function(){if(null==u.result)return s.close(),r(new Error("Cannot find model with path '"+e+"' in IndexedDB."));var a=o.delete(e),i=function(){var a=(t=s.transaction(Np,"readwrite")).objectStore(Np).delete(e);a.onsuccess=function(){return n(u.result.modelArtifactsInfo)},a.onerror=function(e){return r(u.error)}};a.onsuccess=i,a.onerror=function(e){return i(),s.close(),r(u.error)}},u.onerror=function(e){return s.close(),r(u.error)},i.oncomplete=function(){null==t?s.close():t.oncomplete=function(){return s.close()}}},a.onerror=function(e){return r(a.error)}}))]}))}))},e}();if(l().getBool("IS_BROWSER"))try{kp.registerManager(Rp.URL_SCHEME,new Dp)}catch(r){}var Fp="/",_p="tensorflowjs_models",$p="info",Op="model_topology",Mp="weight_specs",Lp="weight_data",Bp="model_metadata";function Pp(e){return{info:[_p,e,$p].join(Fp),topology:[_p,e,Op].join(Fp),weightSpecs:[_p,e,Mp].join(Fp),weightData:[_p,e,Lp].join(Fp),modelMetadata:[_p,e,Bp].join(Fp)}}function zp(e){var t=e.split(Fp);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Fp)}var Wp=function(){function e(e){if(!l().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Pp(this.modelPath)}return e.prototype.save=function(e){return s(this,void 0,void 0,(function(){var t,n,r;return i(this,(function(a){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=bp(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(mp)return Buffer.from(e).toString("base64");for(var t=new Uint8Array(e),n="",r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata})),[2,{modelArtifactsInfo:r}]}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error("Failed to save model '"+this.modelPath+"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes="+r.modelTopologyBytes+", weightSpecsBytes="+r.weightSpecsBytes+", weightDataBytes="+r.weightDataBytes+".")}return[2]}))}))},e.prototype.load=function(){return s(this,void 0,void 0,(function(){var e,t,n,r,a,s,o;return i(this,(function(i){if(null==(e=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error("In local storage, there is no model with name '"+this.modelPath+"'");if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");if(t={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error("In local storage, the topology of model '"+this.modelPath+"' is missing.");if(t.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error("In local storage, the weight specs of model '"+this.modelPath+"' are missing.");if(t.weightSpecs=r,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(s=JSON.parse(a),t.format=s.format,t.generatedBy=s.generatedBy,t.convertedBy=s.convertedBy,t.userDefinedMetadata=s.userDefinedMetadata),null==(o=this.LS.getItem(this.keys.weightData)))throw new Error("In local storage, the binary weight values of model '"+this.modelPath+"' are missing.");return t.weightData=function(e){if(mp){var t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}for(var n=atob(e),r=new Uint8Array(n.length),a=0;a<n.length;++a)r.set([n.charCodeAt(a)],a);return r.buffer}(o),[2,t]}))}))},e.URL_SCHEME="localstorage://",e}(),Vp=function(e){return l().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Wp.URL_SCHEME)?(t=e.slice(Wp.URL_SCHEME.length),new Wp(t)):null;var t};xp.registerSaveRouter(Vp),xp.registerLoadRouter(Vp);var Up=function(){function e(){N(l().getBool("IS_BROWSER"),(function(){return"Current environment is not a web browser"})),N("undefined"==typeof window||void 0!==window.localStorage,(function(){return"Current browser does not appear to support localStorage"})),this.LS=window.localStorage}return e.prototype.listModels=function(){return s(this,void 0,void 0,(function(){var e,t,n,r,a,s;return i(this,(function(i){for(e={},t=_p+Fp,n=Fp+$p,r=0;r<this.LS.length;++r)(a=this.LS.key(r)).startsWith(t)&&a.endsWith(n)&&(s=zp(a),e[s]=JSON.parse(this.LS.getItem(a)));return[2,e]}))}))},e.prototype.removeModel=function(e){return s(this,void 0,void 0,(function(){var t,n;return i(this,(function(r){var a;if(e=(a=e).startsWith(Wp.URL_SCHEME)?a.slice(Wp.URL_SCHEME.length):a,t=Pp(e),null==this.LS.getItem(t.info))throw new Error("Cannot find model at path '"+e+"'");return n=JSON.parse(this.LS.getItem(t.info)),this.LS.removeItem(t.info),this.LS.removeItem(t.topology),this.LS.removeItem(t.weightSpecs),this.LS.removeItem(t.weightData),[2,n]}))}))},e}();if(l().getBool("IS_BROWSER"))try{kp.registerManager(Wp.URL_SCHEME,new Up)}catch(r){}function Gp(e){return new Promise((function(e){return setTimeout(e)})).then(e)}var Hp=function(){function e(t){if(!l().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(e.URL_SCHEME)&&(t=t.slice(e.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}return e.prototype.save=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a,s,o;return i(this,(function(i){switch(i.label){case 0:if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");if(t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"})),!(e.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");case 1:return n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),(s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor).download=this.modelTopologyFileName,s.href=a,[4,Gp((function(){return s.dispatchEvent(new MouseEvent("click"))}))];case 2:return i.sent(),null==e.weightData?[3,4]:((o=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor).download=this.weightDataFileName,o.href=t,[4,Gp((function(){return o.dispatchEvent(new MouseEvent("click"))}))]);case 3:i.sent(),i.label=4;case 4:return[2,{modelArtifactsInfo:bp(e)}]}}))}))},e.URL_SCHEME="downloads://",e}(),qp=function(){function e(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, but received "+e);this.files=e}return e.prototype.load=function(){return s(this,void 0,void 0,(function(){var e,t,n=this;return i(this,(function(r){return e=this.files[0],t=this.files.slice(1),[2,new Promise((function(r,a){var s=new FileReader;s.onload=function(s){var i=JSON.parse(s.target.result),o=i.modelTopology;if(null!=o){0===t.length&&r({modelTopology:o});var u=i.weightsManifest;if(null!=u){var l;try{l=n.checkManifestAndWeightFiles(u,t)}catch(e){return void a(e)}var c=[],h=[],p=[];u.forEach((function(e){e.paths.forEach((function(e){h.push(e),p.push(null)})),c.push.apply(c,e.weights)})),u.forEach((function(e){e.paths.forEach((function(e){var t=new FileReader;t.onload=function(t){var n=t.target.result,a=h.indexOf(e);p[a]=n,-1===p.indexOf(null)&&r({modelTopology:o,weightSpecs:c,weightData:vp(p),format:i.format,generatedBy:i.generatedBy,convertedBy:i.convertedBy,userDefinedMetadata:i.userDefinedMetadata})},t.onerror=function(t){return a("Failed to weights data from file of path '"+e+"'.")},t.readAsArrayBuffer(l[e])}))}))}else a(new Error("weightManifest field is missing from file "+e.name))}else a(new Error("modelTopology field is missing from file "+e.name))},s.onerror=function(t){return a("Failed to read model topology and weights manifest JSON from file '"+e.name+"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.")},s.readAsText(e)}))]}))}))},e.prototype.checkManifestAndWeightFiles=function(e,t){for(var n=[],r=t.map((function(e){return yp(e.name)})),a={},s=0,i=e;s<i.length;s++)i[s].paths.forEach((function(e){var s=yp(e);if(-1!==n.indexOf(s))throw new Error("Duplicate file basename found in weights manifest: '"+s+"'");if(n.push(s),-1===r.indexOf(s))throw new Error("Weight file with basename '"+s+"' is not provided.");a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error("Mismatch in the number of files in weights manifest ("+n.length+") and the number of weight files provided ("+t.length+").");return a},e}();function jp(e,t,n,r){!function(e){N(null!=e&&Array.isArray(e)&&e.length>0,(function(){return"promises must be a none empty array"}))}(e),function(e,t){N(e>=0&&e<=1,(function(){return"Progress fraction must be in range [0, 1], but got startFraction "+e})),N(t>=0&&t<=1,(function(){return"Progress fraction must be in range [0, 1], but got endFraction "+t})),N(t>=e,(function(){return"startFraction must be no more than endFraction, but got startFraction "+e+" and endFraction "+t}))}(n=null==n?0:n,r=null==r?1:r);var a=0;return Promise.all(e.map((function(s){return s.then((function(s){var i=n+ ++a/e.length*(r-n);return t(i),s})),s})))}function Kp(e,t){return s(this,void 0,void 0,(function(){var n,r,a,s,o,u,c,h,p;return i(this,(function(i){switch(i.label){case 0:return null==t&&(t={}),n=null==t.fetchFunc?l().platform.fetch:t.fetchFunc,r=e.map((function(e){return n(e,t.requestInit,{isBinary:!0})})),a=0,s=.5,null!=t.onProgress?[3,2]:[4,Promise.all(r)];case 1:return o=i.sent(),[3,4];case 2:return[4,jp(r,t.onProgress,a,s)];case 3:o=i.sent(),i.label=4;case 4:return u=o.map((function(e){return e.arrayBuffer()})),c=.5,h=1,null!=t.onProgress?[3,6]:[4,Promise.all(u)];case 5:return p=i.sent(),[3,8];case 6:return[4,jp(u,t.onProgress,c,h)];case 7:p=i.sent(),i.label=8;case 8:return[2,p]}}))}))}function Xp(e){var t=this;return function(n,r,a){return void 0===r&&(r=""),s(t,void 0,void 0,(function(){var t,s,o,u,l,c,h,p,d,f;return i(this,(function(i){switch(i.label){case 0:if(t=n.map((function(){return!1})),s={},o=null!=a?a.map((function(){return!1})):[],u=[],n.forEach((function(e,n){var r=0;e.weights.forEach((function(e){var i="quantization"in e?e.quantization.dtype:e.dtype,l=pp[i]*R(e.shape),c=function(){t[n]=!0,null==s[n]&&(s[n]=[]),s[n].push({manifestEntry:e,groupOffset:r,sizeBytes:l})};null!=a?a.forEach((function(t,n){t===e.name&&(c(),o[n]=!0)})):c(),u.push(e.name),r+=l}))})),!o.every((function(e){return e})))throw l=a.filter((function(e,t){return!o[t]})),new Error("Could not find weights in manifest with names: "+l.join(", ")+". \nManifest JSON has weights with names: "+u.join(", ")+".");return c=t.reduce((function(e,t,n){return t&&e.push(n),e}),[]),h=[],c.forEach((function(e){n[e].paths.forEach((function(e){var t=r+(r.endsWith("/")?"":"/")+e;h.push(t)}))})),[4,e(h)];case 1:return p=i.sent(),d={},f=0,c.forEach((function(e){for(var t=n[e].paths.length,r=0,a=0;a<t;a++)r+=p[f+a].byteLength;for(var i=new ArrayBuffer(r),o=new Uint8Array(i),u=0,l=0;l<t;l++){var c=new Uint8Array(p[f+l]);o.set(c,u),u+=c.byteLength}s[e].forEach((function(e){var t=dp(i.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(var n in t)d[n]=t[n]})),f+=t})),[2,d]}}))}))}}xp.registerSaveRouter((function(e){return l().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Hp.URL_SCHEME)?function(e){return void 0===e&&(e="model"),new Hp(e)}(e.slice(Hp.URL_SCHEME.length)):null}));var Yp=function(){function e(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,null!=t.fetchFunc?(N("function"==typeof t.fetchFunc,(function(){return"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"})),this.fetch=t.fetchFunc):this.fetch=l().platform.fetch,N(null!=e&&e.length>0,(function(){return"URL path for http must not be null, undefined or empty."})),Array.isArray(e)&&N(2===e.length,(function(){return"URL paths for http must have a length of 2, (actual length is "+e.length+")."})),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}return e.prototype.save=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a;return i(this,(function(s){switch(s.label){case 0:if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");return(t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,userDefinedMetadata:e.userDefinedMetadata,weightsManifest:n},t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin"),[4,this.fetch(this.path,t)];case 1:if((a=s.sent()).ok)return[2,{modelArtifactsInfo:bp(e),responses:[a]}];throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+a.status+".")}}))}))},e.prototype.load=function(){return s(this,void 0,void 0,(function(){var e,t,n,r,a,s,o,u,l,c,h,p;return i(this,(function(i){switch(i.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(e=i.sent()).ok)throw new Error("Request to "+this.path+" failed with status code "+e.status+". Please verify this URL points to the model JSON of the model to load.");i.label=2;case 2:return i.trys.push([2,4,,5]),[4,e.json()];case 3:return t=i.sent(),[3,5];case 4:throw i.sent(),n="Failed to parse model JSON of response from "+this.path+".",this.path.endsWith(".pb")?n+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":n+=" Please make sure the server is serving valid JSON for this request.",new Error(n);case 5:if(r=t.modelTopology,a=t.weightsManifest,s=t.generatedBy,o=t.convertedBy,u=t.format,l=t.userDefinedMetadata,null==r&&null==a)throw new Error("The JSON from HTTP path "+this.path+" contains neither model topology or manifest for weights.");return null==a?[3,7]:[4,this.loadWeights(a)];case 6:p=i.sent(),c=p[0],h=p[1],i.label=7;case 7:return[2,{modelTopology:r,weightSpecs:c,weightData:h,userDefinedMetadata:l,generatedBy:s,convertedBy:o,format:u}]}}))}))},e.prototype.loadWeights=function(e){return s(this,void 0,void 0,(function(){var t,n,r,a,s,o,u,l,c,h,p;return i(this,(function(i){switch(i.label){case 0:for(t=Array.isArray(this.path)?this.path[1]:this.path,n=function(e){var t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=n[0],a=n[1],s=this.weightPathPrefix||r,o=[],u=0,l=e;u<l.length;u++)c=l[u],o.push.apply(o,c.weights);return h=[],e.forEach((function(e){e.paths.forEach((function(e){h.push(s+e+a)}))})),[4,Kp(h,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return p=i.sent(),[2,[o,vp(p)]]}}))}))},e.URL_SCHEME_REGEX=/^https?:\/\//,e}();function Jp(e){return null!=e.match(Yp.URL_SCHEME_REGEX)}var Zp=function(e,t){return"undefined"==typeof fetch?null:(Array.isArray(e)?e.every((function(e){return Jp(e)})):Jp(e))?Qp(e,{onProgress:t}):null};function Qp(e,t){return new Yp(e,t)}xp.registerSaveRouter(Zp),xp.registerLoadRouter(Zp);var ed,td=function(){function e(e){this.modelArtifacts=e}return e.prototype.load=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){return[2,this.modelArtifacts]}))}))},e}(),nd=function(){function e(e){this.saveHandler=e}return e.prototype.save=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){return[2,this.saveHandler(e)]}))}))},e}(),rd=Object.freeze({browserFiles:function(e){return new qp(e)},browserHTTPRequest:function(e,t){return Qp(e,t)},concatenateArrayBuffers:vp,decodeWeights:dp,encodeWeights:function(e,t){return s(this,void 0,void 0,(function(){var n,r,a,o,u,l=this;return i(this,(function(c){switch(c.label){case 0:for(n=[],r=[],a=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e),o=function(o){var u=a[o],c=Array.isArray(e)?e[o].tensor:e[u];if("float32"!==c.dtype&&"int32"!==c.dtype&&"bool"!==c.dtype&&"string"!==c.dtype)throw new Error("Unsupported dtype in weight '"+u+"': "+c.dtype);var h={name:u,shape:c.shape,dtype:c.dtype};if("string"===c.dtype){var p=new Promise((function(e){return s(l,void 0,void 0,(function(){var t,n,r,a,s,o,u;return i(this,(function(i){switch(i.label){case 0:return[4,c.bytes()];case 1:for(t=i.sent(),n=t.reduce((function(e,t){return e+t.length}),0)+4*t.length,r=new Uint8Array(n),a=0,s=0;s<t.length;s++)o=t[s],u=new Uint8Array(new Uint32Array([o.length]).buffer),r.set(u,a),a+=4,r.set(o,a),a+=o.length;return e(r),[2]}}))}))}));r.push(p)}else r.push(c.data());null!=t&&(h.group=t),n.push(h)},u=0;u<a.length;++u)o(u);return[4,Promise.all(r)];case 1:return[2,{data:fp(c.sent()),specs:n}]}}))}))},fromMemory:function(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new td(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new td({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new td({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))},getLoadHandlers:function(e,t){return xp.getLoadHandlers(e,t)},getModelArtifactsInfoForJSON:bp,getSaveHandlers:function(e){return xp.getSaveHandlers(e)},http:Qp,isHTTPScheme:Jp,loadWeights:function(e,t,n,r){return void 0===t&&(t=""),s(this,void 0,void 0,(function(){return i(this,(function(a){return[2,Xp((function(e){return Kp(e,{requestInit:r})}))(e,t,n)]}))}))},registerLoadRouter:function(e){return xp.registerLoadRouter(e)},registerSaveRouter:function(e){return xp.registerSaveRouter(e)},weightsLoaderFactory:Xp,withSaveHandler:function(e){return new nd(e)},copyModel:function(e,t){return s(this,void 0,void 0,(function(){return i(this,(function(n){return[2,Cp(e,t,!1)]}))}))},listModels:function(){return s(this,void 0,void 0,(function(){var e,t,n,r,a,s,o;return i(this,(function(i){switch(i.label){case 0:e=kp.getSchemes(),t={},n=0,r=e,i.label=1;case 1:return n<r.length?(a=r[n],[4,kp.getManager(a).listModels()]):[3,4];case 2:for(o in s=i.sent())t[a+wp+o]=s[o];i.label=3;case 3:return n++,[3,1];case 4:return[2,t]}}))}))},moveModel:function(e,t){return s(this,void 0,void 0,(function(){return i(this,(function(n){return[2,Cp(e,t,!0)]}))}))},removeModel:function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){return t=Ip(e),[2,kp.getManager(t.scheme).removeModel(t.path)]}))}))}}),ad=Nn({confusionMatrix_:function(e,t,n){var r=dn(e,"labels","confusionMatrix"),a=dn(t,"predictions","confusionMatrix");N(null==n||n>0&&Number.isInteger(n),(function(){return"If provided, numClasses must be a positive integer, but got "+n})),N(1===r.rank,(function(){return"Expected the rank of labels to be 1, but got "+r.rank})),N(1===a.rank,(function(){return"Expected the rank of predictions to be 1, but got "+a.rank})),N(r.shape[0]===a.shape[0],(function(){return"Mismatch in the number of examples: "+r.shape[0]+" vs. "+a.shape[0]+". Labels and predictions should have the same number of elements."})),N(n>0&&Number.isInteger(n),(function(){return"numClasses is required to be a positive integer, but got "+n}));var s=el(r.asType("int32"),n),i=el(a.asType("int32"),n);return s.transpose().matMul(i).asType("int32")}}),sd=Object.freeze({confusionMatrix:ad}),id=Nn({fromPixels_:function(e,t){if(void 0===t&&(t=3),t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");var n=!1,r=!1,a=!1,s=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else{if(null==e.getContext)throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a&&a&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(null!=d("FromPixels",Le.backendName))return Le.runKernel("FromPixels",{pixels:e},{numChannels:t});var o,u,l=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],c=l[0],h=l[1];if(i?o=e.getContext("2d").getImageData(0,0,c,h).data:r||n?o=e.data:(s||a)&&(null==ed&&(ed=document.createElement("canvas").getContext("2d")),ed.canvas.width=c,ed.canvas.height=h,ed.drawImage(e,0,0,c,h),o=ed.getImageData(0,0,c,h).data),4===t)u=new Int32Array(o);else{var p=c*h;u=new Int32Array(p*t);for(var f=0;f<p;f++)for(var m=0;m<t;++m)u[f*t+m]=o[4*f+m]}return $n(u,[h,c,t],"int32")}}),od=Object.freeze({toPixels:function(e,t){return s(this,void 0,void 0,(function(){var n,r,a,s,o,u,l,c,h,p,d,f,m,g,v,y,b,x,w,k,I,C,N;return i(this,(function(i){switch(i.label){case 0:if(n=dn(e,"img","toPixels"),e instanceof xe||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank "+n.rank+".");if(r=n.shape.slice(0,2),a=r[0],s=r[1],(o=2===n.rank?1:n.shape[2])>4||2===o)throw new Error("toPixels only supports depth of size 1, 3 or 4 but got "+o);return[4,n.data()];case 1:return u=i.sent(),l=n.min(),c=n.max(),[4,Promise.all([l.data(),c.data()])];case 2:if(h=i.sent(),p=h[0],d=h[1],f=p[0],m=d[0],l.dispose(),c.dispose(),"float32"===n.dtype){if(f<0||m>1)throw new Error("Tensor values for a float32 Tensor must be in the range [0 - 1] but got range ["+f+" - "+m+"].")}else{if("int32"!==n.dtype)throw new Error("Unsupported type for toPixels: "+n.dtype+". Please use float32 or int32 tensors.");if(f<0||m>255)throw new Error("Tensor values for a int32 Tensor must be in the range [0 - 255] but got range ["+f+" - "+m+"].")}for(g="float32"===n.dtype?255:1,v=new Uint8ClampedArray(s*a*4),y=0;y<a*s;++y)b=void 0,x=void 0,w=void 0,k=void 0,1===o?(b=u[y]*g,x=u[y]*g,w=u[y]*g,k=255):3===o?(b=u[3*y]*g,x=u[3*y+1]*g,w=u[3*y+2]*g,k=255):4===o&&(b=u[4*y]*g,x=u[4*y+1]*g,w=u[4*y+2]*g,k=u[4*y+3]*g),v[0+(I=4*y)]=Math.round(b),v[I+1]=Math.round(x),v[I+2]=Math.round(w),v[I+3]=Math.round(k);return null!=t&&(t.width=s,t.height=a,C=t.getContext("2d"),N=new ImageData(v,s,a),C.putImageData(N,0,0)),n!==e&&n.dispose(),[2,v]}}))}))},fromPixels:id}),ud=function(){function e(){}return e.prototype.getClassName=function(){return this.constructor.className},e.fromConfig=function(e,t){return new e(t)},e}(),ld=function(){function e(){this.classNameMap={}}return e.getMap=function(){return null==e.instance&&(e.instance=new e),e.instance},e.register=function(t){e.getMap().classNameMap[t.className]=[t,t.fromConfig]},e}();function cd(e){N(null!=e.className,(function(){return"Class being registered does not have the static className property defined."})),N("string"==typeof e.className,(function(){return"className is required to be a string, but got type "+typeof e.className})),N(e.className.length>0,(function(){return"Class being registered has an empty-string as its className, which is disallowed."})),ld.register(e)}var hd=Object.freeze({Serializable:ud,SerializationMap:ld,registerClass:cd}),pd="1.7.4",dd=Object.freeze({gpgpu_util:fo,webgl_util:zt,forceHalfFloat:function(){l().set("WEBGL_FORCE_F16_TEXTURES",!0)},MathBackendWebGL:gu,setWebGLContext:He,GPGPUContext:mo}),fd=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return a(t,e),t.prototype.minimize=function(e,t,n){void 0===t&&(t=!1);var r=this.computeGradients(e,n),a=r.value,s=r.grads;if(null!=n){var i=n.map((function(e){return{name:e.name,tensor:s[e.name]}}));this.applyGradients(i)}else this.applyGradients(s);return Jt(s),t?a:(a.dispose(),null)},Object.defineProperty(t.prototype,"iterations",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),t.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},t.prototype.computeGradients=function(e,t){return Za(e,t)},t.prototype.dispose=function(){null!=this.iterations_&&Jt(this.iterations_)},t.prototype.saveIterations=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){return null==this.iterations_&&(this.iterations_=0),[2,{name:"iter",tensor:Dn(this.iterations_,"int32")}]}))}))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){throw new Error("getWeights() is not implemented for this optimizer yet.")}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(e){throw new Error("setWeights() is not implemented for this optimizer class "+this.getClassName())}))}))},t.prototype.extractIterations=function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){switch(n.label){case 0:return t=this,[4,e[0].tensor.data()];case 1:return t.iterations_=n.sent()[0],[2,e.slice(1)]}}))}))},t}(ud);Object.defineProperty(fd,Symbol.hasInstance,{value:function(e){return null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients}});var md=function(e){function t(t,n,r){void 0===r&&(r=null);var a=e.call(this)||this;return a.learningRate=t,a.rho=n,a.epsilon=r,a.accumulatedGrads=[],a.accumulatedUpdates=[],null==r&&(a.epsilon=Le.backend.epsilon()),a}return a(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Le.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accum_grad",variable:Yt((function(){return Hn(a).variable(!1)}))}),null==t.accumulatedUpdates[r]&&(t.accumulatedUpdates[r]={originalName:n+"/accum_var",variable:Yt((function(){return Hn(a).variable(!1)}))});var s=Array.isArray(e)?e[r].tensor:e[n];if(null!=s){var i=t.accumulatedGrads[r].variable,o=t.accumulatedUpdates[r].variable;Yt((function(){var e=i.mul(t.rho).add(s.square().mul(1-t.rho)),n=o.add(t.epsilon).sqrt().div(i.add(t.epsilon).sqrt()).mul(s),r=o.mul(t.rho).add(n.square().mul(1-t.rho));i.assign(e),o.assign(r);var u=n.mul(-t.learningRate).add(a);a.assign(u)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedUpdates&&(Jt(this.accumulatedGrads.map((function(e){return e.variable}))),Jt(this.accumulatedUpdates.map((function(e){return e.variable}))))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return e=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=e.length/2,this.accumulatedGrads=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedUpdates=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.rho,t.epsilon)},t.className="Adadelta",t}(fd);cd(md);var gd=function(e){function t(t,n){void 0===n&&(n=.1);var r=e.call(this)||this;return r.learningRate=t,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return a(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Le.registeredVariables[n];null==t.accumulatedGrads[r]&&(t.accumulatedGrads[r]={originalName:n+"/accumulator",variable:Yt((function(){return Wn(a.shape,t.initialAccumulatorValue).variable(!1)}))});var s=Array.isArray(e)?e[r].tensor:e[n];if(null!=s){var i=t.accumulatedGrads[r].variable;Yt((function(){var e=i.add(s.square());i.assign(e);var n=s.div(e.add(Le.backend.epsilon()).sqrt()).mul(-t.learningRate).add(a);a.assign(n)}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedGrads&&Jt(this.accumulatedGrads.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulatedGrads.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulatedGrads=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},t.fromConfig=function(e,t){return new e(t.learningRate,t.initialAccumulatorValue)},t.className="Adagrad",t}(fd);cd(gd);var vd=function(e){function t(t,n,r,a){void 0===a&&(a=null);var s=e.call(this)||this;return s.learningRate=t,s.beta1=n,s.beta2=r,s.epsilon=a,s.accumulatedFirstMoment=[],s.accumulatedSecondMoment=[],Yt((function(){s.accBeta1=Dn(n).variable(),s.accBeta2=Dn(r).variable()})),null==a&&(s.epsilon=Le.backend.epsilon()),s}return a(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);Yt((function(){var r=Aa(1,t.accBeta1),a=Aa(1,t.accBeta2);n.forEach((function(n,s){var i=Le.registeredVariables[n];null==t.accumulatedFirstMoment[s]&&(t.accumulatedFirstMoment[s]={originalName:n+"/m",variable:Yt((function(){return Hn(i).variable(!1)}))}),null==t.accumulatedSecondMoment[s]&&(t.accumulatedSecondMoment[s]={originalName:n+"/v",variable:Yt((function(){return Hn(i).variable(!1)}))});var o=Array.isArray(e)?e[s].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[s].variable,l=t.accumulatedSecondMoment[s].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2).add(o.square().mul(1-t.beta2)),p=c.div(r),d=h.div(a);u.assign(c),l.assign(h);var f=p.div(d.sqrt().add(t.epsilon)).mul(-t.learningRate).add(i);i.assign(f)}})),t.accBeta1.assign(t.accBeta1.mul(t.beta1)),t.accBeta2.assign(t.accBeta2.mul(t.beta2))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Jt(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedSecondMoment&&Jt(this.accumulatedSecondMoment.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return e=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){var t,n=this;return i(this,(function(r){switch(r.label){case 0:return[4,this.extractIterations(e)];case 1:return e=r.sent(),Yt((function(){n.accBeta1.assign(Ea(n.beta1,n.iterations_+1)),n.accBeta2.assign(Ea(n.beta2,n.iterations_+1))})),t=e.length/2,this.accumulatedFirstMoment=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedSecondMoment=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)},t.className="Adam",t}(fd);cd(vd);var yd=function(e){function t(t,n,r,a,s){void 0===a&&(a=null),void 0===s&&(s=0);var i=e.call(this)||this;return i.learningRate=t,i.beta1=n,i.beta2=r,i.epsilon=a,i.decay=s,i.accumulatedFirstMoment=[],i.accumulatedWeightedInfNorm=[],Yt((function(){i.iteration=Dn(0).variable(),i.accBeta1=Dn(n).variable()})),null==a&&(i.epsilon=Le.backend.epsilon()),i}return a(t,e),t.prototype.applyGradients=function(e){var t=this,n=Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e);Yt((function(){var r=Aa(1,t.accBeta1),a=Fa(-t.learningRate,t.iteration.mul(t.decay).add(1));n.forEach((function(n,s){var i=Le.registeredVariables[n];null==t.accumulatedFirstMoment[s]&&(t.accumulatedFirstMoment[s]={originalName:n+"/m",variable:Hn(i).variable(!1)}),null==t.accumulatedWeightedInfNorm[s]&&(t.accumulatedWeightedInfNorm[s]={originalName:n+"/v",variable:Hn(i).variable(!1)});var o=Array.isArray(e)?e[s].tensor:e[n];if(null!=o){var u=t.accumulatedFirstMoment[s].variable,l=t.accumulatedWeightedInfNorm[s].variable,c=u.mul(t.beta1).add(o.mul(1-t.beta1)),h=l.mul(t.beta2),p=o.abs(),d=h.maximum(p);u.assign(c),l.assign(d);var f=a.div(r).mul(c.div(d.add(t.epsilon))).add(i);i.assign(f)}})),t.iteration.assign(t.iteration.add(1)),t.accBeta1.assign(t.accBeta1.mul(t.beta1))})),this.incrementIterations()},t.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Jt(this.accumulatedFirstMoment.map((function(e){return e.variable}))),null!=this.accumulatedWeightedInfNorm&&Jt(this.accumulatedWeightedInfNorm.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){throw new Error("getWeights() is not implemented for Adamax yet.")}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(e){throw new Error("setWeights() is not implemented for Adamax yet.")}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},t.fromConfig=function(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)},t.className="Adamax",t}(fd);cd(yd);var bd=function(e){function t(t){var n=e.call(this)||this;return n.learningRate=t,n.setLearningRate(t),n}return a(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Array.isArray(e)?e[r].tensor:e[n];if(null!=a){var s=Le.registeredVariables[n];Yt((function(){var e=t.c.mul(a).add(s);s.assign(e)}))}})),this.incrementIterations()},t.prototype.setLearningRate=function(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Zt(Dn(-e))},t.prototype.dispose=function(){this.c.dispose()},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()]]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:if(0!==(e=t.sent()).length)throw new Error("SGD optimizer does not have settable weights.");return[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate}},t.fromConfig=function(e,t){return new e(t.learningRate)},t.className="SGD",t}(fd);cd(bd);var xd=function(e){function t(t,n,r){void 0===r&&(r=!1);var a=e.call(this,t)||this;return a.learningRate=t,a.momentum=n,a.useNesterov=r,a.accumulations=[],a.m=Dn(a.momentum),a}return a(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Le.registeredVariables[n];null==t.accumulations[r]&&(t.accumulations[r]={originalName:n+"/momentum",variable:Yt((function(){return Hn(a).variable(!1)}))});var s=t.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[n];null!=i&&Yt((function(){var e,n=t.m.mul(s).add(i);e=t.useNesterov?t.c.mul(i.add(n.mul(t.m))).add(a):t.c.mul(n).add(a),s.assign(n),a.assign(e)}))})),this.incrementIterations()},t.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&Jt(this.accumulations.map((function(e){return e.variable})))},t.prototype.setMomentum=function(e){this.momentum=e},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){return i(this,(function(e){switch(e.label){case 0:return[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(this.accumulations.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){return i(this,(function(t){switch(t.label){case 0:return[4,this.extractIterations(e)];case 1:return e=t.sent(),this.accumulations=e.map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},t.fromConfig=function(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)},t.className="Momentum",t}(bd);cd(xd);var wd=function(e){function t(t,n,r,a,s){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===a&&(a=null),void 0===s&&(s=!1);var i=e.call(this)||this;if(i.learningRate=t,i.decay=n,i.momentum=r,i.epsilon=a,i.accumulatedMeanSquares=[],i.accumulatedMoments=[],i.accumulatedMeanGrads=[],i.centered=s,null==a&&(i.epsilon=Le.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.");return i}return a(t,e),t.prototype.applyGradients=function(e){var t=this;(Array.isArray(e)?e.map((function(e){return e.name})):Object.keys(e)).forEach((function(n,r){var a=Le.registeredVariables[n];null==t.accumulatedMeanSquares[r]&&(t.accumulatedMeanSquares[r]={originalName:n+"/rms",variable:Yt((function(){return Hn(a).variable(!1)}))}),null==t.accumulatedMoments[r]&&(t.accumulatedMoments[r]={originalName:n+"/momentum",variable:Yt((function(){return Hn(a).variable(!1)}))}),null==t.accumulatedMeanGrads[r]&&t.centered&&(t.accumulatedMeanGrads[r]={originalName:n+"/mg",variable:Yt((function(){return Hn(a).variable(!1)}))});var s=Array.isArray(e)?e[r].tensor:e[n];if(null!=s){var i=t.accumulatedMeanSquares[r].variable,o=t.accumulatedMoments[r].variable;Yt((function(){var e=i.mul(t.decay).add(s.square().mul(1-t.decay));if(t.centered){var n=t.accumulatedMeanGrads[r].variable,u=n.mul(t.decay).add(s.mul(1-t.decay)),l=o.mul(t.momentum).add(s.mul(t.learningRate).div(e.sub(u.square().add(t.epsilon)).sqrt()));i.assign(e),n.assign(u),o.assign(l);var c=a.sub(l);a.assign(c)}else{var h=i.mul(t.decay).add(s.square().mul(1-t.decay));l=o.mul(t.momentum).add(s.mul(t.learningRate).div(h.add(t.epsilon).sqrt())),i.assign(h),o.assign(l),c=a.sub(l),a.assign(c)}}))}})),this.incrementIterations()},t.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&Jt(this.accumulatedMeanSquares.map((function(e){return e.variable}))),null!=this.accumulatedMeanGrads&&this.centered&&Jt(this.accumulatedMeanGrads.map((function(e){return e.variable}))),null!=this.accumulatedMoments&&Jt(this.accumulatedMoments.map((function(e){return e.variable})))},t.prototype.getWeights=function(){return s(this,void 0,void 0,(function(){var e;return i(this,(function(t){switch(t.label){case 0:return e=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&e.push.apply(e,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(e.map((function(e){return{name:e.originalName,tensor:e.variable}})))]}}))}))},t.prototype.setWeights=function(e){return s(this,void 0,void 0,(function(){var t;return i(this,(function(n){switch(n.label){case 0:return[4,this.extractIterations(e)];case 1:return e=n.sent(),t=this.centered?e.length/3:e.length/2,this.accumulatedMeanSquares=e.slice(0,t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.accumulatedMoments=e.slice(t,2*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((function(e){return{originalName:e.name,variable:e.tensor.variable(!1)}}))),[2]}}))}))},t.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},t.fromConfig=function(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)},t.className="RMSProp",t}(fd);cd(wd);var kd=function(){function e(){}return e.sgd=function(e){return new bd(e)},e.momentum=function(e,t,n){return void 0===n&&(n=!1),new xd(e,t,n)},e.rmsprop=function(e,t,n,r,a){return void 0===t&&(t=.9),void 0===n&&(n=0),void 0===r&&(r=null),void 0===a&&(a=!1),new wd(e,t,n,r,a)},e.adam=function(e,t,n,r){return void 0===e&&(e=.001),void 0===t&&(t=.9),void 0===n&&(n=.999),void 0===r&&(r=null),new vd(e,t,n,r)},e.adadelta=function(e,t,n){return void 0===e&&(e=.001),void 0===t&&(t=.95),void 0===n&&(n=null),new md(e,t,n)},e.adamax=function(e,t,n,r,a){return void 0===e&&(e=.002),void 0===t&&(t=.9),void 0===n&&(n=.999),void 0===r&&(r=null),void 0===a&&(a=0),new yd(e,t,n,r,a)},e.adagrad=function(e,t){return void 0===t&&(t=.1),new gd(e,t)},e}(),Id={sgd:kd.sgd,momentum:kd.momentum,adadelta:kd.adadelta,adagrad:kd.adagrad,rmsprop:kd.rmsprop,adamax:kd.adamax,adam:kd.adam},Cd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:function(e){return e()};function Nd(){return new Promise((function(e){return Cd((function(){return e()}))}))}xe.prototype.add=function(e){return Dr(this,e)},xe.prototype.broadcastTo=function(e){return Vu(this,e)},xe.prototype.div=function(e){return Fa(this,e)},xe.prototype.divNoNan=function(e){return Yu(this,e)},xe.prototype.squaredDifference=function(e){return yl(this,e)},xe.prototype.tile=function(e){return Ju(this,e)},xe.prototype.oneHot=function(e,t,n){return void 0===t&&(t=1),void 0===n&&(n=0),el(this,e,t,n)},xe.prototype.transpose=function(e){return rs(this,e)},xe.prototype.pad=function(e,t){return tl(this,e,t)},xe.prototype.batchNorm=function(e,t,n,r,a){return Fu(this,e,t,n,r,a)},ye=Lh},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?v:g;if(t){if(e<0)return v;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));s=s.mul(p).add(o(h))}else s=(s=s.mul(a)).add(o(h))}return s.unsigned=t,s}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var v=i(0,!0);n.UZERO=v;var y=i(1);n.ONE=y;var b=i(1,!0);n.UONE=b;var x=i(-1);n.NEG_ONE=x;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return 1==(1&this.low)},C.isEven=function(){return 0==(1&this.low)},C.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},C.neg=C.negate,C.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,p+=(d+=a+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},C.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,v=0,y=0,b=0;return y+=(b+=i*d)>>>16,v+=(y+=s*d)>>>16,y&=65535,v+=(y+=i*p)>>>16,f+=(v+=a*d)>>>16,v&=65535,f+=(v+=s*p)>>>16,v&=65535,f+=(v+=i*c)>>>16,f+=n*d+a*p+s*c+i*l,u((y&=65535)<<16|(b&=65535),(f&=65535)<<16|(v&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?v:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return v;if(e.gt(this.shru(1)))return b;s=v}else{if(this.eq(I))return e.eq(y)||e.eq(x)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?y:x:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?v:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(a);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=y),s=s.add(p),a=a.sub(d)}return s},C.div=C.divide,C.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return u(~this.low,~this.high,this.unsigned)},C.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var r=n(832),a=n(652),s=n(801),i=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=v(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(a)]}}():e,3),r),d=new f(r),b=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return b.int32=function(){return 0|d.g(4)},b.quick=function(){return d.g(4)/4294967296},b.double=b,v(y(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(b,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function v(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,v(s.random(),a),e.exports){e.exports=d;try{i=n(42)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},902:()=>{},522:()=>{},753:()=>{},755:()=>{},4:()=>{},759:()=>{},549:()=>{},401:()=>{},42:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>hs,computeFlatOffset:()=>Cs,computeOutShape:()=>ds,getNormalizedAxes:()=>vs,isSliceContinous:()=>Is,maskToAxes:()=>ps,parseSliceParams:()=>Ns,sliceInfo:()=>Ss,startForAxis:()=>ws,startIndicesWithElidedDims:()=>ys,stopForAxis:()=>ks,stopIndicesWithElidedDims:()=>bs,stridesForAxis:()=>xs,stridesWithElidedDims:()=>fs});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Ql,computeOutShape:()=>Zl,segOpComputeOptimalWindowSize:()=>Jl});var r={};n.r(r),n.d(r,{ERF_A1:()=>Al,ERF_A2:()=>Dl,ERF_A3:()=>Fl,ERF_A4:()=>_l,ERF_A5:()=>$l,ERF_P:()=>Rl,PARALLELIZE_THRESHOLD:()=>ml,SELU_SCALE:()=>Tl,SELU_SCALEALPHA:()=>El,applyActivation:()=>uu,assertAndGetBroadcastShape:()=>Ri,assertAxesAreInnerMostDims:()=>so,assertParamsConsistent:()=>dl,assignToTypedArray:()=>zl,axesAreInnerMostDims:()=>to,calculateShapes:()=>Sl,checkEinsumDimSizes:()=>ql,combineLocations:()=>no,complexWithEvenIndex:()=>Ll,complexWithOddIndex:()=>Bl,computeConv2DInfo:()=>js,computeConv3DInfo:()=>Ks,computeDefaultPad:()=>Xs,computeDilation2DInfo:()=>Gs,computeOptimalWindowSize:()=>gl,computeOutAndReduceShapes:()=>ro,computeOutShape:()=>fl,computePool2DInfo:()=>Hs,computePool3DInfo:()=>qs,convertConv2DDataFormat:()=>ni,decodeEinsumEquation:()=>Gl,eitherStridesOrDilationsAreOne:()=>ti,expandShapeToKeepDim:()=>ao,exponent:()=>Vl,exponents:()=>Wl,fromStringArrayToUint8:()=>tc,fromUint8ToStringArray:()=>ec,getAxesPermutation:()=>io,getBroadcastDims:()=>Ei,getComplexWithIndex:()=>Pl,getEinsumComputePath:()=>jl,getEinsumPermutation:()=>Hl,getFusedBiasGradient:()=>ou,getFusedDyActivation:()=>iu,getImageCenter:()=>vl,getInnerMostAxes:()=>uo,getPermuted:()=>bl,getReductionAxes:()=>Ti,getReshaped:()=>yl,getReshapedPermuted:()=>xl,getSliceBeginCoords:()=>wl,getSliceSize:()=>kl,getUndoAxesPermutation:()=>oo,isIdentityPermutation:()=>Kl,log:()=>j,mergeRealAndImagArrays:()=>Ol,prepareAndValidate:()=>Il,prepareSplitSize:()=>Yl,segment_util:()=>t,shouldFuse:()=>lu,slice_util:()=>e,splitRealAndImagArrays:()=>Ml,tupleValuesAreOne:()=>ei,upcastType:()=>Jr,validateInput:()=>Nl,validateUpdateShape:()=>Cl,warn:()=>q});var a={};n.r(a),n.d(a,{addImpl:()=>pb,bincountImpl:()=>ax,bincountReduceImpl:()=>sx,ceilImpl:()=>ux,concatImpl:()=>fx,equalImpl:()=>Yx,expImpl:()=>ow,expm1Impl:()=>pw,floorImpl:()=>Rw,gatherNdImpl:()=>Lw,gatherV2Impl:()=>Pw,greaterEqualImpl:()=>Gw,greaterImpl:()=>Ww,lessEqualImpl:()=>rk,lessImpl:()=>ek,linSpaceImpl:()=>ik,logImpl:()=>uk,maxImpl:()=>Ik,maximumImpl:()=>Sk,minimumImpl:()=>Mk,multiplyImpl:()=>Vx,negImpl:()=>qk,notEqualImpl:()=>eI,prodImpl:()=>dI,rangeImpl:()=>mI,rsqrtImpl:()=>EI,sigmoidImpl:()=>Qy,simpleAbsImpl:()=>wb,sliceImpl:()=>ex,sparseFillEmptyRowsImpl:()=>jI,sparseReshapeImpl:()=>XI,sparseSegmentReductionImpl:()=>JI,sqrtImpl:()=>nC,squaredDifferenceImpl:()=>iC,stridedSliceImpl:()=>hC,stringNGramsImpl:()=>fC,stringSplitImpl:()=>vC,stringToHashBucketFastImpl:()=>bC,subImpl:()=>yw,tileImpl:()=>CC,topKImpl:()=>EC,transposeImpl:()=>Tb,uniqueImpl:()=>_C});var s=n(851);class i{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return u("refCount")}incRef(e){return u("incRef")}timerAvailable(){return!0}time(e){return u("time")}read(e){return u("read")}readSync(e){return u("readSync")}numDataIds(){return u("numDataIds")}disposeData(e,t){return u("disposeData")}write(e,t,n){return u("write")}move(e,t,n,r,a){return u("move")}memory(){return u("memory")}floatPrecision(){return u("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return u("dispose")}}function u(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,p(e,t,n)}function c(e,t,n){return Math.max(e,Math.min(t,n))}function h(e){return e%2==0?e:e+1}function p(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function f(e,t,n=""){d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function m(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)g(e[r],t,n);else t.push(e);return t}function v(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function I(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function C(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function N(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:C(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function A(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){return"string"==typeof e||e instanceof String}function F(e){return"number"==typeof e}function _(e){return Array.isArray(e)?_(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":F(e)?"float32":D(e)?"string":"boolean"==typeof e?"bool":"float32"}function $(e){return!!(e&&e.constructor&&e.call&&e.apply)}function O(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function M(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function L(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=L(e+t*o,i,n,r)}return a}function B(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return L(0,e,t,n)}function P(e,t){const n=z(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function z(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function W(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return B(e,new Float32Array(n));if("int32"===t)return B(e,new Int32Array(n));if("bool"===t)return B(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function V(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function U(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function G(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function H(e){return e&&e.then&&"function"==typeof e.then}function q(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.warn(...e)}function j(...e){Y().getBool("IS_TEST")||Y().getBool("PROD")||console.log(...e)}class K{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=X,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&q(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];q(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(H(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function X(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Y(){return Z}let J,Z=null;function Q(){if(null==J){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}J=e}return J}function ee(e,t){const n=function(){const e=Q();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const te="Abs",ne="Acos",re="Acosh",ae="Add",se="AddN",ie="All",oe="Any",ue="ArgMax",le="ArgMin",ce="Asin",he="Asinh",pe="Atan",de="Atanh",fe="Atan2",me="AvgPool",ge="AvgPoolGrad",ve="AvgPool3D",ye="AvgPool3DGrad",be="BatchMatMul",xe="BatchToSpaceND",we="Bincount",ke="Cast",Ie="Ceil",Ce="ClipByValue",Ne="Complex",Se="ComplexAbs",Ee="Concat",Te="Conv2D",Re="Conv2DBackpropFilter",Ae="Conv2DBackpropInput",De="Conv3D",Fe="Conv3DBackpropFilterV2",_e="Conv3DBackpropInputV2",$e="Cos",Oe="Cosh",Me="Cumsum",Le="CropAndResize",Be="DenseBincount",Pe="DepthToSpace",ze="DepthwiseConv2dNative",We="DepthwiseConv2dNativeBackpropFilter",Ve="DepthwiseConv2dNativeBackpropInput",Ue="Diag",Ge="Dilation2D",He="Dilation2DBackpropInput",qe="Dilation2DBackpropFilter",je="RealDiv",Ke="Einsum",Xe="Elu",Ye="EluGrad",Je="Erf",Ze="Equal",Qe="Exp",et="ExpandDims",tt="Expm1",nt="FFT",rt="Fill",at="FlipLeftRight",st="Floor",it="FloorDiv",ot="FusedBatchNorm",ut="GatherV2",lt="GatherNd",ct="Greater",ht="GreaterEqual",pt="Identity",dt="IFFT",ft="Imag",mt="IsFinite",gt="IsInf",vt="IsNan",yt="LeakyRelu",bt="Less",xt="LessEqual",wt="LinSpace",kt="Log",It="Log1p",Ct="LogicalAnd",Nt="LogicalNot",St="LogicalOr",Et="LRN",Tt="LRNGrad",Rt="Max",At="Maximum",Dt="MaxPool",Ft="MaxPoolGrad",_t="MaxPool3D",$t="MaxPool3DGrad",Ot="MaxPoolWithArgmax",Mt="Mean",Lt="Min",Bt="Minimum",Pt="MirrorPad",zt="Mod",Wt="Multinomial",Vt="Multiply",Ut="Neg",Gt="NotEqual",Ht="NonMaxSuppressionV3",qt="NonMaxSuppressionV4",jt="NonMaxSuppressionV5",Kt="OnesLike",Xt="OneHot",Yt="Pack",Jt="PadV2",Zt="Pow",Qt="Prelu",en="Prod",tn="Range",nn="Real",rn="Reciprocal",an="Relu",sn="Reshape",on="ResizeNearestNeighbor",un="ResizeNearestNeighborGrad",ln="ResizeBilinear",cn="ResizeBilinearGrad",hn="Relu6",pn="Reverse",dn="Round",fn="Rsqrt",mn="ScatterNd",gn="Select",vn="Selu",yn="Slice",bn="Sin",xn="Sinh",wn="Sign",kn="Sigmoid",In="Softplus",Cn="Sqrt",Nn="Sum",Sn="SpaceToBatchND",En="SplitV",Tn="Softmax",Rn="SparseFillEmptyRows",An="SparseReshape",Dn="SparseSegmentMean",Fn="SparseSegmentSum",_n="SparseToDense",$n="SquaredDifference",On="Square",Mn="StridedSlice",Ln="StringNGrams",Bn="StringSplit",Pn="StringToHashBucketFast",zn="Sub",Wn="Tan",Vn="Tanh",Un="Tile",Gn="TopK",Hn="Transform",qn="Transpose",jn="Unique",Kn="Unpack",Xn="UnsortedSegmentSum",Yn="ZerosLike",Jn="Step",Zn="FromPixels",Qn="RotateWithOffset",er="_FusedMatMul",tr="FusedConv2D",nr="FusedDepthwiseConv2D",rr=ee("kernelRegistry",(()=>new Map)),ar=ee("gradRegistry",(()=>new Map));function sr(e,t){const n=cr(e,t);return rr.get(n)}function ir(e){return ar.get(e)}function or(e){const t=rr.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function ur(e){const{kernelName:t,backendName:n}=e,r=cr(t,n);rr.has(r)&&q(`The kernel '${t}' for backend '${n}' is already registered`),rr.set(r,e)}function lr(e){const{kernelName:t}=e;ar.has(t)&&Y().getBool("DEBUG")&&q(`Overriding the gradient for '${t}'`),ar.set(t,e)}function cr(e,t){return`${t}_${e}`}var hr=n(720);const pr=n.n(hr)()||hr;function dr(e){return pr.fromString(e,!0,16)}const fr=dr("c3a5c85c97cb3127"),mr=dr("b492b66fbe98f273"),gr=dr("9ae16a3b2f90404f");function vr(e){return e.xor(e.shru(47))}function yr(e,t,n){const r=e.slice(t,t+n);return pr.fromBytes(Array.from(r),!0,!0)}function br(e,t){return yr(e,t,8)}function xr(e,t){return yr(e,t,4)}function wr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function kr(e,t,n=dr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ir(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=wr(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(wr(a,44)),[a.add(r),s.add(i)]}(br(e,t),br(e,t+8),br(e,t+16),br(e,t+24),n,r)}function Cr(e,t=e.length){const n=pr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=gr.add(2*t),r=br(e,0).add(gr),a=br(e,t-8);return kr(wr(a,37).mul(n).add(r),wr(r,25).add(a).mul(n),n)}if(t>=4){const n=gr.add(2*t);return kr(xr(e,0).shl(3).add(t),xr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return vr(gr.mul(n).xor(fr.mul(r))).mul(gr)}return gr}(e,t):function(e,t=e.length){const n=gr.add(2*t),r=br(e,0).mul(mr),a=br(e,8),s=br(e,t-8).mul(n),i=br(e,t-16).mul(gr);return kr(wr(r.add(a),43).add(wr(s,30)).add(i),r.add(wr(a.add(gr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=gr.add(2*t),r=br(e,0).mul(gr),a=br(e,8),s=br(e,t-8).mul(n),i=br(e,t-16).mul(gr),o=wr(r.add(a),43).add(wr(s,30)).add(i),u=kr(o,r.add(wr(a.add(gr),18)).add(s),n),l=br(e,16).mul(n),c=br(e,24),h=o.add(br(e,t-32)).mul(n),p=u.add(br(e,t-24)).mul(n);return kr(wr(l.add(c),43).add(wr(h,30)).add(p),l.add(wr(c.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(mr).add(113),s=vr(a.mul(gr).add(113)).mul(gr),i=[pr.UZERO,pr.UZERO],o=[pr.UZERO,pr.UZERO];r=r.mul(gr).add(br(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=wr(r.add(a).add(i[0]).add(br(e,u+8)),37).mul(mr),a=wr(a.add(i[1]).add(br(e,u+48)),42).mul(mr),r=r.xor(o[1]),a=a.add(i[0]).add(br(e,u+40)),s=wr(s.add(o[0]),33).mul(mr),i=Ir(e,u,i[1].mul(mr),r.add(o[0])),o=Ir(e,u+32,s.add(o[1]),a.add(br(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const h=mr.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=wr(r.add(a).add(i[0]).add(br(e,u+8)),37).mul(h),a=wr(a.add(i[1]).add(br(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(br(e,u+40))),s=wr(s.add(o[0]),33).mul(h),i=Ir(e,u,i[1].mul(h),r.add(o[0])),o=Ir(e,u+32,s.add(o[1]),a.add(br(e,u+16))),[s,r]=[r,s],kr(kr(i[0],o[0],h).add(vr(a).mul(fr)).add(s),kr(i[1],o[1],h).add(r),h)}function Nr(e,t){return"string"===t?Tr(e):Sr([e],t)}function Sr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=g(e)),Y().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Er(){return Y().platform.now()}function Tr(e,t="utf-8"){return t=t||"utf-8",Y().platform.encode(e,t)}function Rr(e,t="utf-8"){return t=t||"utf-8",Y().platform.decode(e,t)}class Ar{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Fr)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Er();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Er()-i})}if(Y().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Dr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function Dr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Fr{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?w(`${r}ms`,9):r.error,o=w(e,25),u=t.rank,l=t.size,c=w(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function _r(e,t,n,r){const a=M(t),s=function(e,t,n,r){const a=v(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?Lr(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],$r(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=Mr(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function $r(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:D(e)?`'${e}'`:"bool"===n?Or(e):parseFloat(e.toFixed(7)).toString(),w(r,t)}function Or(e){return 0===e?"false":"true"}function Mr(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[$r(Lr(e)[0],0,n)]:"bool"===n?[Or(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Lr(r),s=Lr(s)),["["+r.map(((e,t)=>$r(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>$r(e,a[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Lr(e):Array.from(e)).map(((e,t)=>$r(e,a[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,s=r+h;p.push(...Mr(e.slice(r,s),l,n,c,a,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,s=r+h;p.push(...Mr(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,s=r+h;p.push(...Mr(e.slice(r,s),l,n,c,a,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function Lr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Br{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=v(e),null!=n){const e=n.length;d(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||E(t,this.size),this.strides=M(e)}set(e,...t){0===t.length&&(t=[0]),d(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Pr().makeTensor(this.values,this.shape,this.dtype)}}let Pr=null,zr=null,Wr=null;class Vr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=v(e),this.strides=M(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return zr.buffer(this.shape,this.dtype,e)}bufferSync(){return zr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return B(this.shape,e,"complex64"===this.dtype)}arraySync(){return B(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Pr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Pr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Pr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Pr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return zr.print(this,e)}clone(){return this.throwIfDisposed(),zr.clone(this)}toString(e=!1){return _r(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),zr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Pr().makeVariable(this,e,t,n)}}function Ur(){return ee("Tensor",(()=>Vr))}Object.defineProperty(Vr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ur();class Gr extends Vr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!y(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Pr().disposeTensor(this),this.dataId=e.dataId,Pr().incRef(this,null)}dispose(){Pr().disposeVariable(this),this.isDisposedInternal=!0}}var Hr,qr,jr,Kr,Xr;Object.defineProperty(Gr,Symbol.hasInstance,{value:e=>e instanceof Vr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Hr||(Hr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(qr||(qr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(jr||(jr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Kr||(Kr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Xr||(Xr={}));const Yr={float32:Kr,int32:qr,bool:jr,complex64:Xr};function Jr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Yr[e][t]}function Zr(e){return Jr(e,"int32")}function Qr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Jr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ea(e,t){return t.some((t=>t.id===e.id))}function ta(e){const t=[];return na(e,t,new Set),t}function na(e,t,n){if(null==e)return;if(e instanceof Vr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),na(r,t,n))}}function ra(e){return null!=e.kernelName}class aa{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class sa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new aa}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(q(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ar(this.backendInstance),!0}setupRegisteredKernels(){or(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){or(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof o||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,q(`Initialization of backend ${e} failed`),q(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return q(`Initialization of backend ${e} failed`),q(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return sa.nextTensorId++}nextVariableId(){return sa.nextVariableId++}clone(e){const t=oa.runKernel(pt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return oa.runKernel(ke,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==sr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=ra(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ra(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=sr(t,this.backendName);d(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=ra(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=ir(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(d(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&D(e[0])&&(a=e.map((e=>Tr(e))));const s=r.write(a,t,n),i=new Vr(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Vr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Gr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*A(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Gr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*A(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ir(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=z(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=ta(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(d(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));d(a instanceof Vr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=P(v(e),"float32");return oa.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!y(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),ua);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return d($(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;d(t.every((e=>e instanceof Vr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),d(n.value instanceof Vr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d($(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];d(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d(s.every((e=>e instanceof Vr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Er(),n=await this.backend.time(e);return n.wallMs=Er()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new aa;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ia(){const e=Q();if(null==e._tfengine){const t=new K(e);e._tfengine=new sa(t)}var t;return t=e._tfengine.ENV,Z=t,Pr=()=>e._tfengine,e._tfengine}sa.nextTensorId=0,sa.nextVariableId=0;const oa=ia();function ua(e,t){const n={a:e,b:t};return oa.runKernel(ae,n)}function la(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ca(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const ha=Y();function pa(e,t){let n=e;if(R(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||R(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Y().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&da(e,r,[]),r}function da(e,t,n){if(n=n||[],!Array.isArray(e)&&!R(e))return void d(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));d(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),d(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)da(e[t],r,n.concat(t))}function fa(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ma(e,t,n,r="numeric"){if(e instanceof Vr)return fa(r,e.dtype,t,n),e;let a=_(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),fa(r,a,t,n),null==e||!R(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=pa(e,a);R(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Sr(e,a):g(e,[],!0);return oa.makeTensor(i,s,a)}function ga(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>ma(e,`${t}[${a}]`,n,r)))}function va(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{oa.startScope(n);try{const t=r(...e);return H(t)&&console.error("Cannot return a Promise inside of tidy."),oa.endScope(t),t}catch(e){throw oa.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}ha.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ha.registerFlag("IS_BROWSER",(()=>ca())),ha.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ha.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ha.registerFlag("PROD",(()=>!1)),ha.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ha.getBool("DEBUG"))),ha.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ha.registerFlag("IS_TEST",(()=>!1)),ha.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ha.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const ya=va({complex_:function(e,t){const n=ma(e,"real","complex"),r=ma(t,"imag","complex");f(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return oa.runKernel(Ne,a)}});function ba(e,t,n,r){if(null==r&&(r=_(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!R(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){V(t);const e=v(t),r=v(n);d(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==v(t.slice(e));d(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return R(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Sr(e,r):g(e,[],!0),oa.makeTensor(e,t,r)}function xa(e,t,n){return ba(e,t,pa(e,n),n)}async function wa(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:ka(await Promise.all(r)),specs:n}}function ka(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const Ia="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ca(e){return Ia?Buffer.byteLength(e):new Blob([e]).size}function Na(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Sa(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ea(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ca(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ca(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class Ta{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ta.instance&&(Ta.instance=new Ta),Ta.instance}static registerSaveRouter(e){Ta.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ta.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ta.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ta.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ta.getInstance().loadRouters:Ta.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const Ra="tensorflowjs",Aa="models_store",Da="model_info_store";function Fa(){if(!Y().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function _a(e){const t=e.result;t.createObjectStore(Aa,{keyPath:"modelPath"}),t.createObjectStore(Da,{keyPath:"modelPath"})}class $a{constructor(e){if(this.indexedDB=Fa(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ra,1);r.onupgradeneeded=()=>_a(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Aa,"readonly"),r=t.objectStore(Aa).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Ea(t),s=a.transaction(Da,"readwrite");let i=s.objectStore(Da);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(Aa,"readwrite");const o=u.objectStore(Aa).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(Da);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}$a.URL_SCHEME="indexeddb://";const Oa=e=>{return Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith($a.URL_SCHEME)?(t=e.slice($a.URL_SCHEME.length),new $a(t)):null;var t};Ta.registerSaveRouter(Oa),Ta.registerLoadRouter(Oa);class Ma{constructor(){this.indexedDB=Fa()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ra,1);n.onupgradeneeded=()=>_a(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(Da,"readonly"),s=a.objectStore(Da).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith($a.URL_SCHEME)?t.slice($a.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ra,1);r.onupgradeneeded=()=>_a(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(Da,"readwrite"),i=s.objectStore(Da),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(Aa,"readwrite");const r=u.objectStore(Aa).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const La="/",Ba="tensorflowjs_models",Pa="info",za="model_topology",Wa="weight_specs",Va="weight_data",Ua="model_metadata";function Ga(e){return{info:[Ba,e,Pa].join(La),topology:[Ba,e,za].join(La),weightSpecs:[Ba,e,Wa].join(La),weightData:[Ba,e,Va].join(La),modelMetadata:[Ba,e,Ua].join(La)}}function Ha(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function qa(e){const t=e.split(La);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(La)}class ja{constructor(e){if(!Y().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ga(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Ea(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Ia)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Ha(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Ia){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ja.URL_SCHEME="localstorage://";const Ka=e=>{return Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ja.URL_SCHEME)?(t=e.slice(ja.URL_SCHEME.length),new ja(t)):null;var t};Ta.registerSaveRouter(Ka),Ta.registerLoadRouter(Ka);class Xa{constructor(){d(Y().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),d("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ba+La,n=La+Pa;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[qa(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=Ga(e=(t=e).startsWith(ja.URL_SCHEME)?t.slice(ja.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Ha(n),r}}class Ya{constructor(){this.managers={}}static getInstance(){return null==Ya.instance&&(Ya.instance=new Ya),Ya.instance}static registerManager(e,t){d(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),d(e.length>0,(()=>"scheme must not be an empty string."));const n=Ya.getInstance();d(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ja{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Y().get("IS_BROWSER")){Y().setPlatform("browser",new Ja);try{Ya.registerManager(ja.URL_SCHEME,new Xa)}catch(e){}try{Ya.registerManager($a.URL_SCHEME,new Ma)}catch(e){}}let Za;function Qa(e,t="float32",n){return t=t||"float32",V(e),new Br(e,t,n)}Y().get("IS_NODE")&&Y().setPlatform("node",new class{constructor(){this.util=n(4),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Y().global.fetch?Y().global.fetch(e,t):(null==Za&&(Za=n(755)),Za(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const es=va({cast_:function(e,t){const n=ma(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return oa.runKernel(ke,r,a)}}),ts=va({clone_:function(e){const t={x:ma(e,"x","clone","string_or_numeric")};return oa.runKernel(pt,t)}});function ns(e){return new Promise((e=>setTimeout(e))).then(e)}ia(),zr={buffer:Qa,cast:es,clone:ts,print:function(e,t=!1){console.log(e.toString(t))}};class rs{constructor(e){if(!Y().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(rs.URL_SCHEME)&&(e=e.slice(rs.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Sa(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await ns((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ns((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ea(e)}}}}function as(e,t,n,r){!function(e){d(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){d(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),d(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),d(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function ss(e,t){null==t&&(t={});const n=null==t.fetchFunc?Y().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await as(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await as(a,t.onProgress,.5,1)}rs.URL_SCHEME="downloads://",Ta.registerSaveRouter((e=>Y().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(rs.URL_SCHEME)?function(e="model"){return new rs(e)}(e.slice(rs.URL_SCHEME.length)):null));class is{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(d("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Y().platform.fetch,d(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&d(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Sa(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Ea(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Na(await ss(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function os(e){return null!=e.match(is.URL_SCHEME_REGEX)}is.URL_SCHEME_REGEX=/^https?:\/\//;const us=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>os(e))):os(e),n)return function(e,t){return new is(e,t)}(e,t)}return null};let ls;Ta.registerSaveRouter(us),Ta.registerLoadRouter(us);const cs=va({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=sr(Zn,oa.backendName)){const n={pixels:e},r={numChannels:t};return oa.runKernel(Zn,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==ls&&(ls=document.createElement("canvas").getContext("2d")),ls.canvas.width=u,ls.canvas.height=l,ls.drawImage(e,0,0,u,l),c=ls.getImageData(0,0,u,l).data),4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(m(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=pa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ba(e,t,r,n)}(h,[l,u,t],"int32")}});function hs(e,t,n){const r=e.shape.length;d(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),d(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)d(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function ps(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ds(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function fs(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ms(e,t,n){return n<=e?n:n-(t-1)}function gs(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function vs(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ys(i,u,l,r,e),h=bs(o,u,l,a,e),p=fs(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=ws(i,r,s,e,t,u),h[t]=ks(o,a,s,e,t,u),p[t]=xs(s,t,u);return{begin:c,end:h,strides:p}}function ys(e,t,n,r,a){const s=[...a],i=gs(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=ms(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function bs(e,t,n,r,a){const s=[...a],i=gs(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=ms(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=c(0,s[e],a[e])}return s}function xs(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function ws(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=c(0,i,u-1),i}function ks(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?c(0,i,u):c(-1,i,u-1),i}function Is(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Cs(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ns(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{d(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(d(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function Ss(e,t,n,r,a,s,i,o,u){let l=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(l.length));const p=ps(i);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const d=e.length-l.length,f=ps(o),m=e.slice();f.forEach((e=>{l[e]=0,c[e]=1,m.splice(e,0,1)}));const{begin:g,end:v,strides:y}=vs(m,p,d,l,c,h,a,s,i);l=g,c=v,h=y;const b=ps(u);b.forEach((e=>{c[e]=l[e]+1,h[e]=1}));const x=ds(l,c,h),w=x.filter(((e,t)=>-1===b.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:l,$end:c,$strides:h,size:x,newShape:m,outShape:w}}class Es{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ts{constructor(){this.classNameMap={}}static getMap(){return null==Ts.instance&&(Ts.instance=new Ts),Ts.instance}static register(e){Ts.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Rs(e){d(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),d("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),d(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Ts.register(e)}function As(){return oa}function Ds(){return oa.memory()}function Fs(e,t){return oa.tidy(e,t)}function _s(e){ta(e).forEach((e=>e.dispose()))}function $s(e){return oa.keep(e)}function Os(e,t,n=1){return oa.registerBackend(e,t,n)}function Ms(e){return oa.customGrad(e)}function Ls(e,t){if((R(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&R(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ba(e,[],[],t)}Wr=function(e){Y().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class Bs extends Es{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return _s(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){d($(e),(()=>"The f passed in variableGrads(f) must be a function")),d(null==t||Array.isArray(t)&&t.every((e=>e instanceof Gr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in oa.registeredVariables)t.push(oa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,a=t.length;d((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`));const{value:s,grads:i}=oa.gradients(e,t,null,!0);d(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),d(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:s,grads:o}}(e,t)}dispose(){null!=this.iterations_&&_s(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ls(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Bs,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const Ps=va({abs_:function(e){const t=ma(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return oa.runKernel(Se,e)}{const e={x:t};return oa.runKernel(te,e)}}}),zs=va({add_:function(e,t){let n=ma(e,"a","add"),r=ma(t,"b","add");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(ae,a)}}),Ws=va({all_:function(e,t=null,n=!1){const r={x:ma(e,"x","all","bool")},a={axis:t,keepDims:n};return oa.runKernel(ie,r,a)}}),Vs=va({any_:function(e,t=null,n=!1){const r={x:ma(e,"x","any","bool")},a={axis:t,keepDims:n};return oa.runKernel(oe,r,a)}}),Us=va({argMax_:function(e,t=0){const n={x:ma(e,"x","argMax")},r={axis:t};return oa.runKernel(ue,n,r)}});function Gs(e,t,n,r,a="NHWC",s){return js(e,[...t,e[3]],n,s,r,null,null,ni(a))}function Hs(e,t,n,r,a,s,i="channelsLast"){const[o,u]=Ys(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return js(e,l,n,r,a,s,!1,i)}function qs(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=Js(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Ks(e,c,n,r,a,!1,h,s)}function js(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=Ys(n),[v,y]=Ys(r),b=Zs(p,v),x=Zs(d,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Xs(e,t,n));const s=e[1];return[Qs((e[0]-t+2*r)/n+1,a),Qs((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=Qs((t-s+p+d)/r+1,o),h=Qs((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(a,l,c,m,g,b,x,s,o),C=i?f*h:f;let N;return"channelsFirst"===o?N=[u,C,k,I]:"channelsLast"===o&&(N=[u,k,I,C]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:b,effectiveFilterWidth:x,dilationHeight:v,dilationWidth:y,inShape:e,outShape:N,filterShape:t}}function Ks(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[v,y,b]=Js(n),[x,w,k]=Js(r),I=Zs(d,x),C=Zs(f,w),N=Zs(m,k),{padInfo:S,outDepth:E,outHeight:T,outWidth:R}=function(e,t,n,r,a,s,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Xs(e,t,r));const i=e[1],o=e[2];return[Qs((e[0]-t+2*a)/r+1,s),Qs((i-t+2*a)/r+1,s),Qs((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);p=s[0],d=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/a),d=Math.ceil(n/s),f=Math.ceil(r/i);const e=(p-1)*a+o-t,c=(d-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),v=e-g,y=Math.floor(c/2),b=c-y,x=Math.floor(m/2);h={top:y,bottom:b,left:x,right:m-x,front:g,back:v,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/a),d=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(a,l,c,h,v,y,b,I,C,N,o),A=s?g*p:g;let D;return"channelsFirst"===i?D=[u,A,E,T,R]:"channelsLast"===i&&(D=[u,E,T,R,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:E,outHeight:T,outWidth:R,outChannels:A,padInfo:S,strideDepth:v,strideHeight:y,strideWidth:b,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:x,dilationHeight:w,dilationWidth:k,inShape:e,outShape:D,filterShape:t}}function Xs(e,t,n,r=1){const a=Zs(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ys(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Js(e){return"number"==typeof e?[e,e,e]:e}function Zs(e,t){return t<=1?e:e+(e-1)*(t-1)}function Qs(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function ei(e){const[t,n,r]=Ys(e);return 1===t&&1===n&&1===r}function ti(e,t){return ei(e)||ei(t)}function ni(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const ri=va({reshape_:function(e,t){const n={x:ma(e,"x","reshape","string_or_numeric")},r={shape:t};return oa.runKernel(sn,n,r)}}),ai=va({avgPool_:function(e,t,n,r,a){const s=ma(e,"x","avgPool","float32");d(ti(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=ri(s,[1,s.shape[0],s.shape[1],s.shape[2]])),d(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=a&&d(b(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=oa.runKernel(me,u,l);return c=es(c,s.dtype),o?ri(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),si=va({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=ma(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=ri(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&d(b(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let h=oa.runKernel(ve,l,c);return h=es(h,o.dtype),u?ri(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),ii=va({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=ma(e,"x","batchNorm"),o=ma(t,"mean","batchNorm"),u=ma(n,"variance","batchNorm");let l,c;null!=a&&(l=ma(a,"scale","batchNorm")),null!=r&&(c=ma(r,"offset","batchNorm")),d(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?ri(e,[1,1,1,e.size]):2===e.rank?ri(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ri(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},f={varianceEpsilon:s},m=oa.runKernel(ot,p,f);return ri(m,i.shape)}}),oi=va({batchNorm2d_:function(e,t,n,r,a,s){const i=ma(e,"x","batchNorm"),o=ma(t,"mean","batchNorm"),u=ma(n,"variance","batchNorm");let l,c;return null!=a&&(l=ma(a,"scale","batchNorm")),null!=r&&(c=ma(r,"offset","batchNorm")),d(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),ii(i,o,u,c,l,s)}}),ui=va({batchNorm3d_:function(e,t,n,r,a,s){const i=ma(e,"x","batchNorm"),o=ma(t,"mean","batchNorm"),u=ma(n,"variance","batchNorm");let l,c;return null!=a&&(l=ma(a,"scale","batchNorm")),null!=r&&(c=ma(r,"offset","batchNorm")),d(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),ii(i,o,u,c,l,s)}}),li=va({batchNorm4d_:function(e,t,n,r,a,s){const i=ma(e,"x","batchNorm"),o=ma(t,"mean","batchNorm"),u=ma(n,"variance","batchNorm");let l,c;return null!=a&&(l=ma(a,"scale","batchNorm")),null!=r&&(c=ma(r,"offset","batchNorm")),d(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&d(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&d(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),ii(i,o,u,c,l,s)}}),ci=va({clipByValue_:function(e,t,n){const r=ma(e,"x","clipByValue");d(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const a={x:r},s={clipValueMin:t,clipValueMax:n};return oa.runKernel(Ce,a,s)}}),hi=va({concat_:function(e,t=0){d(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ga(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ts(n[0]);const r=n,a={axis:t};return oa.runKernel(Ee,r,a)}}),pi=va({concat1d_:function(e){return hi(e,0)}}),di=va({concat2d_:function(e,t){return hi(e,t)}}),fi=va({concat3d_:function(e,t){return hi(e,t)}}),mi=va({concat4d_:function(e,t){return hi(e,t)}}),gi=va({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=ma(e,"x","conv2d"),u=ma(t,"filter","conv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=ri(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),null!=i&&d(b(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===a?l.shape[3]:l.shape[1];d(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),d(ti(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:l,filter:u},f={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=oa.runKernel(Te,p,f);return c?ri(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),vi=va({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=ma(e,"x","conv1d"),u=ma(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=ri(o,[1,o.shape[0],o.shape[1]])),d(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),d(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),null!=i&&d(b(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),d(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),d(ti(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),d("NWC"===a,(()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`));const h=ri(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=ri(l,[l.shape[0],1,l.shape[1],l.shape[2]]),f=gi(p,h,[1,n],r,"NHWC",[1,s],i);return ri(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),yi=va({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=ri(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),d(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),d(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),d(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],h="NHWC"===s?u.shape[3]:u.shape[1];d(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),d(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&d(b(a),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const p={dy:u,filter:n},f={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=oa.runKernel(Ae,p,f);return l?ri(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),bi=va({conv2dTranspose_:function(e,t,n,r,a,s){const i=ma(e,"x","conv2dTranspose"),o=ma(t,"filter","conv2dTranspose");return yi(n,i,o,r,a,"NHWC",s)}}),xi=va({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=ma(e,"x","conv3d"),o=ma(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=ri(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),d(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d(ti(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),d("NDHWC"===a,(()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:a,dilations:s},p=oa.runKernel(De,c,h);return l?ri(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),wi=va({conv3DBackpropInput_:function(e,t,n,r,a){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=ri(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];d(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),d(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),d(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),d(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:a,strides:r,inputShape:s},p=oa.runKernel(_e,c,h);return o?ri(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ki=va({conv3dTranspose_:function(e,t,n,r,a){const s=ma(e,"x","conv3dTranspose"),i=ma(t,"filter","conv3dTranspose");return wi(n,s,i,r,a)}}),Ii=va({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=ma(e,"x","depthwiseConv2d"),u=ma(t,"filter","depthwiseConv2d");let l=o,c=!1;3===o.rank&&(c=!0,l=ri(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),d(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),null!=i&&d(b(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=oa.runKernel(ze,h,p);return c?ri(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ci=va({floorDiv_:function(e,t){let n=ma(e,"a","floorDiv"),r=ma(t,"b","floorDiv");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(it,a)}}),Ni=va({div_:function(e,t){let n=ma(e,"a","div"),r=ma(t,"b","div");if([n,r]=Qr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ci(n,r);const a={a:n,b:r};return oa.runKernel(je,a,{})}}),Si=va({elu_:function(e){const t={x:ma(e,"x","elu")};return oa.runKernel(Xe,t)}});function Ei(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function Ti(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Ri(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Ai=va({equal_:function(e,t){let n=ma(e,"a","equal","string_or_numeric"),r=ma(t,"b","equal","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(Ze,a)}}),Di=va({exp_:function(e){const t={x:ma(e,"x","exp")};return oa.runKernel(Qe,t)}}),Fi=va({expandDims_:function(e,t=0){const n=ma(e,"x","expandDims","string_or_numeric");d(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},a={dim:t};return oa.runKernel(et,r,a)}}),_i=va({tile_:function(e,t){const n=ma(e,"x","tile","string_or_numeric");d(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},a={reps:t};return oa.runKernel(Un,r,a)}}),$i=va({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Qa([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=ri(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return _i(Fi(i,0),[n[0],1,1]);if(2===n.length)return _i(Fi(Fi(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return _i(Fi(Fi(Fi(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Oi(e,t,n){const r={shape:e,value:t,dtype:n};return oa.runKernel(rt,{},r)}const Mi=va({floor_:function(e){const t={x:ma(e,"x","floor")};return oa.runKernel(st,t)}}),Li=va({gather_:function(e,t,n=0,r=0){const a={x:ma(e,"x","gather"),indices:ma(t,"indices","gather","int32")},s={axis:n,batchDims:r};return oa.runKernel(ut,a,s)}}),Bi=va({greater_:function(e,t){let n=ma(e,"a","greater","string_or_numeric"),r=ma(t,"b","greater","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(ct,a)}}),Pi=va({greaterEqual_:function(e,t){let n=ma(e,"a","greaterEqual","string_or_numeric"),r=ma(t,"b","greaterEqual","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(ht,a)}}),zi=va({leakyRelu_:function(e,t=.2){const n={x:ma(e,"x","leakyRelu")},r={alpha:t};return oa.runKernel(yt,n,r)}}),Wi=va({log_:function(e){const t={x:ma(e,"x","log")};return oa.runKernel(kt,t)}}),Vi=va({log1p_:function(e){const t={x:ma(e,"x","log1p")};return oa.runKernel(It,t)}}),Ui=va({max_:function(e,t=null,n=!1){const r={x:ma(e,"x","max")},a={reductionIndices:t,keepDims:n};return oa.runKernel(Rt,r,a)}}),Gi=va({mul_:function(e,t){let n=ma(e,"a","mul"),r=ma(t,"b","mul");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(Vt,a)}}),Hi=va({sub_:function(e,t){let n=ma(e,"a","sub"),r=ma(t,"b","sub");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(zn,a)}}),qi=va({sum_:function(e,t=null,n=!1){let r=ma(e,"x","sum");"bool"===r.dtype&&(r=es(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return oa.runKernel(Nn,a,s)}}),ji=va({logSoftmax_:function(e,t=-1){const n=ma(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ms(((e,n)=>{const r=Ui(e,t,!0),a=Hi(e,r),s=Hi(es(a,"float32"),Wi(qi(Di(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=Di(r);return Hi(e,Gi(qi(e,t,!0),a))}}}));return r(n)}}),Ki=va({logicalAnd_:function(e,t){const n=ma(e,"a","logicalAnd","bool"),r=ma(t,"b","logicalAnd","bool");Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(Ct,a)}}),Xi=va({matMul_:function(e,t,n=!1,r=!1){let a=ma(e,"a","matMul"),s=ma(t,"b","matMul");[a,s]=Qr(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return oa.runKernel(be,i,o)}}),Yi=va({maxPool_:function(e,t,n,r,a){const s=ma(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=ri(s,[1,s.shape[0],s.shape[1],s.shape[2]])),d(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),d(ti(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=a&&d(b(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=oa.runKernel(Dt,u,l);return o?ri(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Ji=va({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=ma(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=ri(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),null!=a&&d(b(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},h=oa.runKernel(_t,l,c);return u?ri(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Zi=va({maximum_:function(e,t){let n=ma(e,"a","maximum"),r=ma(t,"b","maximum");[n,r]=Qr(n,r),"bool"===n.dtype&&(n=es(n,"int32"),r=es(r,"int32")),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(At,a)}}),Qi=va({mean_:function(e,t=null,n=!1){const r={x:ma(e,"x","mean")},a={axis:t,keepDims:n};return oa.runKernel(Mt,r,a)}}),eo=va({minimum_:function(e,t){let n=ma(e,"a","minimum"),r=ma(t,"b","minimum");[n,r]=Qr(n,r),"bool"===n.dtype&&(n=es(n,"int32"),r=es(r,"int32")),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(Bt,a)}});function to(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function no(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function ro(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function ao(e,t){return no(e,t.map((e=>1)),t)}function so(e,t,n){d(to(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function io(e,t){if(to(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function oo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function uo(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const lo=va({square_:function(e){const t=ma(e,"x","square");return oa.runKernel("Square",{x:t},{})}}),co=va({moments_:function(e,t=null,n=!1){const r=C(t,(e=ma(e,"x","moments")).shape),a=Qi(e,r,n);let s=a.shape;n||(s=ao(a.shape,r));const i=lo(Hi(es(e,"float32"),ri(a,s)));return{mean:a,variance:Qi(i,r,n)}}}),ho=va({neg_:function(e){const t={x:ma(e,"x","neg")};return oa.runKernel(Ut,t)}}),po=va({notEqual_:function(e,t){let n=ma(e,"a","notEqual","string_or_numeric"),r=ma(t,"b","notEqual","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(Gt,a)}}),fo=va({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:ma(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return oa.runKernel(Xt,a,s)}});function mo(e,t="float32"){if("complex64"===t){const t=mo(e,"float32"),n=mo(e,"float32");return ya(t,n)}const n=z(v(e),t);return oa.makeTensor(n,e,t)}function go(e,t="float32"){if("complex64"===t){const t=go(e,"float32"),n=mo(e,"float32");return ya(t,n)}const n=P(v(e),t);return oa.makeTensor(n,e,t)}const vo=va({onesLike_:function(e){const t={x:ma(e,"x","onesLike")};return oa.runKernel(Kt,t)}}),yo=va({pad_:function(e,t,n=0){const r=ma(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return oa.runKernel(Jt,s,a)}}),bo=va({prelu_:function(e,t){const n={x:ma(e,"x","prelu"),alpha:ma(t,"alpha","prelu")};return oa.runKernel(Qt,n)}});var xo=n(377);class wo{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=xo.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ko{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xo.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Io=va({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new wo(t,n,r,!1,a),i=Qa(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Co=va({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=Qa(e,r),i=new ko(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}}),No=va({relu_:function(e){const t={x:ma(e,"x","relu")};return oa.runKernel(an,t)}}),So=va({reverse_:function(e,t){const n={x:ma(e,"x","reverse")},r={dims:t};return oa.runKernel(pn,n,r)}}),Eo=va({selu_:function(e){const t={x:ma(e,"x","selu")};return oa.runKernel(vn,t)}}),To=va({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=ma(e,"x","separableConv2d"),u=ma(t,"depthwiseFilter","separableConv2d"),l=ma(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ri(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),d(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),d(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),d(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],f=u.shape[3];d(l.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${l.shape[2]}.`));const m=Ii(c,u,r,a,i,s),g=gi(m,l,1,"valid",i);return h?ri(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),Ro=va({sigmoid_:function(e){const t={x:ma(e,"x","sigmoid")};return oa.runKernel(kn,t)}}),Ao=va({slice_:function(e,t,n){const r=ma(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return oa.runKernel(yn,a,s)}}),Do=va({slice1d_:function(e,t,n){const r=ma(e,"x","slice1d");return d(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ao(r,[t],[n])}}),Fo=va({slice2d_:function(e,t,n){const r=ma(e,"x","slice2d");return d(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ao(r,t,n)}}),_o=va({slice3d_:function(e,t,n){const r=ma(e,"x","slice3d");return d(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ao(r,t,n)}}),$o=va({slice4d_:function(e,t,n){const r=ma(e,"x","slice4d");return d(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ao(r,t,n)}}),Oo=va({softmax_:function(e,t=-1){const n=ma(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return oa.runKernel(Tn,r,a)}}),Mo=va({softplus_:function(e){const t={x:ma(e,"x","softplus")};return oa.runKernel(In,t)}}),Lo=va({split_:function(e,t,n=0){const r={x:ma(e,"x","split")},a={numOrSizeSplits:t,axis:n};return oa.runKernel(En,r,a)}}),Bo=va({sqrt_:function(e){const t={x:ma(e,"x","sqrt")};return oa.runKernel(Cn,t)}}),Po=va({squeeze_:function(e,t){const n=ma(e,"x","squeeze");return ri(n,N(n.shape,t).newShape)}}),zo=va({stack_:function(e,t=0){const n=ga(e,"tensors","stack","string_or_numeric");d(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,a={axis:t};return oa.runKernel(Yt,r,a)}}),Wo=va({tanh_:function(e){const t={x:ma(e,"x","tanh")};return oa.runKernel(Vn,t)}});function Vo(e,t){m(e);const n=pa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ba(e,null,n,t)}function Uo(e,t,n){if(m(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=pa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ba(e,t,r,n)}const Go=va({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new wo(t,n,r,!0,a),i=Qa(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Ho=va({unstack_:function(e,t=0){const n=ma(e,"x","unstack","string_or_numeric");d(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},a={axis:t};return oa.runKernel(Kn,r,a)}}),qo=va({broadcastTo_:function(e,t){let n=ma(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ri(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ts(n);const i={x:n},o={reps:s};return oa.runKernel(Un,i,o)}}),jo=va({where_:function(e,t,n){const r=ma(t,"a","where"),a=ma(n,"b","where"),s=ma(e,"condition","where","bool"),i=Ri(Ri(s.shape,r.shape),a.shape),o={condition:qo(s,i),t:qo(r,i),e:qo(a,i)};return oa.runKernel(gn,o)}}),Ko=va({zerosLike_:function(e){const t={x:ma(e,"x","zerosLike")};return oa.runKernel(Yn,t)}}),Xo=va({transpose_:function(e,t){const n=ma(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),d(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{d(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return oa.runKernel(qn,r,a)}}),Yo=va({dropout_:function(e,t,n,r){const a=ma(e,"x","dropout");if(d("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),d(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Vr?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(y(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=Ni(Mi(zs(Co(s,0,1,"float32",r),i)),i);return Gi(a,o)}}),Jo=va({imag_:function(e){const t={input:ma(e,"input","imag")};return oa.runKernel(ft,t)}}),Zo=va({real_:function(e){const t={input:ma(e,"input","real")};return oa.runKernel(nn,t)}}),Qo=va({fft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return oa.runKernel(nt,t)}}),eu=va({rfft_:function(e,t){d("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,a=Ao(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,a=hi([e,mo(r)],e.shape.length-1),n=t}else a=e;const s=Ko(a),i=ri(ya(a,s),[r,n]),o=Qo(i),u=Math.floor(n/2)+1,l=Zo(o),c=Jo(o),h=Lo(l,[u,n-u],l.shape.length-1),p=Lo(c,[u,n-u],c.shape.length-1),f=a.shape.slice();return f[a.shape.length-1]=u,ri(ya(h[0],p[0]),f)}}),tu=va({ifft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return oa.runKernel(dt,t)}}),nu=va({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=ri(e,[n,t]);r=tu(a)}else{const a=[n,2*(t-1)],s=ri(Zo(e),[n,t]),i=ri(Jo(e),[n,t]),o=So(Ao(s,[0,1],[n,t-2]),1),u=Gi(So(Ao(i,[0,1],[n,t-2]),1),Ls(-1)),l=hi([s,o],1),c=hi([i,u],1),h=ri(ya(l,c),[a[0],a[1]]);r=tu(h)}if(r=Zo(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ri(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),ru=va({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=ri(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ri(t,[1,t.shape[0],t.shape[1],t.shape[2]])),d(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),d(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),d(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];d(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),d(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&d(b(a),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const h={x:o,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return oa.runKernel(Re,h,p)}}),au=va({relu6_:function(e){const t={x:ma(e,"x","relu6")};return oa.runKernel(hn,t)}}),su=va({step_:function(e,t=0){const n={x:ma(e,"x","step")},r={alpha:t};return oa.runKernel(Jn,n,r)}});function iu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Gi(e,su(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function ou(e,t){let n=t;const r=Ti(e.shape,t.shape);return r.length>0&&(n=qi(n,r)),ri(n,e.shape)}function uu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return No(e);if("elu"===t)return Si(e);if("relu6"===t)return au(e);if("prelu"===t)return bo(e,n);if("leakyrelu"===t)return zi(e,r);if("sigmoid"===t)return Ro(e);throw new Error(`Unknown fused activation ${t}.`)}const lu=(e,t)=>!(e>0)||"linear"===t,cu=va({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===lu(oa.state.gradientDepth,u)){let h=gi(e,t,n,r,a,s,i);return null!=o&&(h=zs(h,o)),uu(h,u,l,c)}const h=ma(e,"x","conv2d"),p=ma(t,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=ri(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&d(b(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),d(ti(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),d("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const g=js(f.shape,p.shape,n,s,r,i);let v,y;null!=o&&(v=ma(o,"bias","fused conv2d"),[v]=Qr(v,h),Ri(g.outShape,v.shape)),null!=l&&(y=ma(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,i,o,l]=t,c=iu(e,o,u);d(ei(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const h=[yi(i.shape,c,a,n,r),ru(i,c,a.shape,n,r)];if(null!=l){const e=ou(l,c);h.push(e)}return h},w={x:f,filter:p,bias:v,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Ms(((e,t,n)=>{let r=oa.runKernel(tr,w,k);return n([t,e,r]),m&&(r=ri(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p)}{const e=Ms(((e,t,n,r)=>{let a=oa.runKernel(tr,w,k);return r([t,e,a,n]),m&&(a=ri(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p,v)}}}),hu=va({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=ri(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ri(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return oa.runKernel(We,l,c)}}),pu=va({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=ri(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},h=oa.runKernel(Ve,l,c);return u?ri(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});va({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===lu(oa.state.gradientDepth,u)){let h=Ii(e,t,n,r,a,s,i);return null!=o&&(h=zs(h,o)),uu(h,u,l,c)}const h=ma(e,"x","depthwiseConv2d"),p=ma(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=ri(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),d(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),d(ti(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&d(b(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=js(f.shape,p.shape,n,s,r,i,!0);let v,y;null!=o&&(v=ma(o,"bias","fused conv2d"),[v]=Qr(v,h),Ri(g.outShape,v.shape)),null!=l&&(y=ma(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{d(ei(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,l,c]=t,h=iu(e,l,u),p=pu(o.shape,h,a,n,r,s,i),f=hu(o,h,a.shape,n,r,s,i);return null!=c?[p,f,ou(v,h)]:[p,f]},w={x:f,filter:p,bias:v,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Ms(((e,t,n)=>{let r=oa.runKernel(nr,w,k);return n([t,e,r]),m&&(r=ri(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}));return e(f,p)}{const e=Ms(((e,t,n,r)=>{let a=oa.runKernel(nr,w,k);return r([t,e,a,n]),m&&(a=ri(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}));return e(f,p,v)}}});const du=va({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===lu(oa.state.gradientDepth,s)){let u=Xi(e,t,n,r);return null!=a&&(u=zs(u,a)),uu(u,s,i,o)}let u=ma(e,"a","fused matMul"),l=ma(t,"b","fused matMul");[u,l]=Qr(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=u.shape.slice(0,-2),g=l.shape.slice(0,-2),b=v(m),x=v(g);d(u.rank>=2&&l.rank>=2&&u.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`)),d(y(m,g),(()=>`Error in fused matMul: outer dimensions (${m}) and (${g}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`)),d(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=u.shape.slice(0,-2).concat([p,f]),k=ri(u,n?[b,c,p]:[b,p,c]),I=ri(l,r?[x,f,h]:[x,h,f]);let C,N;null!=a&&(C=ma(a,"bias","fused matMul"),[C]=Qr(C,u),Ri(w,C.shape)),null!=i&&(N=ma(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,u,l]=t,c=iu(ri(e,u.shape),u,s);let h,p;return n||r?!n&&r?(h=Xi(c,o,!1,!1),p=Xi(c,i,!0,!1)):n&&!r?(h=Xi(o,c,!1,!0),p=Xi(i,c,!1,!1)):(h=Xi(o,c,!0,!0),p=Xi(c,i,!0,!0)):(h=Xi(c,o,!1,!0),p=Xi(i,c,!0,!1)),null!=a?[h,p,ou(l,c)]:[h,p]},E={a:k,b:I,bias:C,preluActivationWeights:N},T={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=Ms(((e,t,n)=>{const r=oa.runKernel(er,E,T);return n([e,t,r]),{value:ri(r,w),gradFunc:S}}));return e(k,I)}{const e=Ms(((e,t,n,r)=>{const a=oa.runKernel(er,E,T);return r([e,t,a,n]),{value:ri(a,w),gradFunc:S}}));return e(k,I,C)}}});function fu(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Vo(a,"float32")}va({hammingWindow_:function(e){return fu(e,.54,.46)}});const mu=va({hannWindow_:function(e){return fu(e,.5,.5)}}),gu=va({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Ao(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=hi([Ao(e,s,t-r),Oi([r],a)]);i.push(o),s+=n}return 0===i.length?Uo([],[0,t]):ri(hi(i),[i.length,t])}});va({stft_:function(e,t,n,r,a=mu){var s;null==r&&(s=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(s)/Math.log(2)))));const i=gu(e,t,n),o=Gi(i,a(t));return eu(o,r)}});const vu=va({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=ma(e,"image","cropAndResize"),o=ma(t,"boxes","cropAndResize","float32"),u=ma(n,"boxInd","cropAndResize","int32"),l=o.shape[0];d(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),d(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),d(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),d(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},h={method:a,extrapolationValue:s,cropSize:r};return oa.runKernel(Le,c,h)}}),yu=va({flipLeftRight_:function(e){const t=ma(e,"image","flipLeftRight","float32");d(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return oa.runKernel(at,n,{})}}),bu=va({grayscaleToRGB_:function(e){const t=ma(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,_i(t,a)}}),xu=va({rotateWithOffset_:function(e,t,n=0,r=.5){const a=ma(e,"image","rotateWithOffset","float32");d(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return oa.runKernel(Qn,s,i)}});function wu(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),d(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d(1===t.rank,(()=>"scores must be a 1D tensor")),d(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const ku=va({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=ma(e,"boxes","nonMaxSuppression"),i=ma(t,"scores","nonMaxSuppression"),o=wu(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return oa.runKernel(Ht,{boxes:s,scores:i},u)}});function Iu(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Cu)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Cu(e,t){return e>t?1:e<t?-1:0}function Nu(e,t,n,r,a){return Tu(e,t,n,r,a,0)}function Su(e,t,n,r,a,s){return Tu(e,t,n,r,a,0,!1,s,!0)}function Eu(e,t,n,r,a,s){return Tu(e,t,n,r,a,s,!0)}function Tu(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Du);const c=s>0?-.5/s:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Ru(e,s,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Au(r,c,i),t.score<=a)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),p.push(t.score)):t.score>a&&Iu(l,t,Du))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function Ru(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),h=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),v=Math.min(o,h),y=Math.min(u,p),b=Math.max(v-m,0)*Math.max(y-g,0);return b/(d+f-b)}function Au(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Du(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Fu=va({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=ma(e,"boxes","nonMaxSuppression"),o=ma(t,"scores","nonMaxSuppression"),u=wu(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},h=oa.runKernel(jt,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),_u=va({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=ma(e,"boxes","nonMaxSuppression"),o=ma(t,"scores","nonMaxSuppression"),u=wu(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},h=oa.runKernel(qt,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),$u=va({resizeBilinear_:function(e,t,n=!1,r=!1){const a=ma(e,"images","resizeBilinear");d(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),d(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),d(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=ri(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=oa.runKernel(ln,o,u);return i?ri(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Ou=va({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=ma(e,"images","resizeNearestNeighbor");d(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),d(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),d("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=a,i=!1;3===a.rank&&(i=!0,s=ri(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=oa.runKernel(on,o,u);return i?ri(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Mu=va({bincount_:function(e,t,n){const r=ma(e,"x","bincount"),a=ma(t,"weights","bincount");d("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d(a.size===r.size||0===a.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`));const s={x:r,weights:a},i={size:n};return oa.runKernel(we,s,i)}}),Lu=va({lessEqual_:function(e,t){let n=ma(e,"a","lessEqual","string_or_numeric"),r=ma(t,"b","lessEqual","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(xt,a)}}),Bu=va({round_:function(e){const t={x:ma(e,"x","round")};return oa.runKernel(dn,t)}});function Pu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return oa.runKernel(tn,{},a)}const zu=va({threshold_:function(e,t="binary",n=!1,r=.5){const a=ma(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=Gi(Vo([r]),255);if(d(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),d(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),d("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),d("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[i,o,u]=Lo(a,[1,1,1],-1);const e=Gi(i,.2989),t=Gi(o,.587),n=Gi(u,.114);l=zs(zs(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=Vo([-1]),l=Vo([0]),c=Vo([0]);for(let h=0;h<e.size-1;h++){n=Ao(e,0,h+1),r=Ao(e,h+1),i=Ni(qi(n),t),o=Ni(qi(r),t);const p=qi(Gi(n,Pu(0,n.size)));a=Ni(p,qi(n));const d=Oi(r.shape,n.size),f=zs(Pu(0,r.size),d),m=Gi(r,f);s=Ni(qi(m),qi(r));const g=Hi(a,s),v=Hi(a,s),y=Gi(i,o);c=Gi(Gi(y,g),v);const b=Bi(c,l);l=jo(b,c,l),u=jo(b,Vo([h]),u)}return u}(Mu(es(Bu(l),"int32"),xa([]),256),s));const h=n?Lu(l,c):Bi(l,c);return es(Gi(h,255),"int32")}}),Wu=va({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=ma(e,"image","transform","float32"),o=ma(t,"transforms","transform","float32");d(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),d(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return oa.runKernel(Hn,u,l)}}),Vu=va({bandPart_:function(e,t,n){d(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),d(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=ma(e,"a","bandPart");d(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=ri(Pu(0,s,1,"int32"),[-1,1]),u=Pu(0,i,1,"int32"),l=Hi(o,u),c=Ki(Lu(l,Ls(+t,"int32")),Pi(l,Ls(-n,"int32"))),h=mo([s,i],r.dtype);return ri(zo(Ho(ri(r,[-1,s,i])).map((e=>jo(c,e,h)))),a)}}),Uu=va({min_:function(e,t=null,n=!1){const r={x:ma(e,"x","min")},a={axis:t,keepDims:n};return oa.runKernel(Lt,r,a)}}),Gu=va({pow_:function(e,t){let n=ma(e,"base","pow"),r=ma(t,"exp","pow");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(Zt,a)}});function Hu(e,t,n=null){if(0===e.rank)return Ps(e);if(1!==e.rank&&null===n)return Hu(ri(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return qi(Ps(e),n);if(t===1/0)return Ui(Ps(e),n);if(t===-1/0)return Uu(Ps(e),n);if("euclidean"===t||2===t)return Bo(qi(Gu(Ps(e),Ls(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ui(qi(Ps(e),n[0]),n[1]-1);if(t===1/0)return Ui(qi(Ps(e),n[1]),n[0]);if(t===-1/0)return Uu(qi(Ps(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Bo(qi(lo(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const qu=va({norm_:function(e,t="euclidean",n=null,r=!1){const a=Hu(e=ma(e,"x","norm"),t,n);let s=a.shape;if(r){const t=C(n,e.shape);s=ao(a.shape,t)}return ri(a,s)}}),ju=va({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,d(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)d(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Lo(e,e.shape[0],0).map((e=>Po(e,[0])));d(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(oa.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Gi(qi(Gi(n[r],e)),n[r]);e=Hi(e,t)}return Ni(e,qu(e,"euclidean"))})));return t?zo(n,0):n}});function Ku(e,t=!1){return oa.tidy((()=>{d(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=$i(n),s=ts(e);const i=Uo([[1]],[1,1]);let o=ts(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=oa.tidy((()=>{const t=Ao(s,[e,e],[n-e,1]),u=qu(t),l=Ao(s,[e,e],[1,1]),c=jo(Bi(l,0),Uo([[-1]]),Uo([[1]])),h=Hi(l,Gi(c,u)),p=Ni(t,h);o=1===p.shape[0]?ts(i):hi([i,Ao(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=ho(Ni(Xi(c,h),u)),f=Ao(s,[e,0],[n-e,r]),m=Gi(d,o),g=Xo(o);if(0===e)s=Hi(f,Xi(m,Xi(g,f)));else{const t=Hi(f,Xi(m,Xi(g,f)));s=hi([Ao(s,[0,0],[e,r]),t],0)}const v=Xo(m),y=Ao(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Hi(y,Xi(Xi(y,o),v));else{const t=Hi(y,Xi(Xi(y,o),v));a=hi([Ao(a,[0,0],[n,e]),t],1)}return[o,s,a]})),_s([t,u,l])}return!t&&n>r&&(a=Ao(a,[0,0],[n,r]),s=Ao(s,[0,0],[r,r])),[a,s]}))}const Xu=va({qr_:function(e,t=!1){if(d(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Ku(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ho(ri(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=Ku(e,t);a.push(n),s.push(r)})),[ri(zo(a,0),e.shape),ri(zo(s,0),e.shape)]}}});var Yu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Yu||(Yu={}));const Ju=va({computeWeightedLoss_:function(e,t,n=Yu.SUM_BY_NONZERO_WEIGHTS){const r=ma(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=ma(t,"weights","computeWeightedLoss"));const s=null==a?r:Gi(r,a);if(n===Yu.NONE)return s;if(n===Yu.SUM)return qi(s);if(n===Yu.MEAN){if(null==a)return Qi(s);{const e=r.size/a.size,t=Ni(qi(s),qi(a));return e>1?Ni(t,Ls(e)):t}}if(n===Yu.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Ni(qi(s),Ls(r.size));{const e=Gi(a,go(r.shape)),t=es(qi(po(e,Ls(0))),"float32");return Ni(qi(s),t)}}throw Error(`Unknown reduction: ${n}`)}});va({absoluteDifference_:function(e,t,n,r=Yu.SUM_BY_NONZERO_WEIGHTS){const a=ma(e,"labels","absoluteDifference"),s=ma(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=ma(n,"weights","absoluteDifference")),f(a.shape,s.shape,"Error in absoluteDifference: ");const o=Ps(Hi(a,s));return Ju(o,i,r)}}),va({cosineDistance_:function(e,t,n,r,a=Yu.SUM_BY_NONZERO_WEIGHTS){const s=ma(e,"labels","cosineDistance"),i=ma(t,"predictions","cosineDistance");let o=null;null!=r&&(o=ma(r,"weights","cosineDistance")),f(s.shape,i.shape,"Error in cosineDistance: ");const u=Ls(1),l=Hi(u,qi(Gi(s,i),n,!0));return Ju(l,o,a)}}),va({hingeLoss_:function(e,t,n,r=Yu.SUM_BY_NONZERO_WEIGHTS){let a=ma(e,"labels","hingeLoss");const s=ma(t,"predictions","hingeLoss");let i=null;null!=n&&(i=ma(n,"weights","hingeLoss")),f(a.shape,s.shape,"Error in hingeLoss: ");const o=Ls(1);a=Hi(Gi(Ls(2),a),o);const u=No(Hi(o,Gi(a,s)));return Ju(u,i,r)}}),va({huberLoss_:function(e,t,n,r=1,a=Yu.SUM_BY_NONZERO_WEIGHTS){const s=ma(e,"labels","huberLoss"),i=ma(t,"predictions","huberLoss");let o=null;null!=n&&(o=ma(n,"weights","huberLoss")),f(s.shape,i.shape,"Error in huberLoss: ");const u=Ls(r),l=Ps(Hi(i,s)),c=eo(l,u),h=Hi(l,c),p=zs(Gi(Ls(.5),lo(c)),Gi(u,h));return Ju(p,o,a)}}),va({logLoss_:function(e,t,n,r=1e-7,a=Yu.SUM_BY_NONZERO_WEIGHTS){const s=ma(e,"labels","logLoss"),i=ma(t,"predictions","logLoss");let o=null;null!=n&&(o=ma(n,"weights","logLoss")),f(s.shape,i.shape,"Error in logLoss: ");const u=Ls(1),l=Ls(r),c=ho(Gi(s,Wi(zs(i,l)))),h=Gi(Hi(u,s),Wi(zs(Hi(u,i),l))),p=Hi(c,h);return Ju(p,o,a)}});const Zu=va({squaredDifference_:function(e,t){let n=ma(e,"a","squaredDifference"),r=ma(t,"b","squaredDifference");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel($n,a,{})}});va({meanSquaredError_:function(e,t,n,r=Yu.SUM_BY_NONZERO_WEIGHTS){const a=ma(e,"labels","meanSquaredError"),s=ma(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=ma(n,"weights","meanSquaredError")),f(a.shape,s.shape,"Error in meanSquaredError: ");const o=Zu(a,s);return Ju(o,i,r)}}),va({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Yu.SUM_BY_NONZERO_WEIGHTS){let s=ma(e,"multiClassLabels","sigmoidCrossEntropy");const i=ma(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ma(n,"weights","sigmoidCrossEntropy")),f(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Ls(r),t=Ls(1),n=Ls(.5);s=zs(Gi(s,Hi(t,e)),Gi(n,e))}const u=function(e,t){const n=ma(e,"labels","sigmoidCrossEntropyWithLogits"),r=ma(t,"logits","sigmoidCrossEntropyWithLogits");f(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=No(r),s=Gi(r,n),i=Vi(Di(ho(Ps(r))));return zs(Hi(a,s),i)}(s,i);return Ju(u,o,a)}});const Qu=va({logSumExp_:function(e,t=null,n=!1){const r=ma(e,"x","logSumExp"),a=C(t,r.shape),s=Ui(r,a,!0),i=Hi(r,s),o=Di(i),u=qi(o,a),l=Wi(u),c=zs(ri(s,l.shape),l);if(n){const e=ao(c.shape,a);return ri(c,e)}return c}});va({softmaxCrossEntropy_:function(e,t,n,r=0,a=Yu.SUM_BY_NONZERO_WEIGHTS){let s=ma(e,"onehotLabels","softmaxCrossEntropy");const i=ma(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ma(n,"weights","softmaxCrossEntropy")),f(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Ls(r),t=Ls(1),n=Ls(s.shape[1]);s=zs(Gi(s,Hi(t,e)),Ni(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Ms(((e,t,r)=>{const a=Qu(t,[n],!0),s=Hi(es(t,"float32"),a);r([e,s]);const i=ho(Gi(s,e));return{value:qi(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=ao(e.shape,[n]);return[Gi(ri(e,s),Hi(es(r,"float32"),Di(a))),Gi(ri(e,s),Hi(Di(a),es(r,"float32")))]}}}));return r(e,t)}(s,i);return Ju(u,o,a)}}),va({sparseFillEmptyRows_:function(e,t,n,r){const a=ma(e,"indices","sparseFillEmptyRows"),s=ma(t,"values","sparseFillEmptyRows"),i=ma(n,"denseShape","sparseFillEmptyRows"),o=ma(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=oa.runKernel(Rn,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),va({sparseReshape_:function(e,t,n){const r=ma(e,"inputIndices","sparseReshape"),a=ma(t,"inputShape","sparseReshape"),s=ma(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=oa.runKernel(An,i);return{outputIndices:o[0],outputShape:o[1]}}}),va({sparseSegmentMean_:function(e,t,n){const r=ma(e,"data","sparseSegmentMean"),a=ma(t,"indices","sparseSegmentMean"),s=ma(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return oa.runKernel(Dn,i)}}),va({sparseSegmentSum_:function(e,t,n){const r=ma(e,"data","sparseSegmentSum"),a=ma(t,"indices","sparseSegmentSum"),s=ma(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return oa.runKernel(Fn,i)}}),va({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=ma(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=ma(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},p=oa.runKernel(Ln,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),va({stringSplit_:function(e,t,n=!0){const r=ma(e,"input","stringSplit","string"),a=ma(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=oa.runKernel(Bn,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),va({stringToHashBucketFast_:function(e,t){const n=ma(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return oa.runKernel(Pn,a,r)}});const el={flipLeftRight:yu,grayscaleToRGB:bu,resizeNearestNeighbor:Ou,resizeBilinear:$u,rotateWithOffset:xu,cropAndResize:vu,nonMaxSuppression:ku,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=ma(e,"boxes","nonMaxSuppressionAsync"),i=ma(t,"scores","nonMaxSuppressionAsync"),o=wu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Nu(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Vo(h,"int32")},nonMaxSuppressionWithScore:Fu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=ma(e,"boxes","nonMaxSuppressionAsync"),o=ma(t,"scores","nonMaxSuppressionAsync"),u=wu(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=Eu(c,h,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Vo(p,"int32"),selectedScores:Vo(d)}},nonMaxSuppressionPadded:_u,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=ma(e,"boxes","nonMaxSuppressionAsync"),o=ma(t,"scores","nonMaxSuppressionAsync"),u=wu(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Su(p,d,l,c,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Vo(f,"int32"),validOutputs:Ls(m,"int32")}},threshold:zu,transform:Wu},tl={bandPart:Vu,gramSchmidt:ju,qr:Xu};class nl extends Bs{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=oa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=oa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Fs((()=>Ko(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Fs((()=>Ko(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Fs((()=>{const e=zs(Gi(s,this.rho),Gi(lo(a),1-this.rho)),t=Gi(Ni(Bo(zs(i,this.epsilon)),Bo(zs(s,this.epsilon))),a),n=zs(Gi(i,this.rho),Gi(lo(t),1-this.rho));s.assign(e),i.assign(n);const o=zs(Gi(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(_s(this.accumulatedGrads.map((e=>e.variable))),_s(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}nl.className="Adadelta",Rs(nl);class rl extends Bs{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=oa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Fs((()=>Oi(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Fs((()=>{const e=zs(s,lo(a));s.assign(e);const t=zs(Gi(Ni(a,Bo(zs(e,oa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&_s(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}rl.className="Adagrad",Rs(rl);class al extends Bs{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Fs((()=>{this.accBeta1=Ls(t).variable(),this.accBeta2=Ls(n).variable()})),null==r&&(this.epsilon=oa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Fs((()=>{const n=Hi(1,this.accBeta1),r=Hi(1,this.accBeta2);t.forEach(((t,a)=>{const s=oa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Fs((()=>Ko(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Fs((()=>Ko(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=zs(Gi(o,this.beta1),Gi(i,1-this.beta1)),c=zs(Gi(u,this.beta2),Gi(lo(i),1-this.beta2)),h=Ni(l,n),p=Ni(c,r);o.assign(l),u.assign(c);const d=zs(Gi(Ni(h,zs(Bo(p),this.epsilon)),-this.learningRate),s);s.assign(d)})),this.accBeta1.assign(Gi(this.accBeta1,this.beta1)),this.accBeta2.assign(Gi(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&_s(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&_s(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Fs((()=>{this.accBeta1.assign(Gu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Gu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}al.className="Adam",Rs(al);class sl extends Bs{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Fs((()=>{this.iteration=Ls(0).variable(),this.accBeta1=Ls(t).variable()})),null==r&&(this.epsilon=oa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Fs((()=>{const n=Hi(1,this.accBeta1),r=Ni(-this.learningRate,zs(Gi(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=oa.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Ko(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Ko(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=zs(Gi(o,this.beta1),Gi(i,1-this.beta1)),c=Gi(u,this.beta2),h=Ps(i),p=Zi(c,h);o.assign(l),u.assign(p);const d=zs(Gi(Ni(r,n),Ni(l,zs(p,this.epsilon))),s);s.assign(d)})),this.iteration.assign(zs(this.iteration,1)),this.accBeta1.assign(Gi(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&_s(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&_s(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}sl.className="Adamax",Rs(sl);class il extends Bs{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=oa.registeredVariables[t];Fs((()=>{const e=zs(Gi(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=$s(Ls(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}il.className="SGD",Rs(il);class ol extends il{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ls(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=oa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Fs((()=>Ko(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Fs((()=>{let e;const t=zs(Gi(this.m,a),s);e=this.useNesterov?zs(Gi(this.c,zs(s,Gi(t,this.m))),r):zs(Gi(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&_s(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}ol.className="Momentum",Rs(ol);class ul extends Bs{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=oa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=oa.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Fs((()=>Ko(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Fs((()=>Ko(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Fs((()=>Ko(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Fs((()=>{const e=zs(Gi(i,this.decay),Gi(lo(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=zs(Gi(t,this.decay),Gi(s,1-this.decay)),u=Ni(Gi(s,this.learningRate),Bo(Hi(e,zs(lo(a),this.epsilon)))),l=zs(Gi(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Hi(r,l);r.assign(c)}else{const e=zs(Gi(i,this.decay),Gi(lo(s),1-this.decay)),t=zs(Gi(o,this.momentum),Ni(Gi(s,this.learningRate),Bo(zs(e,this.epsilon))));i.assign(e),o.assign(t);const n=Hi(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&_s(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&_s(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&_s(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}ul.className="RMSProp",Rs(ul);class ll{static sgd(e){return new il(e)}static momentum(e,t,n=!1){return new ol(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new ul(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new al(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new nl(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new sl(e,t,n,r,a)}static adagrad(e,t=.1){return new rl(e,t)}}const cl={sgd:ll.sgd,momentum:ll.momentum,adadelta:ll.adadelta,adagrad:ll.adagrad,rmsprop:ll.rmsprop,adamax:ll.adamax,adam:ll.adam},hl="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function pl(){return new Promise((e=>hl((()=>e()))))}function dl(e,t){const n=e[0].length;e.forEach(((e,t)=>{d(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),d(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)d(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function fl(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const ml=30;function gl(e){return e<=ml?e:O(e,Math.floor(Math.sqrt(e)))}function vl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function yl(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function bl(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function xl(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function wl(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function kl(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}function Il(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===v(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...M(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}function Cl(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function Nl(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Cl(n,t,e)}function Sl(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:v(t.shape)/o,sliceSize:i,strides:[...M(n.slice(0,a)),1],outputSize:v(n)}}const El=1.7580993408473768,Tl=1.0507009873554805,Rl=.3275911,Al=.254829592,Dl=-.284496736,Fl=1.421413741,_l=-1.453152027,$l=1.061405429;function Ol(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Ml(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Ll(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Bl(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Pl(e,t){return{real:e[2*t],imag:e[2*t+1]}}function zl(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Wl(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Vl(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Ul=/->/g;function Gl(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ul,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");d(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Hl(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function ql(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:d(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function jl(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Xl(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Kl(e){return e.every(((e,t)=>e===t))}function Xl(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Yl(e,t,n=0){let r=[];if("number"==typeof t)d(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);d(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}d(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Jl(e,t){let n,r=!1;for(e<=ml?(n=e,r=!0):n=O(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=O(e,n+1);return n}function Zl(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Ql(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function ec(e){try{return e.map((e=>Rr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function tc(e){return e.map((e=>Tr(e)))}function nc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Qa(e,"int32"),a=Qa([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const rc={kernelName:te,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,su(es(n,"float32"),-1))}}},ac={kernelName:ne,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=lo(es(n,"float32")),r=Bo(Hi(Ls(1),t));return ho(Ni(e,r))}}}},sc={kernelName:re,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bo(Hi(lo(es(n,"float32")),1));return Ni(e,t)}}}},ic={kernelName:ae,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{let t=e;const r=Ti(n.shape,a);return r.length>0&&(t=qi(t,r)),ri(t,n.shape)},b:()=>{let t=e;const n=Ti(r.shape,a);return n.length>0&&(t=qi(t,n)),ri(t,r.shape)}}}},oc={kernelName:se,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},uc={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(n)}}},lc={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(n)}}},cc={kernelName:ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Bo(Hi(Ls(1),lo(es(n,"float32")))))}}},hc={kernelName:he,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bo(zs(Ls(1),lo(es(n,"float32"))));return Ni(e,t)}}}},pc={kernelName:fe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{const t=zs(lo(n),lo(r));let s=Gi(e,Ni(r,t));const i=Ti(n.shape,a);return i.length>0&&(s=qi(s,i)),ri(s,n.shape)},b:()=>{const t=zs(lo(n),lo(r));let s=ho(Gi(e,Ni(n,t)));const i=Ti(r.shape,a);return i.length>0&&(s=qi(s,i)),ri(s,r.shape)}}}},dc={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,zs(lo(es(n,"float32")),1))}}},fc={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Hi(Ls(1),lo(es(n,"float32"))))}}},mc=va({avgPool3dGrad_:function(e,t,n,r,a,s){const i=ma(e,"dy","avgPool3dGrad"),o=ma(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=ri(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=ri(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),d(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&d(b(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const h={dy:u,input:l},p={filterSize:n,strides:r,pad:a,dimRoundingMode:s},f=oa.runKernel(ye,h,p);return c?ri(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),gc={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>mc(e,r,a,s,i,o)}}},vc=va({avgPoolGrad_:function(e,t,n,r,a){const s=ma(e,"dy","avgPoolGrad"),i=ma(t,"input","avgPoolGrad");d(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=ri(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=ri(s,[1,s.shape[0],s.shape[1],s.shape[2]])),d(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),d(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:a},p=oa.runKernel(ge,c,h);return l?ri(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),yc={kernelName:me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>vc(e,r,a,s,i)}}},bc={kernelName:be,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Xi(e,a,!1,!1),b:()=>Xi(e,r,!0,!1)}:s&&!i?{a:()=>Xi(a,e,!1,!0),b:()=>Xi(r,e,!1,!1)}:{a:()=>Xi(a,e,!0,!0),b:()=>Xi(e,r,!0,!0)}:{a:()=>Xi(e,a,!1,!0),b:()=>Xi(r,e,!0,!1)}}},xc=va({spaceToBatchND_:function(e,t,n){const r=ma(e,"x","spaceToBatchND");d(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),d(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),d(r.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const a={x:r},s={blockShape:t,paddings:n};return oa.runKernel(Sn,a,s)}}),wc={kernelName:xe,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>xc(e,r,a)}}},kc={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>qi(e,o,!0)}}},Ic={kernelName:ke,gradFunc:e=>({x:()=>e.clone()})},Cc={kernelName:Ie,gradFunc:e=>({x:()=>Ko(e)})},Nc={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>jo(Ki(Pi(r,a),Lu(r,s)),e,Ko(e))}}},Sc={kernelName:Se,inputsToSave:["x"],gradFunc:rc.gradFunc},Ec={kernelName:Ee,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=C(a,t[0].shape)[0],i=r.map((e=>e[s]));return Lo(e,i,s).map((e=>()=>e))}},Tc={kernelName:Te,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return d(ei(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>yi(r.shape,e,a,i,o,u),filter:()=>ru(r,e,a.shape,i,o,u)}}},Rc={kernelName:Ae,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>gi(e,a,s,i,o,1,u),filter:()=>ru(e,r,a.shape,s,i,o,u)}}},Ac=va({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=ri(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ri(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),d(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),d(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),d(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),d(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),d(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return oa.runKernel(Fe,o,u)}}),Dc={kernelName:De,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;d(ei(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>wi(i.shape,e,o,a,s),filter:()=>Ac(i,e,o.shape,a,s)}}},Fc=va({sin_:function(e){const t={x:ma(e,"x","sin")};return oa.runKernel(bn,t)}}),_c={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(ho(Fc(es(n,"float32"))),e)}}},$c=va({sinh_:function(e){const t={x:ma(e,"x","sinh")};return oa.runKernel(xn,t)}}),Oc={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi($c(es(n,"float32")),e)}}},Mc=va({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:ma(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return oa.runKernel(Me,a,s)}}),Lc={kernelName:Me,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=io([a],r.rank);let n=Mc(e,a,s,!i);return null!=t&&(n=Xo(n,t)),n}}}},Bc={kernelName:ze,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;d(ei(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return d(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),d(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),d(ti(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&d(b(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>pu(u.shape,e,l,a,s,o,i),filter:()=>hu(u,e,l.shape,a,s,o,i)}}},Pc={kernelName:Ge,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>oa.runKernel(He,s,n),filter:()=>oa.runKernel(qe,i,n)}}},zc={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>oa.runKernel(Ye,r)}}},Wc={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Gi(Di(ho(lo(n))),2/Math.sqrt(Math.PI));return{x:()=>Gi(e,r)}}},Vc={kernelName:Qe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,n)}}},Uc={kernelName:et,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ri(e,n.shape)}}},Gc={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Di(n))}}},Hc={kernelName:st,gradFunc:e=>({x:()=>Ko(e)})},qc={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{const t=Ni(e,es(r,"float32")),s=Ti(n.shape,a);return s.length>0?ri(qi(t,s),n.shape):t},b:()=>{let t=Gi(e,es(n,"float32"));const s=Ti(r.shape,a);s.length>0&&(t=ri(qi(t,s),r.shape));const i=lo(r);return ho(Ni(t,es(i,"float32")))}}}},jc=va({rsqrt_:function(e){const t={x:ma(e,"x","rsqrt")};return oa.runKernel(fn,t)}}),Kc={kernelName:ot,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Ls(1):o,l=Ti(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const h=Hi(a,s),p=Gi(e,u),d=jc(zs(i,Ls(r))),f=Gi(Gi(Gi(d,d),d),Ls(-.5));return{x:()=>1===s.rank?ri(Gi(Gi(e,_i(ri(d,[1,1,1,s.shape[0]]),c)),u),a.shape):ri(Gi(Gi(e,d),u),a.shape),mean:()=>{let e=Gi(Gi(d,Ls(-1)),p);return 1===s.rank&&(e=qi(e,l)),ri(e,s.shape)},variance:()=>{let e=Gi(Gi(f,h),p);return 1===s.rank&&(e=qi(e,l)),ri(e,s.shape)},scale:()=>{const t=Gi(h,d);let n=Gi(e,t);return 1===s.rank&&(n=qi(n,l)),ri(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=qi(t,l)),ri(t,s.shape)}}}},Xc=va({unsortedSegmentSum_:function(e,t,n){const r=ma(e,"x","unsortedSegmentSum"),a=ma(t,"segmentIds","unsortedSegmentSum","int32");d(b(n),(()=>"numSegments must be of dtype int"));const s={x:r,segmentIds:a},i={numSegments:n};return oa.runKernel(Xn,s,i)}}),Yc={kernelName:ut,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=C(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,h=Jc(0,u),p=Jc(u+1,u+1+c),d=Zc([o,[n],l]),f=ri(e,d),m=ri(a,[n]),g=Zc([[u],h,p]),v=Xo(f,g);let y=Xc(v,m,r.shape[i]);const b=oo(g);return y=Xo(y,b),y},indices:()=>a}}};function Jc(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Zc(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Qc={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ko(n),b:()=>Ko(r)}}},eh={kernelName:pt,gradFunc:e=>({x:()=>es(e,"float32")})},th={kernelName:mt,gradFunc:e=>({x:()=>Ko(e)})},nh={kernelName:gt,gradFunc:e=>({x:()=>Ko(e)})},rh={kernelName:vt,gradFunc:e=>({x:()=>Ko(e)})},ah={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Bi(r,0);return{x:()=>jo(s,e,Gi(e,a))}}},sh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,zs(n,1))}}},ih={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,es(n,"float32"))}}},oh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Di(r);return Hi(e,Gi(qi(e,a,!0),t))}}}},uh=va({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return oa.runKernel(Tt,o,u)}}),lh={kernelName:Et,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>uh(r,a,e,s,i,o,u)}}};function ch(e,t,n,r){return t.rank<n.rank&&(t=ri(t,ao(t.shape,r))),e.rank<n.rank&&(e=ri(e,ao(e.shape,r))),{x:()=>Gi(e,es(Ai(n,t),e.dtype))}}const hh={kernelName:Rt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=ch(e,t[1],s,C(a,s.shape));return{x:()=>i.x()}}},ph=va({less_:function(e,t){let n=ma(e,"a","less","string_or_numeric"),r=ma(t,"b","less","string_or_numeric");[n,r]=Qr(n,r),Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(bt,a)}}),dh={kernelName:At,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Gi(e,es(Pi(n,r),"float32")),b:()=>Gi(e,es(ph(n,r),"float32"))}}},fh=va({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=ma(e,"dy","maxPool3dGrad"),u=ma(t,"input","maxPool3dGrad"),l=ma(n,"output","maxPool3dGrad");let c=o,h=u,p=l,f=!1;4===u.rank&&(f=!0,c=ri(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ri(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=ri(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),d(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),d(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),d(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&d(b(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const m={dy:c,input:h,output:p},g={filterSize:r,strides:a,pad:s,dimRoundingMode:i},v=oa.runKernel($t,m,g);return f?ri(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}}),mh={kernelName:_t,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>fh(e,r,a,s,i,o,u)}}},gh=va({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=ma(e,"dy","maxPoolGrad"),u=ma(t,"input","maxPoolGrad"),l=ma(n,"output","maxPoolGrad");d(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),d(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),d(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&d(b(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},h={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return oa.runKernel(Ft,c,h)}}),vh={kernelName:Dt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>gh(e,r,a,s,i,o)}}},yh={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=C(a,r.shape),i=v(ro(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=ri(e,t);return Ni(Gi(n,go(r.shape,"float32")),i)}}}},bh={kernelName:Lt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=ch(e,i,s,C(a,s.shape));return{x:()=>o.x()}}},xh={kernelName:Bt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Gi(e,es(Lu(n,r),"float32")),b:()=>Gi(e,es(Bi(n,r),"float32"))}}},wh={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Ao(e,s,r.shape)}}},kh={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{const t=Ti(n.shape,a);return t.length>0?ri(qi(e,t),n.shape):e},b:()=>{const t=Gi(e,ho(Mi(Ni(n,r)))),s=Ti(r.shape,a);return s.length>0?ri(qi(t,s),r.shape):t}}}},Ih={kernelName:Vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{const t=Gi(e,es(r,"float32")),s=Ti(n.shape,a);return s.length>0?ri(qi(t,s),n.shape):t},b:()=>{const t=Gi(e,es(n,"float32")),s=Ti(r.shape,a);return s.length>0?ri(qi(t,s),r.shape):t}}}},Ch={kernelName:Ut,gradFunc:e=>({x:()=>ho(e)})},Nh={kernelName:Xt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>mo(n.shape,"float32")}}},Sh={kernelName:Kt,gradFunc:e=>({x:()=>Ko(e)})},Eh={kernelName:Yt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Ho(e,r).map((e=>()=>e))}},Th={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Ao(e,s,r.shape)}}},Rh={kernelName:Zt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Ri(s.shape,i.shape);return{a:()=>{const t=es(i,"float32");let n=Gi(e,Gi(t,Gu(s,Hi(t,Ls(1)))));const r=Ti(s.shape,o);return r.length>0&&(n=qi(n,r)),ri(n,s.shape)},b:()=>{const t=Bi(s,0),n=jo(t,Wi(s),Ko(s));let r=Gi(e,Gi(a,n));const u=Ti(i.shape,o);return u.length>0&&(r=qi(r,u)),ri(r,i.shape)}}}},Ah={kernelName:Qt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Bi(n,0);return{x:()=>jo(a,e,Gi(e,r)),alpha:()=>{let t=jo(a,Ko(e),Gi(e,n));const s=Ti(r.shape,e.shape);return s.length>0&&(t=qi(t,s)),ri(t,r.shape)}}}},Dh={kernelName:je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{const t=Ni(e,es(r,"float32")),s=Ti(n.shape,a);return s.length>0?ri(qi(t,s),n.shape):t},b:()=>{let t=Gi(e,es(n,"float32"));const s=Ti(r.shape,a);s.length>0&&(t=ri(qi(t,s),r.shape));const i=lo(r);return ho(Ni(t,es(i,"float32")))}}}},Fh={kernelName:rn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,ho(lo(n)))}}},_h={kernelName:hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Gi(Lu(n,6),su(n));return{x:()=>Gi(e,es(r,"float32"))}}},$h={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,es(su(n),"float32"))}}},Oh={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ri(e,n.shape)}}},Mh={kernelName:ln,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>oa.runKernel(cn,a,n)}}},Lh={kernelName:on,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>oa.runKernel(un,a,n)}}},Bh={kernelName:pn,gradFunc:(e,t,n)=>{const{dims:r}=n,a=C(r,e.shape);return{x:()=>So(e,a)}}},Ph={kernelName:dn,gradFunc:e=>({x:()=>Ko(e)})},zh={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ho(Ni(e,Gi(Gu(n,1.5),2)))}}},Wh=va({logicalNot_:function(e){const t={x:ma(e,"x","logicalNot","bool")};return oa.runKernel(Nt,t)}}),Vh={kernelName:gn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>es(Ko(n),"float32"),t:()=>Gi(e,es(n,e.dtype)),e:()=>Gi(e,es(Wh(n),e.dtype))}}},Uh={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Bi(n,Ls(0)),r=Ls(El),a=Ls(Tl),s=Gi(e,a),i=Gi(Gi(e,r),Di(es(n,"float32")));return jo(t,s,i)}}}},Gh={kernelName:kn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Gi(n,Hi(Ls(1),n)))}}},Hh={kernelName:wn,gradFunc:e=>({x:()=>Ko(e)})},qh=va({cos_:function(e){const t={x:ma(e,"x","cos")};return oa.runKernel($e,t)}}),jh={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(qh(es(n,"float32")),e)}}},Kh=va({cosh_:function(e){const t={x:ma(e,"x","cosh")};return oa.runKernel(Oe,t)}}),Xh={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(Kh(es(n,"float32")),e)}}},Yh={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Ns(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>yo(e,l)}}},Jh={kernelName:Tn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Gi(e,r);return{logits:()=>Hi(s,Gi(qi(s,[a],!0),r))}}},Zh={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Ro(n))}}},Qh=va({batchToSpaceND_:function(e,t,n){const r=ma(e,"x","batchToSpaceND"),a=t.reduce(((e,t)=>e*t));d(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),d(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),d(r.shape[0]%a==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`));const s={x:r},i={blockShape:t,crops:n};return oa.runKernel(xe,s,i)}}),ep={kernelName:Sn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Qh(e,r,a)}}},tp={kernelName:En,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>hi(e,r)}}},np=[rc,ac,sc,ic,oc,uc,lc,cc,hc,pc,dc,fc,gc,yc,bc,wc,kc,Ic,Cc,Nc,Sc,Ec,Rc,Tc,Dc,_c,Oc,Lc,Bc,Pc,Dh,zc,Wc,Vc,Uc,Gc,qc,Hc,Kc,Yc,Qc,eh,th,nh,rh,ah,sh,ih,oh,lh,hh,hh,dh,mh,vh,yh,bh,xh,wh,kh,Ih,Ch,Nh,Sh,Eh,Th,Th,Rh,Ah,Fh,_h,$h,Oh,Mh,Lh,Bh,Ph,zh,Vh,Uh,Gh,Hh,jh,Xh,Yh,Jh,Zh,ep,ep,tp,tp,{kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,Gi(Bo(es(n,"float32")),2))}}},{kernelName:$n,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ls(2);return{a:()=>Gi(e,Gi(a,Hi(n,r))),b:()=>Gi(e,Gi(a,Hi(r,n)))}}},{kernelName:On,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(e,Gi(es(n,"float32"),2))}}},{kernelName:Jn,gradFunc:e=>({x:()=>Ko(e)})},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Ri(n.shape,r.shape);return{a:()=>{let t=e;const r=Ti(n.shape,a);return r.length>0&&(t=qi(t,r)),ri(t,n.shape)},b:()=>{let t=e;const n=Ti(r.shape,a);return n.length>0&&(t=qi(t,n)),ri(ho(t),r.shape)}}}},{kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;C(s,r.shape).forEach((e=>{a[e]=1}));const i=ri(e,a),o=Gi(i,go(r.shape,"float32"));return{x:()=>o}}},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ni(e,lo(qh(n)))}}},{kernelName:Vn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gi(Hi(Ls(1),lo(n)),e)}}},{kernelName:Un,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Ko(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=zs(t,Ao(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=zs(t,Ao(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=zs(t,Ao(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=zs(t,Ao(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:qn,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=oo(a);return{x:()=>Xo(e,s)}}},{kernelName:Kn,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>zo(e,a)}}},{kernelName:Xn,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Zi(t,Ko(t)),r=Li(e,n);let a=Pi(t,Ls(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Fi(a,e+1);a=Ki(a,go(r.shape,"bool"));const i=Ko(r);return jo(a,r,i)}(e,n)}}},{kernelName:Yn,gradFunc:e=>({x:()=>Ko(e)})}];for(const e of np)lr(e);Ur().prototype.abs=function(){return this.throwIfDisposed(),Ps(this)};const rp=va({acos_:function(e){const t={x:ma(e,"x","acos")};return oa.runKernel(ne,t)}});Ur().prototype.acos=function(){return this.throwIfDisposed(),rp(this)};const ap=va({acosh_:function(e){const t={x:ma(e,"x","acosh")};return oa.runKernel(re,t)}});Ur().prototype.acosh=function(){return this.throwIfDisposed(),ap(this)},Ur().prototype.add=function(e){return this.throwIfDisposed(),zs(this,e)},Ur().prototype.all=function(e,t){return this.throwIfDisposed(),Ws(this,e,t)},Ur().prototype.any=function(e,t){return this.throwIfDisposed(),Vs(this,e,t)},Ur().prototype.argMax=function(e){return this.throwIfDisposed(),Us(this,e)};const sp=va({argMin_:function(e,t=0){const n={x:ma(e,"x","argMin")},r={axis:t};return oa.runKernel(le,n,r)}});Ur().prototype.argMin=function(e){return this.throwIfDisposed(),sp(this,e)},Ur().prototype.asScalar=function(){return this.throwIfDisposed(),d(1===this.size,(()=>"The array must have only 1 element.")),ri(this,[])},Ur().prototype.asType=function(e){return this.throwIfDisposed(),es(this,e)},Ur().prototype.as1D=function(){return this.throwIfDisposed(),ri(this,[this.size])},Ur().prototype.as2D=function(e,t){return this.throwIfDisposed(),ri(this,[e,t])},Ur().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ri(this,[e,t,n])},Ur().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ri(this,[e,t,n,r])},Ur().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),ri(this,[e,t,n,r,a])};const ip=va({asin_:function(e){const t={x:ma(e,"x","asin")};return oa.runKernel(ce,t)}});Ur().prototype.asin=function(){return this.throwIfDisposed(),ip(this)};const op=va({asinh_:function(e){const t={x:ma(e,"x","asinh")};return oa.runKernel(he,t)}});Ur().prototype.asinh=function(){return this.throwIfDisposed(),op(this)};const up=va({atan_:function(e){const t={x:ma(e,"x","atan")};return oa.runKernel(pe,t)}});Ur().prototype.atan=function(){return this.throwIfDisposed(),up(this)};const lp=va({atan2_:function(e,t){let n=ma(e,"a","atan2"),r=ma(t,"b","atan2");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(fe,a)}});Ur().prototype.atan2=function(e){return this.throwIfDisposed(),lp(this,e)};const cp=va({atanh_:function(e){const t={x:ma(e,"x","atanh")};return oa.runKernel(de,t)}});Ur().prototype.atanh=function(){return this.throwIfDisposed(),cp(this)},Ur().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ai(this,e,t,n,r)},Ur().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Qh(this,e,t)},Ur().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),ii(this,e,t,n,r,a)},Ur().prototype.broadcastTo=function(e){return this.throwIfDisposed(),qo(this,e)},Ur().prototype.cast=function(e){return this.throwIfDisposed(),es(this,e)};const hp=va({ceil_:function(e){const t={x:ma(e,"x","ceil")};return oa.runKernel(Ie,t)}});Ur().prototype.ceil=function(){return this.throwIfDisposed(),hp(this)},Ur().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),ci(this,e,t)},Ur().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Vr&&(e=[e]),hi([this,...e],t)},Ur().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),vi(this,e,t,n,r,a,s)},Ur().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),bi(this,e,t,n,r,a)},Ur().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),gi(this,e,t,n,r,a,s)},Ur().prototype.cos=function(){return this.throwIfDisposed(),qh(this)},Ur().prototype.cosh=function(){return this.throwIfDisposed(),Kh(this)},Ur().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Mc(this,e,t,n)};const pp=va({depthToSpace_:function(e,t,n="NHWC"){const r=ma(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];d(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),d(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),d(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return oa.runKernel(Pe,o,u)}});Ur().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),pp(this,e,t)},Ur().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Ii(this,e,t,n,r,a,s)};const dp=va({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=ma(e,"x","dilation2d"),o=ma(t,"filter","dilation2d");d(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),d(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),d("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let u=i,l=!1;3===i.rank&&(u=ri(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:a},p=oa.runKernel(Ge,c,h);return l?ri(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});Ur().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),dp(this,e,t,n,r,a)};const fp=va({divNoNan_:function(e,t){let n=ma(e,"a","div"),r=ma(t,"b","div");[n,r]=Qr(n,r);const a=Ni(n,r),s=Ko(a),i=Ai(r,s);return jo(i,s,a)}});Ur().prototype.divNoNan=function(e){return this.throwIfDisposed(),fp(this,e)},Ur().prototype.div=function(e){return this.throwIfDisposed(),Ni(this,e)};const mp=va({dot_:function(e,t){const n=ma(e,"t1","dot"),r=ma(t,"t2","dot");d(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(d(a===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`)),1===n.rank&&1===r.rank){const e=ri(n,[1,-1]),t=ri(r,[-1,1]),a=Xi(e,t);return ri(a,[])}if(1===n.rank&&2===r.rank){const e=ri(n,[1,-1]),t=ri(r,[r.shape[0],r.shape[1]]),a=Xi(e,t);return ri(a,[a.size])}if(2===n.rank&&1===r.rank){const e=ri(r,[-1,1]),t=Xi(n,e);return ri(t,[t.size])}{const e=ri(r,[r.shape[0],r.shape[1]]);return Xi(n,e)}}});Ur().prototype.dot=function(e){return this.throwIfDisposed(),mp(this,e)},Ur().prototype.elu=function(){return this.throwIfDisposed(),Si(this)},Ur().prototype.equal=function(e){return this.throwIfDisposed(),Ai(this,e)};const gp=va({erf_:function(e){let t=ma(e,"x","erf");d("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=es(t,"float32"));const n={x:t};return oa.runKernel(Je,n)}});Ur().prototype.erf=function(){return this.throwIfDisposed(),gp(this)},Ur().prototype.exp=function(){return this.throwIfDisposed(),Di(this)},Ur().prototype.expandDims=function(e){return this.throwIfDisposed(),Fi(this,e)};const vp=va({expm1_:function(e){const t={x:ma(e,"x","expm1")};return oa.runKernel(tt,t)}});Ur().prototype.expm1=function(){return this.throwIfDisposed(),vp(this)},Ur().prototype.fft=function(){return this.throwIfDisposed(),Qo(this)},Ur().prototype.flatten=function(){return this.throwIfDisposed(),ri(this,[this.size])},Ur().prototype.floor=function(){return this.throwIfDisposed(),Mi(this)},Ur().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ci(this,e)},Ur().prototype.gather=function(e,t){return this.throwIfDisposed(),Li(this,e,t)},Ur().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Pi(this,e)},Ur().prototype.greater=function(e){return this.throwIfDisposed(),Bi(this,e)},Ur().prototype.ifft=function(){return this.throwIfDisposed(),tu(this)},Ur().prototype.irfft=function(){return this.throwIfDisposed(),nu(this)};const yp=va({isFinite_:function(e){const t={x:ma(e,"x","isFinite")};return oa.runKernel(mt,t)}});Ur().prototype.isFinite=function(){return this.throwIfDisposed(),yp(this)};const bp=va({isInf_:function(e){const t={x:ma(e,"x","isInf")};return oa.runKernel(gt,t)}});Ur().prototype.isInf=function(){return this.throwIfDisposed(),bp(this)};const xp=va({isNaN_:function(e){const t={x:ma(e,"x","isNaN")};return oa.runKernel(vt,t)}});Ur().prototype.isNaN=function(){return this.throwIfDisposed(),xp(this)},Ur().prototype.leakyRelu=function(e){return this.throwIfDisposed(),zi(this,e)},Ur().prototype.lessEqual=function(e){return this.throwIfDisposed(),Lu(this,e)},Ur().prototype.less=function(e){return this.throwIfDisposed(),ph(this,e)};const wp=va({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=ma(e,"x","localResponseNormalization");d(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),d(b(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=ri(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=oa.runKernel(Et,u,l);return o?ri(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});Ur().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),wp(this,e,t,n,r)};const kp=va({logSigmoid_:function(e){const t=ma(e,"x","logSigmoid"),n=Ms((e=>({value:ho(Mo(ho(e))),gradFunc:t=>Gi(t,Ro(ho(e)))})));return n(t)}});Ur().prototype.logSigmoid=function(){return this.throwIfDisposed(),kp(this)},Ur().prototype.logSoftmax=function(e){return this.throwIfDisposed(),ji(this,e)},Ur().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Qu(this,e,t)},Ur().prototype.log=function(){return this.throwIfDisposed(),Wi(this)},Ur().prototype.log1p=function(){return this.throwIfDisposed(),Vi(this)},Ur().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Ki(this,e)},Ur().prototype.logicalNot=function(){return this.throwIfDisposed(),Wh(this)};const Ip=va({logicalOr_:function(e,t){const n=ma(e,"a","logicalOr","bool"),r=ma(t,"b","logicalOr","bool");Ri(n.shape,r.shape);const a={a:n,b:r};return oa.runKernel(St,a)}});Ur().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ip(this,e)};const Cp=va({logicalXor_:function(e,t){const n=ma(e,"a","logicalXor","bool"),r=ma(t,"b","logicalXor","bool");return Ri(n.shape,r.shape),Ki(Ip(e,t),Wh(Ki(e,t)))}});Ur().prototype.logicalXor=function(e){return this.throwIfDisposed(),Cp(this,e)},Ur().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Xi(this,e,t,n)},Ur().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Yi(this,e,t,n,r)},Ur().prototype.max=function(e,t){return this.throwIfDisposed(),Ui(this,e,t)},Ur().prototype.maximum=function(e){return this.throwIfDisposed(),Zi(this,e)},Ur().prototype.mean=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},Ur().prototype.min=function(e,t){return this.throwIfDisposed(),Uu(this,e,t)},Ur().prototype.minimum=function(e){return this.throwIfDisposed(),eo(this,e)};const Np=va({mirrorPad_:function(e,t,n){d("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ma(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)d(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`));const s={paddings:t,mode:n},i={x:r};return oa.runKernel(Pt,i,s)}});Ur().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Np(this,e,t)};const Sp=va({mod_:function(e,t){let n=ma(e,"a","mod"),r=ma(t,"b","mod");[n,r]=Qr(n,r);const a={a:n,b:r};return oa.runKernel(zt,a)}});Ur().prototype.mod=function(e){return this.throwIfDisposed(),Sp(this,e)},Ur().prototype.mul=function(e){return this.throwIfDisposed(),Gi(this,e)},Ur().prototype.neg=function(){return this.throwIfDisposed(),ho(this)},Ur().prototype.norm=function(e,t,n){return this.throwIfDisposed(),qu(this,e,t,n)},Ur().prototype.notEqual=function(e){return this.throwIfDisposed(),po(this,e)},Ur().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),fo(this,e,t,n)},Ur().prototype.onesLike=function(){return this.throwIfDisposed(),vo(this)},Ur().prototype.pad=function(e,t){return this.throwIfDisposed(),yo(this,e,t)};const Ep=va({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=ma(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=ri(i,[1,i.shape[0],i.shape[1],i.shape[2]])),d(ti(s,a),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`));const l=Hs(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([l.inHeight,l.inWidth],c,h),g=p?r:"valid",v=p?o:xc(o,c,f),y=("avg"===n?()=>ai(v,t,s,g):()=>Yi(v,t,s,g))(),b=p?y:Qh(y,c,m);return u?ri(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});Ur().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Ep(this,e,t,n,r,a)},Ur().prototype.pow=function(e){return this.throwIfDisposed(),Gu(this,e)},Ur().prototype.prelu=function(e){return this.throwIfDisposed(),bo(this,e)};const Tp=va({prod_:function(e,t=null,n=!1){let r=ma(e,"x","prod");"bool"===r.dtype&&(r=es(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return oa.runKernel(en,a,s)}});Ur().prototype.prod=function(e,t){return this.throwIfDisposed(),Tp(this,e,t)};const Rp=va({reciprocal_:function(e){const t={x:ma(e,"x","reciprocal")};return oa.runKernel(rn,t)}});Ur().prototype.reciprocal=function(){return this.throwIfDisposed(),Rp(this)},Ur().prototype.relu=function(){return this.throwIfDisposed(),No(this)},Ur().prototype.relu6=function(){return this.throwIfDisposed(),au(this)},Ur().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ri(this,e.shape)},Ur().prototype.reshape=function(e){return this.throwIfDisposed(),ri(this,e)},Ur().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),$u(this,e,t,n)},Ur().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ou(this,e,t,n)},Ur().prototype.reverse=function(e){return this.throwIfDisposed(),So(this,e)},Ur().prototype.rfft=function(){return this.throwIfDisposed(),eu(this)},Ur().prototype.round=function(){return this.throwIfDisposed(),Bu(this)},Ur().prototype.rsqrt=function(){return this.throwIfDisposed(),jc(this)},Ur().prototype.selu=function(){return this.throwIfDisposed(),Eo(this)},Ur().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),To(this,e,t,n,r,a,s)},Ur().prototype.sigmoid=function(){return this.throwIfDisposed(),Ro(this)};const Ap=va({sign_:function(e){const t={x:ma(e,"x","sign")};return oa.runKernel(wn,t)}});Ur().prototype.sign=function(){return this.throwIfDisposed(),Ap(this)},Ur().prototype.sin=function(){return this.throwIfDisposed(),Fc(this)},Ur().prototype.sinh=function(){return this.throwIfDisposed(),$c(this)},Ur().prototype.slice=function(e,t){return this.throwIfDisposed(),Ao(this,e,t)},Ur().prototype.softmax=function(e){return this.throwIfDisposed(),Oo(this,e)},Ur().prototype.softplus=function(){return this.throwIfDisposed(),Mo(this)},Ur().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),xc(this,e,t)},Ur().prototype.split=function(e,t){return this.throwIfDisposed(),Lo(this,e,t)},Ur().prototype.sqrt=function(){return this.throwIfDisposed(),Bo(this)},Ur().prototype.square=function(){return this.throwIfDisposed(),lo(this)},Ur().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Zu(this,e)},Ur().prototype.squeeze=function(e){return this.throwIfDisposed(),Po(this,e)},Ur().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Vr?[this,e]:[this,...e];return zo(n,t)},Ur().prototype.step=function(e){return this.throwIfDisposed(),su(this,e)};const Dp=va({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:ma(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return oa.runKernel(Mn,l,c)}});Ur().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Dp(this,e,t,n,r,a,s,i,o)},Ur().prototype.sub=function(e){return this.throwIfDisposed(),Hi(this,e)},Ur().prototype.sum=function(e,t){return this.throwIfDisposed(),qi(this,e,t)};const Fp=va({tan_:function(e){const t={x:ma(e,"x","tan")};return oa.runKernel(Wn,t)}});Ur().prototype.tan=function(){return this.throwIfDisposed(),Fp(this)},Ur().prototype.tanh=function(){return this.throwIfDisposed(),Wo(this)},Ur().prototype.tile=function(e){return this.throwIfDisposed(),_i(this,e)},Ur().prototype.toBool=function(){return this.throwIfDisposed(),es(this,"bool")},Ur().prototype.toFloat=function(){return this.throwIfDisposed(),es(this,"float32")},Ur().prototype.toInt=function(){return this.throwIfDisposed(),es(this,"int32")};const _p=va({topk_:function(e,t=1,n=!0){const r=ma(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=oa.runKernel(Gn,s,i);return{values:o,indices:u}}});Ur().prototype.topk=function(e,t){return this.throwIfDisposed(),_p(this,e,t)},Ur().prototype.transpose=function(e){return this.throwIfDisposed(),Xo(this,e)};const $p=va({unique_:function(e,t=0){const n=ma(e,"x","unique","string_or_numeric");d(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},a={axis:t},[s,i]=oa.runKernel(jn,r,a);return{values:s,indices:i}}});let Op;function Mp(){return null==Op&&(Op=oa.backend.epsilon()),Op}Ur().prototype.unique=function(e){return this.throwIfDisposed(),$p(this,e)},Ur().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Xc(this,e,t)},Ur().prototype.unstack=function(e){return this.throwIfDisposed(),Ho(this,e)},Ur().prototype.where=function(e,t){return this.throwIfDisposed(),jo(e,this,t)},Ur().prototype.zerosLike=function(){return this.throwIfDisposed(),Ko(this)};class Lp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lp.prototype)}}class Bp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Bp.prototype)}}class Pp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pp.prototype)}}class zp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zp.prototype)}}class Wp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Wp.prototype)}}function Vp(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Up(e,t){if(!e)throw new Wp(t)}function Gp(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Hp(e){return 1===e.length?e[0]:e}function qp(e){return Array.isArray(e)?e:[e]}function jp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Xp={};function Yp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Jp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Jp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Jp(t):e[n]=t.value)}}}function Zp(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Xp)s=Xp[a];else if(s=t[a],null==s)throw new Pp(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Pp(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Xp?[o,u]=Xp.className:i in t&&([o,u]=t[i]),null==o)throw new Pp(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Xp))e[t]=Xp[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Xp);for(const e of Object.keys(n))Xp[e]=n[e];Jp(s.config);const r=u(o,s.config,n,a);return Xp=Object.assign({},t),r}{const e=Object.assign({},Xp);for(const e of Object.keys(n))Xp[e]=n[e];const t=new o(s.config);return Xp=Object.assign({},e),t}}}function Qp(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ed(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function td(e){if(null==e)throw new Pp(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function nd(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Pp(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function rd(e,t,n=0,r=1/0){return Up(n>=0),Up(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ad(e,t){Array.isArray(e)?(d(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ad(e,`element ${n+1} of ${t}`)))):d(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${sd(e)}.`))}function sd(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>sd(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function id(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function od(e,t){return Fs((()=>Bo(qi(Gi(e,e),t,!0))))}class ud extends Es{getConfig(){return{}}}class ld extends ud{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Fs((()=>{const t=od(e,this.axis),n=ci(t,0,this.maxValue);return Gi(e,Ni(n,zs(Mp(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ld.className="MaxNorm",Rs(ld);class cd extends ud{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Fs((()=>Ni(e,zs(Mp(),od(e,this.axis)))))}getConfig(){return{axis:this.axis}}}cd.className="UnitNorm",Rs(cd);class hd extends ud{apply(e){return No(e)}}hd.className="NonNeg",Rs(hd);class pd extends ud{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Fs((()=>{const t=od(e,this.axis),n=zs(Gi(this.rate,ci(t,this.minValue,this.maxValue)),Gi(1-this.rate,t));return Gi(e,Ni(n,zs(Mp(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}pd.className="MinMaxNorm",Rs(pd);const dd={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function fd(e){return Yp(e)}function md(e,t={}){return Zp(e,Ts.getMap().classNameMap,t,"constraint")}function gd(e){return null==e?null:"string"==typeof e?md({className:e in dd?dd[e]:e,config:{}}):e instanceof ud?e:md(e)}const vd=["channelsFirst","channelsLast"],yd=["nearest","bilinear"],bd=["valid","same","causal"],xd=["max","avg"],wd=["sum","mul","concat","ave"],kd=new Map;function Id(e){nd(vd,"DataFormat",e)}function Cd(e){nd(bd,"PaddingMode",e)}function Nd(e){nd(xd,"PoolMode",e)}const Sd=[];function Ed(e,t){Sd.push(e);try{const e=t();return Sd.pop(),e}catch(e){throw Sd.pop(),e}}function Td(e){if(!Dd(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Sd.length?"":Sd.join("/")+"/")+e}function Rd(e){if(!Dd(e))throw new Error("Not a valid tensor name: '"+e+"'");kd.has(e)||kd.set(e,0);const t=kd.get(e);if(kd.set(e,kd.get(e)+1),t>0){const n=`${e}_${t}`;return kd.set(n,1),n}return e}const Ad=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Dd(e){return!!e.match(Ad)}function Fd(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function _d(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function $d(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Od(e,t){if(t<e)throw new Pp(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Md(e,t){return es(e,t)}function Ld(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ri(e,n)}function Bd(e,t,n){return Fs((()=>{switch(e.rank){case 1:return Do(e,t,n);case 2:return Fo(e,[t,0],[n,e.shape[1]]);case 3:return _o(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return $o(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ao(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ao(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Pp(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Pd(e,t,n){return Fs((()=>{switch(e.rank){case 1:return Do(e,t,n);case 2:return Fo(e,[0,t],[e.shape[0],n]);case 3:return _o(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return $o(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Pp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function zd(e,t,n,r){return Fs((()=>{switch(e.rank){case 1:return Do(e,t,n);case 2:switch(r){case 1:return Bd(e,t,n);case 2:return Pd(e,t,n);default:throw new Pp(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Bd(e,t,n);case 2:return _o(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Pd(e,t,n);default:throw new Pp(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Bd(e,t,n);case 2:return $o(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return $o(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Pd(e,t,n);default:throw new Pp(`The axis is not within the rank of the tensor ${r}`)}default:throw new Pp(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Wd(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),hi(e,t)}function Vd(e,t){switch(e.rank){case 1:return pi([e,t]);case 2:return di([e,t],0);case 3:return fi([e,t],0);case 4:return mi([e,t],0);default:throw new Pp(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ud(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Pp(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return _i(e,t)}function Gd(e,t=0,n=1,r,a){return Io(e,t,n,r,a)}function Hd(e,t,n,r){if(e.rank<2||t.rank<2)throw new zp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new zp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return du({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Kd(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=ri(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ri(Xo(t,c),[u,-1]);const h=[...a,...l];return ri(du({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Kd(e.rank,r,"channelsLast"):null,activation:n}),h)}}function qd(e,t,n){return Fs((()=>(t=Array.isArray(t)?Vo(t,"int32"):es(t,"int32"),Li(e,t,n))))}function jd(e){return Gi(e,e)}function Kd(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Pp(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?ri(t,[1,r[0],1,1,1]):ri(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ri(t,[1,1,1,1,r[0]]):ri(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?ri(t,[1,r[0],1,1]):ri(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ri(t,[1,1,1,r[0]]):ri(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?ri(t,[1,r[0],1]):ri(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ri(t,[1,1,r[0]]):ri(t,[1].concat(r))}else if(e<3)return t;throw new Pp(`Unsupported input rank by biasAdd: ${t.rank}`)}function Xd(e,t,n){return Fs((()=>(null==n&&(n="channelsLast"),Id(n),zs(e,Kd(e.rank,t,n)))))}function Yd(e,t,n,r){return Fs((()=>Yo(e,t,n,r)))}function Jd(e,t,n=!1){return n?e():t()}const Zd=["fanIn","fanOut","fanAvg"],Qd=["normal","uniform","truncatedNormal"];class ef extends Es{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class tf extends ef{apply(e,t){return mo(e,t)}}tf.className="Zeros",Rs(tf);class nf extends ef{apply(e,t){return go(e,t)}}nf.className="Ones",Rs(nf);class rf extends ef{constructor(e){if(super(),"object"!=typeof e)throw new Pp(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Pp(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Fs((()=>Gi(Ls(this.value),go(e,t))))}getConfig(){return{value:this.value}}}rf.className="Constant",Rs(rf);class af extends ef{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Co(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}af.className="RandomUniform",Rs(af);class sf extends ef{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`randomNormal does not support dType ${t}.`);return Gd(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sf.className="RandomNormal",Rs(sf);class of extends ef{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`truncatedNormal does not support dType ${t}.`);return Go(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}of.className="TruncatedNormal",Rs(of);class uf extends ef{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Fs((()=>{if(2!==e.length||e[0]!==e[1])throw new Pp("Identity matrix initializer can only be used for 2D square matrices.");return Gi(this.gain,$i(e[0]))}))}getConfig(){return{gain:this.gain}}}uf.className="Identity",Rs(uf);class lf extends ef{constructor(e){if(super(),e.scale<0)throw new Pp(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,nd(Zd,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){nd(Qd,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Id(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Fd(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Fd(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Fd(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new zp(`${this.getClassName()} does not support dType ${t}.`);return Go(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Co(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}lf.className="VarianceScaling",Rs(lf);class cf extends lf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lf.className}}cf.className="GlorotUniform",Rs(cf);class hf extends lf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lf.className}}hf.className="GlorotNormal",Rs(hf);class pf extends lf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lf.className}}pf.className="HeNormal",Rs(pf);class df extends lf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lf.className}}df.className="HeUniform",Rs(df);class ff extends lf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return lf.className}}ff.className="LeCunNormal",Rs(ff);class mf extends lf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return lf.className}}mf.className="LeCunNormal",Rs(mf);class gf extends ef{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new zp("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Fs((()=>{if(e.length<2)throw new zp("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Gd(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=tl.gramSchmidt(t);return e[0]>e[1]&&(n=Xo(n)),Gi(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}gf.className="Orthogonal",Rs(gf);const vf={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function yf(e,t={}){return Zp(e,Ts.getMap().classNameMap,t,"initializer")}function bf(e){return Yp(e)}function xf(e){if("string"==typeof e){const t=e in vf?vf[e]:e;if("GlorotNormal"===t)return new hf;if("GlorotUniform"===t)return new cf;if("HeNormal"===t)return new pf;if("HeUniform"===t)return new df;if("LeCunNormal"===t)return new ff;if("LeCunUniform"===t)return new mf;{const e={};return e.className=t,e.config={},yf(e)}}return e instanceof ef?e:yf(e)}let wf=0;function kf(){return wf++}const If={};function Cf(e=""){return e in If||(If[e]=0),If[e]+=1,e+If[e].toString()}function Nf(e){return Array.isArray(e)&&Array.isArray(e[0])}function Sf(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ef(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Pp(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Tf(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Pp(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Rf(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Af{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=kf(),n=null==n?"Variable":n,this.originalName=Td(n),this.name=Rd(this.originalName),this.trainable_=r,this.constraint=a,this.val=function(e,t=!0,n,r){return oa.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Df(e){return e.map((e=>e.read()))}function Ff(e){e.forEach((e=>{e[0].write(e[1])}))}class _f{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class $f{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=kf(),null!=s&&(this.originalName=Td(s),this.name=Rd(this.originalName)),this.rank=t.length}}let Of=0;class Mf{constructor(e,t){this.callArgs=t,this.id=Of++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Lf=0;class Bf extends Es{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Lf++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=jp(e)+"_"+Cf(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Bp(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Pp(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Hp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Hp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Lp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Lp(`Layer ${this.name} is not connected, no input to return.`);return Hp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Lp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Lp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Hp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=qp(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=qp(this.inputSpec);if(e.length!==t.length)throw new Pp(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Pp(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Pp(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Pp(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Pp(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Pp(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Pp(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=qp(e);let r=!0;for(const e of n)if(!(e instanceof $f)){r=!1;break}let a=!0;for(const e of n)if(e instanceof $f){a=!1;break}if(r===a)throw new Pp("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ed(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of qp(e))t.push(n.shape);this.build(Hp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=qp(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Hp(s),null!=this.activityRegularizer)throw new zp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=qp(e);const t=[];for(const n of e)t.push(n.shape);return Hp(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new $f(s,n,this,qp(e),t,this.name,r))):new $f(s,r,this,qp(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new zp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Lp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Lp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Bp(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Rf(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Df(e?this.trainableWeights:this.weights)}setWeights(e){Fs((()=>{const t=this.weights;if(t.length!==e.length)throw new Pp(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Df(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!y(s.shape,o.shape))throw new Pp(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ff(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Pp(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=xf("zeros"));const o=r.apply(t,n),u=new Af(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=qp(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=qp(e);t=qp(t),n=qp(n),r=qp(r),a=Sf(a),s=Sf(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Mf({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Pf(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Pf(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class zf extends Bf{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Cf("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Pp("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Pp("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Pp("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new $f(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Pp(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Wf(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];_s(r)}}function Vf(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Uf;zf.className="InputLayer",Rs(zf),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Uf||(Uf={}));class Gf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Hf{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class qf extends Gf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Fs((()=>zs(this.totals[e],Gi(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Fs((()=>{const n=Gi(Ni(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),$s(t[e])})))}}class jf extends Gf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Kf extends Gf{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");F(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Er();return(...a)=>{const s=Er();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Wf(n),r.push(this.yield(e,t,n))),r.push(pl()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Wf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Wf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(pl()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Wf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Wf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(pl()):F(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Wf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Wf(e),await this.trainEnd(e))}}function Xf(e,t){return null==e&&(e={}),e instanceof Gf?[e]:Array.isArray(e)&&e[0]instanceof Gf?e:qp(e).map((e=>new Kf(e,t)))}class Yf{constructor(){}static registerCallbackConstructor(e,t){d(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Yf.checkForDuplicate(t),null==Yf.constructors[e]&&(Yf.constructors[e]=[]),Yf.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Yf.constructors)Yf.constructors[+t].forEach((t=>{if(t===e)throw new Pp("Duplicate callback constructor.")}))}static clear(){Yf.constructors={}}static createCallbacks(e){const t=[];for(const n in Yf.constructors){const r=+n;e>=r&&t.push(...Yf.constructors[r])}return t.map((e=>new e))}}function Jf(e,t,n,r,a,s,i,o,u){const l=new jf,c=[new qf,...Yf.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Hf(c);return h.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Zf(e,t={},n=!1){return Zp(e,Ts.getMap().classNameMap,t,"layer",n)}function Qf(e,t){return Fs((()=>{"float32"!==e.dtype&&(e=es(e,"float32"));const n=qi(jd(e),t,!0),r=Oi(n.shape,Mp()),a=Bo(Zi(n,r));return Ni(e,a)}))}function em(e,t){return Fs((()=>Qi(jd(Hi(t,e)),-1)))}function tm(e,t){return Fs((()=>Qi(Ps(Hi(t,e)),-1)))}function nm(e,t){return Fs((()=>{const n=Hi(e,t),r=ci(Ps(e),Mp(),Number.MAX_VALUE),a=Ps(Ni(n,r));return Gi(100,Qi(a,-1))}))}function rm(e,t,n=!1){return Fs((()=>{if(n)t=Oo(t);else{const e=qi(t,t.shape.length-1,!0);t=Ni(t,e)}return t=ci(t,Mp(),1-Mp()),ho(qi(Gi(es(e,"float32"),Wi(t)),t.shape.length-1))}))}function am(e,t,n=!1){return Fs((()=>{const r=es(Mi(function(e){const t=[Fd(e.shape)];return ri(e,t)}(e)),"int32"),a=(t=ci(t,Mp(),1-Mp())).shape;return rm(ri(fo(r,a[a.length-1]),a),t,n)}))}function sm(e,t){return Fs((()=>{let n;return n=ci(t,Mp(),1-Mp()),n=Wi(Ni(n,Hi(1,n))),Qi(function(e,t){if(!y(e.shape,t.shape))throw new Pp(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Fs((()=>{const n=No(t),r=ho(Ps(t));return zs(Hi(n,Gi(t,e)),Vi(Di(r)))}))}(e,n),-1)}))}function im(e,t){return Fs((()=>{const n=Qf(e,-1),r=Qf(t,-1),a=Gi(n,r);return ho(qi(a,-1))}))}Yf.constructors={};const om={meanSquaredError:em,meanAbsoluteError:tm,meanAbsolutePercentageError:nm,meanSquaredLogarithmicError:function(e,t){return Fs((()=>{const n=ci(t,Mp(),Number.MAX_VALUE),r=Wi(zs(1,n)),a=ci(e,Mp(),Number.MAX_VALUE),s=Wi(zs(1,a));return Qi(jd(Hi(r,s)),-1)}))},squaredHinge:function(e,t){return Fs((()=>{const n=Zi(0,Hi(1,Gi(e,t)));return Qi(jd(n),-1)}))},hinge:function(e,t){return Fs((()=>{const n=Zi(0,Hi(1,Gi(e,t)));return Qi(n,-1)}))},categoricalHinge:function(e,t){return Fs((()=>{const n=qi(Gi(e,t),-1),r=Ui(Gi(Hi(1,e),t),-1);return Zi(0,zs(1,Hi(r,n)))}))},logcosh:function(e,t){return Fs((()=>{const n=Math.log(2),r=Hi(t,e),a=Hi(zs(r,Mo(Gi(-2,r))),n);return Qi(a,-1)}))},categoricalCrossentropy:rm,sparseCategoricalCrossentropy:am,binaryCrossentropy:sm,kullbackLeiblerDivergence:function(e,t){return Fs((()=>{const n=ci(e,Mp(),1),r=ci(t,Mp(),1);return qi(Gi(e,Wi(Ni(n,r))),-1)}))},poisson:function(e,t){return Fs((()=>{const n=Wi(zs(Mp(),t));return Qi(Hi(t,Gi(e,n)),-1)}))},cosineProximity:im};function um(e){if("string"==typeof e){if(e in om)return om[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Pp(t)}return e}function lm(e,t){return Fs((()=>{const n=Gi(.5,vo(t)),r=Md(Bi(t,n),e.dtype);return Qi(Ai(e,r),-1)}))}function cm(e,t){return Fs((()=>Md(Ai(Us(e,-1),Us(t,-1)),"float32")))}function hm(e,t){return sm(e,t)}function pm(e,t){return e.rank===t.rank&&(e=Po(e,[e.rank-1])),(t=Us(t,-1)).dtype!==e.dtype&&(t=es(t,e.dtype)),es(Ai(e,t),"float32")}const dm=rm,fm=am,mm={binaryAccuracy:lm,categoricalAccuracy:cm,precision:function(e,t){return Fs((()=>{const n=function(e,t){return Fs((()=>es(qi(Ki(Ai(e,1),Ai(t,1))),"float32")))}(e,t),r=function(e,t){return Fs((()=>es(qi(Ki(Ai(e,0),Ai(t,1))),"float32")))}(e,t),a=zs(n,r);return es(jo(Bi(a,0),Ni(n,a),0),"float32")}))},categoricalCrossentropy:dm,sparseCategoricalCrossentropy:fm,mse:em,MSE:em,mae:tm,MAE:tm,mape:nm,MAPE:nm,cosine:im};function gm(e){if("string"==typeof e&&e in mm)return mm[e];if("string"!=typeof e&&null!=e)return e;throw new Pp(`Unknown metric ${e}`)}function vm(e){if(Up(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(om))if(om[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(mm))if(mm[n]===e){t=n;break}return void 0!==t?t:e.name}}function ym(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!bm(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function bm(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!bm(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!bm(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xm(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function wm(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}xm([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function km(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];xm([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)xm(["","","",s[e]],t,r)}function Im(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Cm(e,t){if(null===e)return null;if("string"==typeof e)return Kp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Im(t,a,r)?n.push(r):n.push(Cm(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Kp(n);t[e]=Cm(r,e)}}return t}}function Nm(e,t){if(null==e)return null;if("string"==typeof e)return jp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Im(t,a,r)?n.push(r):n.push(Nm(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[jp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Nm(r,n):r}return t}}class Sm{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Sm)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Pp(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return es(t,e.dtype)}catch(n){throw new Pp(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $f){if(null==this.id2Value[e.id])throw new Pp(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Pp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof $f){if(null==this.id2Value[e.id])throw new Pp(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Pp(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&_s(this.id2Mask)}}const Em={},Tm={};function Rm(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==Em[c]){const e=function(e,t){d(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Dm(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Dm(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Am(r)}}(i,t);h=e.sorted,p=e.recipientCounts,Em[c]=h,Tm[c]=p}h=Em[c],p={},a||Object.assign(p,Tm[c]);const f=new Sm(t);for(let e=0;e<h.length;++e){if(null!=r){const e=Ds().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=h[e],i=s.sourceLayer;if(i instanceof zf)continue;const l=[],c=[],d=[];let m=!1;for(const e of s.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||d.push(n))}m&&((n=n||{}).mask=c[0]);const g=qp(i.apply(l,n));let v=null;i.supportsMasking&&(v=i.computeMask(l,c));const y=Fm(s),b=Array.isArray(y)?y:[y];for(let e=0;e<b.length;++e){f.hasKey(b[e])||f.add(b[e],g[e],Array.isArray(v)?v[0]:v);const t=o.indexOf(b[e].name);-1!==t&&(u[t]=g[e])}a||_s(d)}return f.disposeMasks(),s?u:u[0]}function Am(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Dm(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Fm(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class _m extends Bf{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Cf(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],ed(this.inputs).length!==this.inputs.length)throw new Pp(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ed(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Up(0===n,"input layer has >1 nodes"),Up(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof zf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Bp(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(_m.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Qp);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof _m&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Qp);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Bp(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Bp(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Pp("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Pp(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Pp(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Pp(`${e.length} of ${r} weights are not set: ${e}`)}Ff(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.9.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Nm(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Fs((()=>{e=qp(e);const n=new Sm;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Rm(this.outputs,n,t)}))}computeMask(e,t){return Fs((()=>{let n;return e=qp(e),n=null==t?Vp(null,e.length):qp(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Sf(e);if(t.length!==this.inputLayers.length)throw new Pp(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qp);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Sf(t.computeOutputShape(Hp(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Up(t in n),a.push(n[t])}return Hp(a)}runInternalGraph(e,t){null==t&&(t=Vp(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Qp);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=qp(t.call(e,l)),u=qp(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=qp(t.call(r,l)),u=qp(t.computeMask(r,i));if(t.activityRegularizer)throw new zp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Up(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof _m?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=_m.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Pp(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Pp("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Pp(`No such layer: ${e}`)}calculateLosses(){return Fs((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=_m.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=_m.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[_m.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=_m.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=_m.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(Hp(n),r)}function u(e){const n=e.name,s=Zf(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Pp(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!td(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];Up(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Up(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Pp("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Fs((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function $m(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Om(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Fs((()=>{if(1===e.shape.length)return ts(e);if(2===e.shape.length){if(e.shape[1]>1)return Us(e,1);if(1===e.shape[1])return ri(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());_s(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Vo(a,"float32")}return null}function Mm(e,t){return Gi(e,t)}function Lm(e,t){let n,r;const a=t;n=a.xs,r=a.ys,d(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Bm("input",e.inputNames,n),i=Bm("output",e.outputNames,r),o=s[0].shape[0];d(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),d(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)d(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)d(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Bm(e,t,n){if(n instanceof Vr)return[n];if(Array.isArray(n))return d(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Pp(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Pm(e){return"function"==typeof e.iterator}function zm(e){d(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Wm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Bd(e,t,n-t))):Bd(e,t,n-t)}function Vm(e,t){return Fs((()=>null==e?null:Array.isArray(e)?e.map((e=>Vm(e,t))):qd(e,"int32"===t.dtype?t:es(t,"int32"))))}function Um(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Gm(e){const t=[];e instanceof Vr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Ld(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Hm(e,t){if(null==e)return;const n=[];if(t instanceof Vr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Vr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function qm(e){return Array.isArray(e)}function jm(e){return!function(e){return e instanceof Vr}(e)&&!qm(e)}function Km(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(qm(e)&&e.length>0)t=!0;else if(jm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Pp(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(jm(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Pp(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(qm(e)){if((e=e).length!==t.length)throw new Pp(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Pp(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Gm(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Pp(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new Pp(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function Xm(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Pp(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Pp(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Pp(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Pp(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ym extends _m{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Pp("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),xm(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?wm(o[e],n,r):km(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Rf(e.collectedTrainableWeights):Rf(e.trainableWeights),t}(e),l=Rf(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>cl.adagrad(.01),Adadelta:()=>cl.adadelta(1,.95,Mp()),Adam:()=>cl.adam(.001,.9,.999,Mp()),Adamax:()=>cl.adamax(.002,.9,.999,Mp(),0),RMSProp:()=>cl.rmsprop(.001,.9,0,Mp()),SGD:()=>cl.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Pp(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Bs))throw new Pp("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Pp(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>um(e)))}else{const n=um(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Pp(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(um(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ed("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ed("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===sm?-1!==["accuracy","acc"].indexOf(i)?r=lm:-1!==["crossentropy","ce"].indexOf(i)&&(r=hm):this.lossFunctions[e]===am?-1!==["accuracy","acc"].indexOf(i)?r=pm:-1!==["crossentropy","ce"].indexOf(i)&&(r=fm):-1!==["accuracy","acc"].indexOf(i)?r=cm:-1!==["crossentropy","ce"].indexOf(i)&&(r=dm),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=gm(i);s=e,n=""+vm(i)}let t;Ed(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;zm(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Hp(this.testLoop(i,s,r,n.verbose,n.steps))}finally{Hm(a[0],e),Hm(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new zp("Verbose mode is not implemented yet.");d(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=Fs((()=>{if(t.value){const{xs:n,ys:r}=Lm(e,t.value),i=n.concat(r),l=Fs((()=>a(i)));if(_s(i),0===u)for(let e=0;e<l.length;++e)s.push(Ls(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=Fs((()=>zs(s[e],Gi(c,t)))),u>0&&_s(n)}_s(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=Ni(s[e],o),_s(t)}return Hp(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Pp(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Pp(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Pp("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Sm;if(e instanceof Vr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Pp(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Pp(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Rm(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Vp(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Pp(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Fs((()=>{const r=this.checkNumSamples(e);if(n)throw new zp("Verbose predictLoop() is not implemented yet.");const a=Um(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)Fs((()=>{const n=a[t][0],r=a[t][1],s=Wm(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Sm(i);return Rm(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Hp(s.map((e=>hi(e,0))))}))}predict(e,t={}){const n=Gm(e);Xm(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return zm(r),this.predictLoop(n,r)}finally{Hm(n,e)}}predictOnBatch(e){Xm(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Bp("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===am?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=ed(e.map((e=>e.shape[0])));r.sort();const a=ed(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Pp(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Pp(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!y(r,a))throw new Pp(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Km(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Km(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[em,sm,rm];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===rm&&1===s.shape[s.shape.length-1])throw new Pp(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Pp(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Pp(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=$m(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Om(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return Fs((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new zp("Verbose mode is not implemented yet.");if(null!=a)throw new zp("steps mode in testLoop() is not implemented yet");{const r=Um(s,n),a=Vo(Od(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Bd(a,s,o-s),l=Vm(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(Ls(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=zs(i[e],Gi(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Ni(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Gp(e,r)>1&&(a+=`_${Gp(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Sm(e),o=Rm(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Mm(n,a[e]));const s=Qi(n);t.push(s),u=0===e?n:zs(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Qi(t(r[a],o[a]))}$s(n),s.push(n)}return u=Qi(u),this.calculateLosses().forEach((e=>{u=zs(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>Fs((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Sm(s),o=Rm(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Qi(r(a[e],o[e]));n=0===e?s:zs(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Qi(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,h;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;zm(p);const d=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,p);a=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new zp("validationData including sample weights is not supported yet."):new Pp(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);u=n[0],c=n[1],m=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Wm(a,e,t),a=Wm(a,0,e),c=Wm(s,e,t),s=Wm(s,0,e),m=u.concat(c)}else null!=r.validationSteps&&(g=!0);const v=a.concat(s).concat(h);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;g?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,m=[],w=b.slice());const k=Xf(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,a,s,i,o,u,c,h,p,d,f,m){null==a&&(a=32),null==s&&(s=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;null!=u&&null!=c&&(g=!0);const v=e.checkNumSamples(n,a,f,"steps_per_epoch");let y;null!=v&&(y=Od(0,v)),null==i&&(i=1);const{callbackList:b,history:x}=Jf(o,i,s,d,v,f,a,g,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===h)throw new zp("batch shuffling is not implemneted yet");h&&l(y);const i=Vo(y),o=Um(v,a);for(let l=0;l<o.length;++l){const h={};if(await b.onBatchBegin(l,h),Fs((()=>{const p=o[l][0],d=o[l][1],f=Bd(i,p,d-p);h.batch=l,h.size=d-p;const m=Vm(n,f),v=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=v[e];h[t]=n,$s(n)}if(l===o.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];$s(a),s["val_"+n]=a}}})),await b.onBatchEnd(l,h),Vf(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,v,b,p,r.epochs,r.verbose,k,x,m,r.shuffle,w,r.initialEpoch,null);return I}finally{e.isTraining=!1,Hm(a,t),Hm(s,n),Hm(u,i),Hm(c,o),null!=h&&_s(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(d(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),d(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),d(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),d(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),d(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Pm(n.validationData))d(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new zp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Xf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Jf(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await p.onEpochBegin(m);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Lm(e,t.value),s={};s.batch=h,s.size=r[0].shape[0],await p.onBatchBegin(h,s);const i=[];if(null!=n.classWeight){const t=$m(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Om(a[e],null,t[e]))}const l=r.concat(a).concat(i),d=o(l);_s(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];s[t]=n,$s(n)}await p.onBatchEnd(h,s),Vf(s),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Pm(n.validationData)?qp(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):qp(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(m,l),m++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return _s(s),Hp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ds().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ds().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=jp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>jp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=jp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[jp(vm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>jp(vm(e))));{const e={};for(const t in this.metrics)e[t]=jp(vm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Zf(Cm(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Kp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Kp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Kp(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Kp(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Kp(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ta.getSaveHandlers(n));if(0===t.length)throw new Pp(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Pp(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Pp("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await wa(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.9.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await wa(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=Na([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;ym(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=r.data,a.weightSpecs=r.specs,e.save(a)}setUserDefinedMetadata(e){ym(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ym.className="Model",Rs(Ym);class Jm extends Ym{}Jm.className="Functional",Rs(Jm);class Zm extends Ym{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Cf("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Pp(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Zm||e instanceof Ym;let n;if(t){if(n=e,1!==n.outputs.length)throw new Pp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Pp("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Pp("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Pp("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new zf({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Pp(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Pp("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Pf(this.outputs[0])}this.inboundNodes=[],new Mf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Vp(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Tf(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ym({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Bp("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Bp("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Bp("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Bp("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Pp("Legacy serialization format not supported yet.");a=t}else d(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Zm))throw new zp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Zf(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Pp("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Pp("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Zm.className="Sequential",Rs(Zm);class Qm extends Es{getConfig(){return{}}}class eg extends Qm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new zp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Si(e)}(e,t)}}eg.className="elu",Rs(eg);class tg extends Qm{apply(e){return Eo(e)}}tg.className="selu",Rs(tg);class ng extends Qm{apply(e){return No(e)}}ng.className="relu",Rs(ng);class rg extends Qm{apply(e){return Fs((()=>eo(6,No(e))))}}rg.className="relu6",Rs(rg);class ag extends Qm{apply(e){return e}}ag.className="linear",Rs(ag);class sg extends Qm{apply(e){return Ro(e)}}sg.className="sigmoid",Rs(sg);class ig extends Qm{apply(e){return function(e){return Fs((()=>{const t=zs(.5,Gi(.2,e));return ci(t,0,1)}))}(e)}}ig.className="hardSigmoid",Rs(ig);class og extends Qm{apply(e){return Mo(e)}}og.className="softplus",Rs(og);class ug extends Qm{apply(e){return function(e){return Fs((()=>Ni(e,zs(Ps(e),1))))}(e)}}ug.className="softsign",Rs(ug);class lg extends Qm{apply(e){return Wo(e)}}lg.className="tanh",Rs(lg);class cg extends Qm{apply(e,t=-1){return Oo(e,t)}}cg.className="softmax",Rs(cg);class hg extends Qm{apply(e,t=-1){return ji(e,t)}}hg.className="logSoftmax",Rs(hg);class pg extends Qm{apply(e,t=1){return Fs((()=>Gi(Ro(Gi(e,t)),e)))}}pg.className="swish",Rs(pg);class dg extends Qm{apply(e){return Fs((()=>Gi(e,Wo(Mo(e)))))}}function fg(e){return e.getClassName()}function mg(e,t={}){return Zp(e,Ts.getMap().classNameMap,t,"activation")}function gg(e){if(null==e){return mg({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},mg(t)}return e instanceof Qm?e:mg(e)}dg.className="mish",Rs(dg);class vg extends Es{}class yg extends vg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Fs((()=>{let t=mo([1]);return this.hasL1&&(t=zs(t,qi(Gi(this.l1,Ps(e))))),this.hasL2&&(t=zs(t,qi(Gi(this.l2,jd(e))))),ri(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}yg.className="L1L2",Rs(yg);const bg={l1l2:"L1L2"};function xg(e){return Yp(e)}function wg(e,t={}){return Zp(e,Ts.getMap().classNameMap,t,"regularizer")}function kg(e){return null==e?null:"string"==typeof e?wg({className:e in bg?bg[e]:e,config:{}}):e instanceof vg?e:wg(e)}class Ig extends Bf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ef(e);let n=No(e);return null!=this.maxValue&&(n=ci(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Ig.className="ReLU",Rs(Ig);class Cg extends Bf{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ef(e);return zi(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Cg.className="LeakyReLU",Rs(Cg);class Ng extends Bf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=xf(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=kg(e.alphaRegularizer),this.alphaConstraint=gd(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Pp(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Tf(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new _f({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ef(e),bo(e,this.alpha.read())}getConfig(){const e={alphaInitializer:bf(this.alphaInitializer),alphaRegularizer:xg(this.alphaRegularizer),alphaConstraint:fd(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Ng.className="PReLU",Rs(Ng);class Sg extends Bf{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new zp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ef(e);return Si(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Sg.className="ELU",Rs(Sg);class Eg extends Bf{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ef(e);return Gi(n,es(Bi(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Eg.className="ThresholdedReLU",Rs(Eg);class Tg extends Bf{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new cg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ef(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Rg(e,t,n){if("number"==typeof e)return Vp(e,t);if(e.length!==t)throw new Pp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Pp(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Ag(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Dg(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+$d([n-t,0]);else{if("same"!==r)throw new Pp(`Unsupport padding mode: ${r}.`);e*=t}return e}function Fg(e,t){return Fs((()=>(Id(t),"channelsFirst"===t?Xo(e,[0,2,3,1]):e)))}function _g(e,t){return Fs((()=>(Id(t),"channelsFirst"===t?Xo(e,[0,2,3,4,1]):e)))}function $g(e,t,n,r=[1,1],a="valid",s,i,o=null){return Fs((()=>{if(null==s&&(s="channelsLast"),Id(s),3!==e.rank&&4!==e.rank)throw new Pp(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Pp(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Fg(e,s);if("causal"===a)throw new zp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=cu({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Xo(u,[0,3,1,2])),u}))}Tg.className="Softmax",Rs(Tg);class Og extends Bf{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Og.verifyArgs(t),this.rank=e,ad(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new zp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Rg(t.kernelSize,e,"kernelSize"),this.strides=Rg(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Cd(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Id(this.dataFormat),this.activation=gg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=xf(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=gd(t.biasConstraint),this.biasRegularizer=kg(t.biasRegularizer),this.activityRegularizer=kg(t.activityRegularizer),this.dilationRate=Rg(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Pp(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Pp(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Pp(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Up("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!rd(e.kernelSize,"number",1,3))throw new Pp(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:fg(this.activation),useBias:this.useBias,biasInitializer:bf(this.biasInitializer),biasRegularizer:xg(this.biasRegularizer),activityRegularizer:xg(this.activityRegularizer),biasConstraint:fd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Mg extends Og{constructor(e,t){super(e,t),this.kernel=null,Mg.verifyArgs(t),this.filters=t.filters,ad(this.filters,"filters"),this.kernelInitializer=xf(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=gd(t.kernelConstraint),this.kernelRegularizer=kg(t.kernelRegularizer)}build(e){e=Tf(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pp(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Fs((()=>{let t;e=Ef(e);const n=null==this.bias?null:this.bias.read(),r=id(this.activation.getClassName());if(null!=r&&2===this.rank)t=$g(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return Fs((()=>{if(null==s&&(s="channelsLast"),Id(s),3!==e.shape.length)throw new Pp(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Pp(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Pp(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Xo(e,[0,2,1])),"causal"===a)throw new zp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=vi(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Xd(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=$g(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new zp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return Fs((()=>{if(null==s&&(s="channelsLast"),Id(s),4!==e.rank&&5!==e.rank)throw new Pp(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Pp(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=_g(e,s);if("causal"===a)throw new zp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=xi(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Xd(o,n)),"channelsFirst"===s&&(o=Xo(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Tf(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Ag(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:bf(this.kernelInitializer),kernelRegularizer:xg(this.kernelRegularizer),kernelConstraint:fd(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Pp(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Lg extends Mg{constructor(e){super(2,e),Lg.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rd(e.kernelSize,"number",1,2))throw new Pp(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Lg.className="Conv2D",Rs(Lg);class Bg extends Mg{constructor(e){super(3,e),Bg.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Pp(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Bg.className="Conv3D",Rs(Bg);class Pg extends Lg{constructor(e){if(super(e),this.inputSpec=[new _f({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Pp(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Tf(e)).length)throw new Pp("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _f({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Fs((()=>{let t=Ef(e);if(4!==t.shape.length)throw new Pp(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,Dg(i,c,u,this.padding),Dg(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Xo(t,[0,2,3,1]));let d=bi(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Xo(d,[0,3,1,2])),null!=this.bias&&(d=Xd(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Tf(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Dg(t[r],o,s,this.padding),t[a]=Dg(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Pg.className="Conv2DTranspose",Rs(Pg);class zg extends Bg{constructor(e){if(super(e),this.inputSpec=[new _f({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Pp(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Tf(e)).length)throw new Pp("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Pp("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new _f({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Fs((()=>{let t=Ef(e);if(5!==t.shape.length)throw new Pp(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Dg(o,d,c,this.padding),Dg(u,f,h,this.padding),Dg(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Xo(t,[0,2,3,4,1]));let v=ki(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=Xo(v,[0,4,1,2,3])),null!==this.bias&&(v=Xd(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){const t=(e=Tf(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Dg(t[r],l,i,this.padding),t[a]=Dg(t[a],c,o,this.padding),t[s]=Dg(t[s],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}zg.className="Conv3DTranspose",Rs(zg);class Wg extends Mg{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Pp("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Pp("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Pp(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=xf(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=kg(t.depthwiseRegularizer),this.depthwiseConstraint=gd(t.depthwiseConstraint),this.pointwiseInitializer=xf(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=kg(t.pointwiseRegularizer),this.pointwiseConstraint=gd(t.pointwiseConstraint)}build(e){if((e=Tf(e)).length<this.rank+2)throw new Pp(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Pp(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new _f({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Fs((()=>{let t;if(e=Ef(e),1===this.rank)throw new zp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Xo(e,[0,2,3,1])),t=To(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Xd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Xo(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=bf(this.depthwiseInitializer),e.pointwiseInitializer=bf(this.pointwiseInitializer),e.depthwiseRegularizer=xg(this.depthwiseRegularizer),e.pointwiseRegularizer=xg(this.pointwiseRegularizer),e.depthwiseConstraint=fd(this.depthwiseConstraint),e.pointwiseConstraint=fd(this.pointwiseConstraint),e}}Wg.className="SeparableConv";class Vg extends Wg{constructor(e){super(2,e)}}Vg.className="SeparableConv2D",Rs(Vg);class Ug extends Mg{constructor(e){super(1,e),Ug.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!rd(e.kernelSize,"number",1,1))throw new Pp(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ug.className="Conv1D",Rs(Ug);class Gg extends Bf{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Fs((()=>{if(e=Ef(e),"channelsLast"===this.dataFormat){const t=zd(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return zd(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=zd(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return zd(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Gg.className="Cropping2D",Rs(Gg);class Hg extends Bf{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Id(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,nd(yd,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Fs((()=>{let t=Ef(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Xo(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?el.resizeNearestNeighbor(t,[e,r]):el.resizeBilinear(t,[e,r]);return Xo(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?el.resizeNearestNeighbor(t,[e,r]):el.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Hg.className="UpSampling2D",Rs(Hg);class qg extends Og{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=xf(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=gd(e.depthwiseConstraint),this.depthwiseRegularizer=kg(e.depthwiseRegularizer)}build(e){if((e=Tf(e)).length<4)throw new Pp(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Pp(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Fs((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Fs((()=>{null==a&&(a="channelsLast"),Id(a);let i=Fg(e,a);if(4!==e.rank)throw new Pp(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Pp(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Ii(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Xo(i,[0,3,1,2])),i}))}(e=Ef(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Xd(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Tf(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Ag(t,this.kernelSize[0],this.padding,this.strides[0]),s=Ag(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=bf(this.depthwiseInitializer),e.depthwiseRegularizer=xg(this.depthwiseRegularizer),e.depthwiseConstraint=fd(this.depthwiseRegularizer),e}}function jg(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Pp("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Kg(e,t,n,r=!1,a,s,i=!1,o=!1){return Fs((()=>{const u=t.shape.length;if(u<3)throw new Pp(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Od(2,u));if(t=Xo(t,l),null!=s)throw new zp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=es(es(a,"bool"),"float32")).rank===u-1&&(a=Fi(a,-1)),a=Xo(a,l)),r&&(t=So(t,0),null!=a&&(a=So(a,0)));const c=[];let h,p=n;const d=t.shape[0],f=Ho(t);let m,g;null!=a&&(m=Ho(a));for(let t=0;t<d;++t){const n=f[t],r=Fs((()=>e(n,p)));if(null==a)h=r[0],p=r[1];else{const e=Fs((()=>{const e=m[t],n=Hi(vo(e),e);return{output:zs(Gi(r[0],e),Gi(p[0],n)),newStates:p.map(((t,a)=>zs(Gi(r[1][a],e),Gi(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=zo(c,1)),[h,g,p]}))}qg.className="DepthwiseConv2D",Rs(qg);class Xg extends Bf{constructor(e){let t;if(super(e),null==e.cell)throw new Pp("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new rv({cells:e.cell}):e.cell,null==t.stateSize)throw new Pp("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new _f({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Od(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Nf(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Fs((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new zp("Constants support is not implemented in RNN yet.");Nf(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new _f({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Pp(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new _f({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Fs((()=>{if(!this.stateful)throw new Lp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Pp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>mo([n,e]))):this.states_=[mo([n,this.cell.stateSize])];else if(null==e)_s(this.states_),null!=this.keptStates&&(_s(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>mo([n,e]))):this.states_[0]=mo([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Pp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):_s(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!y(r.shape,s))throw new Pp(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>$s(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=jg(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new _f({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof $f){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Fs((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Ef(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Pp(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Kg(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Fs((()=>{let t=mo(e.shape);return t=qi(t,[1,2]),t=Ld(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ud(t,[1,e]):t)):this.cell.stateSize>1?[Ud(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Xg.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Zf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Xg.className="RNN",Rs(Xg);class Yg extends Bf{}class Jg extends Yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ad(this.units,"units"),this.activation=gg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kg(e.kernelRegularizer),this.recurrentRegularizer=kg(e.recurrentRegularizer),this.biasRegularizer=kg(e.biasRegularizer),this.kernelConstraint=gd(e.kernelConstraint),this.recurrentConstraint=gd(e.recurrentConstraint),this.biasConstraint=gd(e.biasConstraint),this.dropout=_d([1,$d([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=_d([1,$d([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Tf(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Fs((()=>{if(2!==(e=e).length)throw new Pp(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=av({ones:()=>vo(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=av({ones:()=>vo(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Hd(null!=s?Gi(e,s):e,this.kernel.read()),null!=this.bias&&(a=Xd(a,this.bias.read())),null!=i&&(n=Gi(n,i));let o=zs(a,Hd(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:fg(this.activation),useBias:this.useBias,kernelInitializer:bf(this.kernelInitializer),recurrentInitializer:bf(this.recurrentInitializer),biasInitializer:bf(this.biasInitializer),kernelRegularizer:xg(this.kernelRegularizer),recurrentRegularizer:xg(this.recurrentRegularizer),biasRegularizer:xg(this.biasRegularizer),activityRegularizer:xg(this.activityRegularizer),kernelConstraint:fd(this.kernelConstraint),recurrentConstraint:fd(this.recurrentConstraint),biasConstraint:fd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Jg.className="SimpleRNNCell",Rs(Jg);class Zg extends Xg{constructor(e){e.cell=new Jg(e),super(e)}call(e,t){return Fs((()=>{null!=this.cell.dropoutMask&&(_s(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_s(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Zg.className="SimpleRNN",Rs(Zg);class Qg extends Yg{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Pp("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ad(this.units,"units"),this.activation=gg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=kg(e.kernelRegularizer),this.recurrentRegularizer=kg(e.recurrentRegularizer),this.biasRegularizer=kg(e.biasRegularizer),this.kernelConstraint=gd(e.kernelConstraint),this.recurrentConstraint=gd(e.recurrentConstraint),this.biasConstraint=gd(e.biasConstraint),this.dropout=_d([1,$d([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=_d([1,$d([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Tf(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Fs((()=>{if(2!==(e=e).length)throw new Pp(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=av({ones:()=>vo(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=av({ones:()=>vo(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=Gi(e,a[0]));let l=Hd(e,this.kernel.read());this.useBias&&(l=Xd(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Gi(r,s[0]));const c=this.recurrentKernel.read(),[h,p]=Lo(c,[2*this.units,this.units],c.rank-1),d=Hd(r,h),[f,m,g]=Lo(l,3,l.rank-1),[v,y]=Lo(d,2,d.rank-1);i=this.recurrentActivation.apply(zs(f,v)),o=this.recurrentActivation.apply(zs(m,y));const b=Hd(Gi(o,r),p);u=this.activation.apply(zs(g,b));const x=zs(Gi(i,r),Gi(zs(1,ho(i)),u));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:fg(this.activation),recurrentActivation:fg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bf(this.kernelInitializer),recurrentInitializer:bf(this.recurrentInitializer),biasInitializer:bf(this.biasInitializer),kernelRegularizer:xg(this.kernelRegularizer),recurrentRegularizer:xg(this.recurrentRegularizer),biasRegularizer:xg(this.biasRegularizer),activityRegularizer:xg(this.activityRegularizer),kernelConstraint:fd(this.kernelConstraint),recurrentConstraint:fd(this.recurrentConstraint),biasConstraint:fd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Qg.className="GRUCell",Rs(Qg);class ev extends Xg{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Qg(e),super(e)}call(e,t){return Fs((()=>{null!=this.cell.dropoutMask&&(_s(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_s(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ev.className="GRU",Rs(ev);class tv extends Yg{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ad(this.units,"units"),this.activation=gg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=gg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=xf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=xf(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=xf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=kg(e.kernelRegularizer),this.recurrentRegularizer=kg(e.recurrentRegularizer),this.biasRegularizer=kg(e.biasRegularizer),this.kernelConstraint=gd(e.kernelConstraint),this.recurrentConstraint=gd(e.recurrentConstraint),this.biasConstraint=gd(e.biasConstraint),this.dropout=_d([1,$d([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=_d([1,$d([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Tf(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends ef{apply(t,r){const a=e.apply([n]),s=(new nf).apply([n]),i=e.apply([2*n]);return Vd(Vd(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Fs((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Pp(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=av({ones:()=>vo(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=av({ones:()=>vo(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=Gi(e,s[0]));let h=Hd(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Gi(r,i[0])),h=zs(h,Hd(r,this.recurrentKernel.read())),this.useBias&&(h=Xd(h,this.bias.read()));const[p,d,f,m]=Lo(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=zs(Gi(u,a),Gi(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=Gi(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:fg(this.activation),recurrentActivation:fg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:bf(this.kernelInitializer),recurrentInitializer:bf(this.recurrentInitializer),biasInitializer:bf(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:xg(this.kernelRegularizer),recurrentRegularizer:xg(this.recurrentRegularizer),biasRegularizer:xg(this.biasRegularizer),activityRegularizer:xg(this.activityRegularizer),kernelConstraint:fd(this.kernelConstraint),recurrentConstraint:fd(this.recurrentConstraint),biasConstraint:fd(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}tv.className="LSTMCell",Rs(tv);class nv extends Xg{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new tv(e),super(e)}call(e,t){return Fs((()=>{null!=this.cell.dropoutMask&&(_s(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_s(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}nv.className="LSTM",Rs(nv);class rv extends Yg{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Fs((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Nf(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ed(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Zf(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Df(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ff(t)}}function av(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Yd(t(),n),i=()=>Jd(s,t,r);return!a||a<=1?$s(i().clone()):Array(a).fill(void 0).map(i).map((e=>$s(e.clone())))}rv.className="StackedRNNCells",Rs(rv);var sv,iv,ov;class uv extends Xg{constructor(e){if(e.unroll)throw new zp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new zp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new _f({ndim:5})]}call(e,t){return Fs((()=>{if(null!=this.cell.dropoutMask&&(_s(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_s(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Pp("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Fs((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=mo([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]}))}resetStates(e,t=!1){Fs((()=>{if(!this.stateful)throw new Lp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Pp("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>mo(a))):this.states_=[mo(a)];else if(null==e)_s(this.states_),null!=this.keptStates&&(_s(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>mo(a))):this.states_[0]=mo(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Pp(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_s(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!y(n.shape,r))throw new Pp(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>$s(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Ag(u,r[0],a,s[0],i[0]),h=Ag(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}uv.className="ConvRNN2D";class lv extends tv{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,ad(this.filters,"filters"),this.kernelSize=Rg(n,2,"kernelSize"),this.kernelSize.forEach((e=>ad(e,"kernelSize"))),this.strides=Rg(r||1,2,"strides"),this.strides.forEach((e=>ad(e,"strides"))),this.padding=a||"valid",Cd(this.padding),this.dataFormat=s||"channelsLast",Id(this.dataFormat),this.dilationRate=Rg(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ad(e,"dilationRate")))}build(e){var t;e=Tf(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Pp(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends ef{apply(e,t){return Wd([n.apply([r]),go([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Fs((()=>{if(3!==e.length)throw new Pp(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=av({ones:()=>vo(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Gi(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=av({ones:()=>vo(a),rate:this.recurrentDropout,training:n,count:4}));const p=this.recurrentDropoutMask;let d=o(a,p,0),f=o(a,p,1),m=o(a,p,2),g=o(a,p,3);const[v,y,b,x]=Lo(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?Lo(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,v,w,this.padding),l=this.inputConv(l,y,k,this.padding),c=this.inputConv(c,b,I,this.padding),h=this.inputConv(h,x,C,this.padding);const[N,S,E,T]=Lo(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,S),m=this.recurrentConv(m,E),g=this.recurrentConv(g,T);const R=this.recurrentActivation.apply(zs(u,d)),A=this.recurrentActivation.apply(zs(l,f)),D=zs(Gi(A,s),Gi(R,this.activation.apply(zs(c,m)))),F=Gi(this.recurrentActivation.apply(zs(h,g)),this.activation.apply(D));return[F,F,D]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=gi(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Xd(a,n,this.dataFormat):a}recurrentConv(e,t){return gi(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}lv.className="ConvLSTM2DCell",Rs(lv);class cv extends uv{constructor(e){const t=new lv(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}cv.className="ConvLSTM2D",Rs(cv);class hv extends Bf{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Jd((()=>Yd(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}hv.className="Dropout",Rs(hv);class pv extends hv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}pv.className="SpatialDropout1D",Rs(pv);class dv extends Bf{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ad(this.units,"units"),this.activation=gg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=xf(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=xf(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=gd(e.kernelConstraint),this.biasConstraint=gd(e.biasConstraint),this.kernelRegularizer=kg(e.kernelRegularizer),this.biasRegularizer=kg(e.biasRegularizer),this.activityRegularizer=kg(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Tf(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Tf(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e),r=id(this.activation.getClassName());let a;return null!=r?a=Hd(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Hd(n,this.kernel.read()),null!=this.bias&&(a=Xd(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:fg(this.activation),useBias:this.useBias,kernelInitializer:bf(this.kernelInitializer),biasInitializer:bf(this.biasInitializer),kernelRegularizer:xg(this.kernelRegularizer),biasRegularizer:xg(this.biasRegularizer),activityRegularizer:xg(this.activityRegularizer),kernelConstraint:fd(this.kernelConstraint),biasConstraint:fd(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}dv.className="Dense",Rs(dv);class fv extends Bf{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Tf(e);for(const t of e.slice(1))if(null==t)throw new Pp(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Fd(e,1)]}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);let n=Ef(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Xo(n,e)}return function(e){if(e.rank<=1)throw new Pp(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Fd(e.shape,1)];return ri(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}fv.className="Flatten",Rs(fv);class mv extends Bf{constructor(e){super(e),this.supportsMasking=!0,this.activation=gg(e.activation)}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e);return this.activation.apply(n)}))}getConfig(){const e={activation:fg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}mv.className="Activation",Rs(mv);class gv extends Bf{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Fs((()=>{return e=Ef(e),t=e,n=this.n,Fs((()=>{if(2!==t.shape.length)throw new Pp(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ud(Ld(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}gv.className="RepeatVector",Rs(gv);class vv extends Bf{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Pp("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Fd(e);if(null!==s){if(0===a||i%a!=0)throw new Pp(n);r[s]=i/a}else if(i!==a)throw new Pp(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ri(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}vv.className="Reshape",Rs(vv);class yv extends Bf{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Od(1,e.dims.length+1);if(!y(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new _f({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Tf(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Xo(Ef(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}yv.className="Permute",Rs(yv);class bv extends Bf{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ef(e);return Vs(po(n,this.maskValue),-1)}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e),r=Vs(po(n,this.maskValue),-1,!0);return Gi(n,es(r,n.dtype))}))}}bv.className="Masking",Rs(bv);class xv extends Bf{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qp(e.inputLength))}this.inputDim=e.inputDim,ad(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ad(this.outputDim,"outputDim"),this.embeddingsInitializer=xf(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=kg(e.embeddingsRegularizer),this.activityRegularizer=kg(e.activityRegularizer),this.embeddingsConstraint=gd(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Fs((()=>this.maskZero?(e=Ef(e),po(e,Ko(e))):null))}computeOutputShape(e){if(e=Tf(e),null==this.inputLength)return[...e,this.outputDim];const t=qp(this.inputLength);if(t.length!==e.length-1)throw new Pp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Pp(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);let n=Ef(e);"int32"!==n.dtype&&(n=Md(n,"int32"));const r=qd(this.embeddings.read(),ri(n,[n.size]));return ri(r,Tf(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:bf(this.embeddingsInitializer),embeddingsRegularizer:xg(this.embeddingsRegularizer),activityRegularizer:xg(this.activityRegularizer),embeddingsConstraint:fd(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}xv.className="Embedding",Rs(xv);class wv extends Bf{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new zp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Pp("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Tf(e)]),(e=e).length<2)throw new Pp(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=ed(t),t.length>1)throw new Pp(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===ed(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Fs((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=$d(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Ld(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=ri(r,[a].concat(Fd(e.slice(1))));i=Xo(i,[1,0]),i=ri(i,s),t.push(i),n=!0}else if(e>1){const a=Od(1,e).concat([0]);t.push(Xo(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ri(Xo(ri(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Od(0,a-1));r=Xo(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=ed(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Fs((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Pp("`mask` should be an Array");if(!Array.isArray(e))throw new Pp("`inputs` should be an Array");if(t.length!==e.length)throw new Pp(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Fi(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Ki(n,t[e]);return n}))}}class kv extends wv{constructor(e){super(e)}mergeFunction(e){return Fs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=zs(t,e[n]);return t}))}}kv.className="Add",Rs(kv);class Iv extends wv{constructor(e){super(e)}mergeFunction(e){return Fs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Gi(t,e[n]);return t}))}}Iv.className="Multiply",Rs(Iv);class Cv extends wv{constructor(e){super(e)}mergeFunction(e){return Fs((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=zs(t,e[n]);return Gi(1/e.length,t)}))}}Cv.className="Average",Rs(Cv);class Nv extends wv{constructor(e){super(e)}mergeFunction(e){return Fs((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Zi(t,e[n]);return t}))}}Nv.className="Maximum",Rs(Nv);class Sv extends wv{constructor(e){super(e)}mergeFunction(e){return Fs((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=eo(t,e[n]);return t}))}}Sv.className="Minimum",Rs(Sv);class Ev extends wv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Pp("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(y(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Pp("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Fs((()=>Wd(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Pp("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Pp("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Pp("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Pp(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Fs((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(es(vo(e[n]),"bool")):t[n].rank<e[n].rank?r.push(Fi(t[n],-1)):r.push(t[n]);const a=hi(r,this.axis);return Ws(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Tv(e,t){for(;e<0;)e+=t;return e}Ev.className="Concatenate",Rs(Ev);class Rv extends wv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new zp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Pp(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Pp(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Tv(t,e[n].shape.length))):[Tv(this.axes,n.shape.length),Tv(this.axes,r.shape.length)],this.normalize&&(n=Qf(n,t[0]),r=Qf(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new zp("batchDot is not implemented for tensors of 4D or higher rank yet");if(d(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),d(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new zp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return Fs((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=ri(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=ri(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?qi(Gi(e,t),s[0]):qi(Gi(Xo(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Xi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=Po(i,t)}return 1===i.shape.length&&(i=Fi(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Tv(this.axes,e.length),Tv(this.axes,t.length)],n}computeOutputShape(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new zp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Rv.className="Dot",Rs(Rv);class Av extends Bf{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e);return Jd((()=>zs(Gd(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Av.className="GaussianNoise",Rs(Av);class Dv extends Bf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Fs((()=>{this.invokeCallHook(e,t);const n=Ef(e);return this.rate>0&&this.rate<1?Jd((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Gi(n,Gd(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Dv.className="GaussianDropout",Rs(Dv);class Fv extends Bf{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ef(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Fs((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Jd((()=>{const t=Ef(e),r=-1.7580993408473766;let a=Pi(Co(n),this.rate);a=Md(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=zs(Gi(t,a),Gi(zs(a,-1),r));return zs(Gi(o,s),i)}),(()=>Ef(e)),t.training||!1)}return e}))}}function _v(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=oi(e,t,n,r,a,s);else if(3===e.rank)i=ui(e,t,n,r,a,s);else{if(4!==e.rank)throw new zp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=li(e,t,n,r,a,s)}return i}Fv.className="AlphaDropout",Rs(Fv);class $v extends Bf{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xf(e.betaInitializer||"zeros"),this.gammaInitializer=xf(e.gammaInitializer||"ones"),this.movingMeanInitializer=xf(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=xf(e.movingVarianceInitializer||"ones"),this.betaConstraint=gd(e.betaConstraint),this.gammaConstraint=gd(e.gammaConstraint),this.betaRegularizer=kg(e.betaRegularizer),this.gammaRegularizer=kg(e.gammaRegularizer)}build(e){e=Tf(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Pp(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new _f({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Fs((()=>{const n=null!=t.training&&t.training,r=Ef(e),a=r.shape,s=a.length,i=Od(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Vp(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!y(l,Od(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=ri(this.movingMean.read(),u),t=ri(this.movingVariance.read(),u),n=this.center?ri(this.beta.read(),u):null,a=this.scale?ri(this.gamma.read(),u):null;return _v(r,e,t,n,a,this.epsilon)}return _v(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,a=.001){return y(r.slice().sort(),Od(0,e.rank-1))?function(e,t,n,r,a=.001){return Fs((()=>{const s=co(e,r),i=s.mean,o=s.variance;return[_v(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Fs((()=>{const s=co(e,r),i=s.mean,o=s.variance,u=[];for(const t of Od(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=ri(i,u),c=ri(o,u),h=null==t?null:ri(t,u),p=null==n?null:ri(n,u);return[_v(e,l,c,p,h,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Fs((()=>{const r=1-n,a=e.read(),s=Gi(Hi(a,t),r);e.write(Hi(a,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bf(this.betaInitializer),gammaInitializer:bf(this.gammaInitializer),movingMeanInitializer:bf(this.movingMeanInitializer),movingVarianceInitializer:bf(this.movingVarianceInitializer),betaRegularizer:xg(this.betaRegularizer),gammaRegularizer:xg(this.gammaRegularizer),betaConstraint:fd(this.betaConstraint),gammaConstraint:fd(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$v.className="BatchNormalization",Rs($v);class Ov extends Bf{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=xf(e.betaInitializer||"zeros"),this.gammaInitializer=xf(e.gammaInitializer||"ones"),this.betaRegularizer=kg(e.betaRegularizer),this.gammaRegularizer=kg(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Tf(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==ed(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Ef(e),r=n.shape,a=r.length;return Fs((()=>{let{mean:e,variance:t}=co(n,this.axis,!0);const s=Vp(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?ri(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=_i(e,l),t=_i(t,l),o=_i(o,c),u=_i(u,c),_v(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:bf(this.betaInitializer),gammaInitializer:bf(this.gammaInitializer),betaRegularizer:xg(this.betaRegularizer),gammaRegularizer:xg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ov.className="LayerNormalization",Rs(Ov);class Mv extends Bf{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Pp(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Pp(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Pp(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new _f({ndim:4})]}computeOutputShape(e){let t,n;return e=Tf(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Fs((()=>{return t=Ef(e),n=this.padding,r=this.dataFormat,Fs((()=>{if(4!==t.rank)throw new Pp(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Pp("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Pp(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],yo(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Lv(e,t,n,r,a,s){return Fs((()=>{let i;Id(a),Nd(s),Cd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Fg(e,a);const o="same"===r?"same":"valid";return i="max"===s?Yi(e,t,n,o):ai(e,t,n,o),"channelsFirst"===a&&(i=Xo(i,[0,3,1,2])),i}))}function Bv(e,t,n,r,a,s){return Fs((()=>{let i;Id(a),Nd(s),Cd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=_g(e,a);const o="same"===r?"same":"valid";return i="max"===s?Ji(e,t,n,o):si(e,t,n,o),"channelsFirst"===a&&(i=Xo(i,[0,4,1,2,3])),i}))}Mv.className="ZeroPadding2D",Rs(Mv);class Pv extends Bf{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Pp(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ad(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Pp(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ad(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Cd(this.padding),this.inputSpec=[new _f({ndim:3})]}computeOutputShape(e){const t=Ag((e=Tf(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Fs((()=>{this.invokeCallHook(e,t),e=Ld(Ef(e),2);const n=this.poolingFunction(Ef(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Po(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class zv extends Pv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Lv(e,t,n,r,a,"max")}}zv.className="MaxPooling1D",Rs(zv);class Wv extends Pv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Lv(e,t,n,r,a,"avg")}}Wv.className="AveragePooling1D",Rs(Wv);class Vv extends Bf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Pp(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ad(this.poolSize,"poolSize"),ad(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Id(this.dataFormat),Cd(this.padding),this.inputSpec=[new _f({ndim:4})]}computeOutputShape(e){e=Tf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Ag(t,this.poolSize[0],this.padding,this.strides[0]),n=Ag(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Fs((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ef(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Uv extends Vv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Lv(e,t,n,r,a,"max")}}Uv.className="MaxPooling2D",Rs(Uv);class Gv extends Vv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Lv(e,t,n,r,a,"avg")}}Gv.className="AveragePooling2D",Rs(Gv);class Hv extends Bf{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Pp(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ad(this.poolSize,"poolSize"),ad(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Id(this.dataFormat),Cd(this.padding),this.inputSpec=[new _f({ndim:5})]}computeOutputShape(e){e=Tf(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Ag(t,this.poolSize[0],this.padding,this.strides[0]),n=Ag(n,this.poolSize[1],this.padding,this.strides[1]),r=Ag(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Fs((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ef(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qv extends Hv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Bv(e,t,n,r,a,"max")}}qv.className="MaxPooling3D",Rs(qv);class jv extends Hv{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Id(a),Cd(r),Bv(e,t,n,r,a,"avg")}}jv.className="AveragePooling3D",Rs(jv);class Kv extends Bf{constructor(e){super(e),this.inputSpec=[new _f({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new zp}}class Xv extends Kv{constructor(e){super(e||{})}call(e,t){return Fs((()=>{const t=Ef(e);return Qi(t,1)}))}}Xv.className="GlobalAveragePooling1D",Rs(Xv);class Yv extends Kv{constructor(e){super(e||{})}call(e,t){return Fs((()=>{const t=Ef(e);return Ui(t,1)}))}}Yv.className="GlobalMaxPooling1D",Rs(Yv);class Jv extends Bf{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Id(this.dataFormat),this.inputSpec=[new _f({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new zp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zv extends Jv{call(e,t){return Fs((()=>{const t=Ef(e);return"channelsLast"===this.dataFormat?Qi(t,[1,2]):Qi(t,[2,3])}))}}Zv.className="GlobalAveragePooling2D",Rs(Zv);class Qv extends Jv{call(e,t){return Fs((()=>{const t=Ef(e);return"channelsLast"===this.dataFormat?Ui(t,[1,2]):Ui(t,[2,3])}))}}Qv.className="GlobalMaxPooling2D",Rs(Qv);class ey extends Bf{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Zf(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class ty extends ey{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Tf(e)).length<3)throw new Pp(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Tf(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Fs((()=>Kg(((e,n)=>[Ef(this.layer.call(e,t)),[]]),e=Ef(e),[],!1,null,null,!1,!0)[1]))}}ty.className="TimeDistributed",Rs(ty);class ny extends ey{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Zf(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Zf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,nd(wd,"BidirectionalMergeMode",a),e.weights)throw new zp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Hp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=jg(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Pp("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new _f({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new zp("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof $f;for(const e of s)if(e instanceof $f!==o)throw new Pp("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Fs((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=So(a,1)),"concat"===this.mergeMode?i=Wd([r,a]):"sum"===this.mergeMode?i=zs(r,a):"ave"===this.mergeMode?i=Gi(.5,zs(r,a)):"mul"===this.mergeMode?i=Gi(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ed(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ed(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Zf(t.layer);if(delete t.layer,null!=t.numConstants)throw new zp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function ry(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(oy(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=ry(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function ay(e,t=iy){return sy(e,t)}function sy(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(oy(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=sy(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function iy(e){return null===e?null:oy(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function oy(e){let t=!1;if(Y().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(401);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Vr)&&!(e instanceof Promise)&&!t)}function uy(e){return ry(e,ly)}function ly(e){return e instanceof Vr?{value:e.clone(),recurse:!1}:oy(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}ny.className="Bidirectional",Rs(ny),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(sv||(sv={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(iv||(iv={}));class cy{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class hy extends cy{constructor(){super(hy.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}hy.INITIAL_CAPACITY=32;class py{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new wy(this,e)}filter(e){return new by(this,e)}map(e){return new xy(this,e)}mapAsync(e){return new ky(this,e)}serialMapAsync(e){return new ky(this,e).serial()}flatmap(e){return new Cy(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new yy(this,e,t)}columnMajorBatch(e,t=!0,n=iy){return this.rowMajorBatch(e,t).map((e=>ay(e,n)))}concatenate(e,t){return new Ny(new dy([this,e]),t)}take(e){return e<0||null==e?this:new vy(this,e)}skip(e){return e<0||null==e?this:new gy(this,e)}prefetch(e){return new Sy(this,e)}shuffle(e,t){return new Ey(this,e,t)}serial(){return new my(this)}}class dy extends py{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:uy(e),done:!1}}}class fy extends py{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class my extends py{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class gy extends py{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;_s(e.value)}return this.upstream.next()}}class vy extends py{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class yy extends py{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class by extends py{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_s(e.value)}}}class xy extends py{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ta(e.value),n=this.transform(e.value),r=ta(n);for(const e of t)ea(e,r)||e.dispose();return{value:n,done:!1}}}class wy extends py{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class ky extends py{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=ta(e.value),n=await this.transform(e.value),r=ta(n);for(const e of t)ea(e,r)||e.dispose();return{value:n,done:!1}}}class Iy extends py{constructor(){super(),this.outputQueue=new hy,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Cy extends Iy{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=ta(e.value),n=this.transform(e.value),r=ta(n);this.outputQueue.pushAll(n);for(const e of t)ea(e,r)||e.dispose();return!0}}class Ny extends py{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(ov||(ov={}));class Sy extends py{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new cy(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Ey extends Sy{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=xo.alea(n||Er().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ty{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return d(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Ry((async()=>(await n.iterator()).columnMajorBatch(e,t,Ay)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Ry((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Ry((async()=>(await t.iterator()).filter((t=>Fs((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ry((async()=>(await t.iterator()).map((t=>Fs((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Ry((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ry((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Ry((async()=>{return n=(a=async()=>({value:await t.iterator(),done:!1}),new fy(a)).take(e),new Ny(n,r);var n,r,a}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Ry((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=xo.alea(t||Er().toString());return Ry((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Ry((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Ry(e,t=null){return new class extends Ty{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ay(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Vr||R(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Vr?zo(e):xa(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}Ty.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");class Dy extends py{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Vo([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=Uo([r,n,s,a],[1,4])}else this.cropBox=Uo([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Y().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new Dy(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&d("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=cs(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Fs((()=>{const t=Fi(es(e,"float32"),0);let n;n=el.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return ri(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}async function Fy(e,t){return Dy.create(e,t)}function _y(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const $y=nc;class Oy extends o{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new i(this,As())}nextDataId(){return Oy.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Y().get("IS_NODE")&&q("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&D(n[0])){const a=n.map((e=>Tr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Ol(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qa(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return As().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Er();return e(),{kernelMs:Er()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){_y([e],"where");const t=this.readSync(e.dataId);return $y(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function My(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(_y(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=v(i.shape),c=n||i.dtype,h=E(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,h)}}function Ly(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(_y(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}Oy.nextDataId=0,Os("cpu",(()=>new Oy),1);const By=My(Xe,(e=>e>=0?e:Math.exp(e)-1)),Py={kernelName:Xe,backendName:"cpu",kernelFunc:By};function zy(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Wy={kernelName:pt,backendName:"cpu",kernelFunc:zy};function Vy(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;_y([a],"leakyRelu");const i=v(a.shape),o=n.data.get(a.dataId).values,u=S("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const Uy={kernelName:yt,backendName:"cpu",kernelFunc:Vy};function Gy(e){return(t,n,r,a,s)=>{const i=Ri(t,n),o=i.length,u=M(i),l=S(s,v(i)),c=t.length,h=n.length,p=M(t),d=M(n),f=Ei(t,i),m=Ei(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=G(t,o,u),s=n.slice(-c);f.forEach((e=>s[e]=0));const i=U(s,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const v=U(g,h,d);l[t]=e(r[i],a[v])}return[l,i]}}const Hy=Gy(((e,t)=>e<0?t*e:e));function qy(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;_y([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Hy(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const jy={kernelName:Qt,backendName:"cpu",kernelFunc:qy},Ky=My(an,(e=>Math.max(0,e))),Xy={kernelName:an,backendName:"cpu",kernelFunc:Ky},Yy=My(hn,(e=>Math.min(Math.max(0,e),6))),Jy={kernelName:hn,backendName:"cpu",kernelFunc:Yy};function Zy(e){return(t,n,r)=>{const a=S(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const Qy=Zy((e=>1/(1+Math.exp(-e)))),eb=My(kn,(e=>1/(1+Math.exp(-e)))),tb={kernelName:kn,backendName:"cpu",kernelFunc:eb};function nb(e,t,n,r,a){if("linear"===n)return zy({inputs:{x:t},backend:e});if("relu"===n)return Ky({inputs:{x:t},backend:e});if("elu"===n)return By({inputs:{x:t},backend:e});if("relu6"===n)return Yy({inputs:{x:t},backend:e});if("prelu"===n)return qy({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Vy({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return eb({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function rb(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const ab={kernelName:Ne,backendName:"cpu",kernelFunc:rb};function sb(e,t,n="float32"){if("complex64"===n)return rb({inputs:{real:sb(e,t,"float32"),imag:sb(e,t,"float32")},backend:e});const r=z(v(t),n);return e.makeTensorInfo(t,n,r)}function ib(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ob={kernelName:nn,backendName:"cpu",kernelFunc:ib};function ub(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return zy({inputs:{x:a},backend:n});const e=sb(n,a.shape,a.dtype),t=ub({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=rb({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=ib({inputs:{input:a},backend:n}),t=ub({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!T(a.dtype,s)){const e=zy({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Sr([0],a.dtype),[r,s]=Gy(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const lb={kernelName:ke,backendName:"cpu",kernelFunc:ub};function cb(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;_y([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?ec(u):u,h="string"===s.dtype?ec(l):l,p=r||s.dtype,[d,f]=t(s.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=ub({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=ub({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,v,y]=n(s.shape,i.shape,u,l,f,m),b=o.makeTensorInfo(y,"float32",g),x=o.makeTensorInfo(y,"float32",v),w=rb({inputs:{real:b,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(b),o.disposeIntermediateTensorInfo(x),w}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function hb(e){return(t,n,r,a,s,i)=>{const o=Ri(t,n),u=v(o),l=o.length,c=M(o),h=S("float32",u),p=S("float32",u),d=Ei(t,o),f=Ei(n,o),m=Ol(r,a),g=Ol(s,i),y=t.length,b=M(t),x=n.length,w=M(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=a.real,p[t]=a.imag}else for(let t=0;t<h.length;t++){const n=G(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const a=U(r,y,b),s=n.slice(-x);f.forEach((e=>s[e]=0));const i=U(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const pb=Gy(((e,t)=>e+t)),db=hb(((e,t,n,r)=>({real:e+n,imag:t+r}))),fb=cb(ae,pb,db),mb={kernelName:ae,backendName:"cpu",kernelFunc:fb};function gb(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=v(a.shape),o=I(s,i),u=v(o);d(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const vb={kernelName:sn,backendName:"cpu",kernelFunc:gb};function yb(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;_y([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],h=o?s.shape[l-1]:s.shape[l-2],p=i?a.shape[u-1]:a.shape[u-2],f=o?s.shape[l-2]:s.shape[l-1],m=a.shape.slice(0,-2),g=s.shape.slice(0,-2),y=v(m),b=v(g);d(u>=2&&l>=2&&(y===b||1===y||1===b),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const x=(y>b?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([p,f]);d(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[b,f,h]:[b,h,f],k=gb({inputs:{x:a},backend:n,attrs:{shape:i?[y,c,p]:[y,p,c]}}),I=gb({inputs:{x:s},backend:n,attrs:{shape:w}}),C=i?k.shape[1]:k.shape[2],N=i?k.shape[2]:k.shape[1],S=o?I.shape[1]:I.shape[2],E=Math.max(y,b),T=n.data.get(k.dataId).values,R=n.data.get(I.dataId).values,A=M(k.shape),D=M(I.shape),[F,_,$]=i?[A[0],1,A[1]]:[A[0],A[1],1],[O,L,B]=o?[1,D[1],D[0]]:[D[1],1,D[0]],P=N*S,z=Qa([E,N,S],k.dtype),W=z.values,V=n.blockSize;for(let e=0;e<E;e++)for(let t=0;t<N;t+=V)for(let n=0;n<S;n+=V)for(let r=0;r<C;r+=V){const a=Math.min(t+V,N),s=Math.min(n+V,S),i=Math.min(r+V,C);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,y-1)*F,s=Math.min(e,b-1)*B;n+=T[r+o*_+a*$]*R[a*O+t*L+s]}W[e*P+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(x,z.dtype,z.values)}const bb={kernelName:be,backendName:"cpu",kernelFunc:yb},xb={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=yb({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=fb({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=nb(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function wb(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const kb={kernelName:te,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;_y(t,"abs");let r=new Float32Array(v(t.shape));return r=wb(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Ib=My(ne,(e=>Math.acos(e))),Cb={kernelName:ne,backendName:"cpu",kernelFunc:Ib},Nb=My(re,(e=>Math.acosh(e))),Sb={kernelName:re,backendName:"cpu",kernelFunc:Nb},Eb={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;_y(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Qa(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Tb(e,t,n,r,a){const s=t.length,i=v(t),o=M(t),u=M(a),l=S(n,v(a));for(let t=0;t<i;++t){const n=G(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[U(a,s,u)]=e[t]}return l}function Rb(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;_y(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=Tb(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const Ab={kernelName:qn,backendName:"cpu",kernelFunc:Rb},Db={kernelName:ie,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;_y(a,"all");const o=C(s,a.shape);let u=o;const l=io(u,a.shape.length);let c=a;null!=l&&(c=Rb({inputs:{x:a},backend:n,attrs:{perm:l}}),u=uo(u.length,a.shape.length)),so("all",u,c.shape.length);const[h,p]=ro(c.shape,u),d=v(p),f=z(v(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=gb({inputs:{x:g},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Fb={kernelName:oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;_y(a,"any");const o=C(s,a.shape);let u=o;const l=io(u,a.shape.length);let c=a;null!=l&&(c=Rb({inputs:{x:a},backend:n,attrs:{perm:l}}),u=uo(u.length,a.shape.length)),so("any",u,c.shape.length);const[h,p]=ro(c.shape,u),d=v(p),f=z(v(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=gb({inputs:{x:g},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},_b={kernelName:ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;_y(a,"argMax");let i=C(s,a.shape);const o=io(i,a.shape.length);let u=a;const l=[];null!=o&&(u=Rb({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=uo(i.length,u.shape.length)),i=[i[0]],so("argMax",i,u.shape.length);const[c,h]=ro(u.shape,i),p=z(v(c),"int32"),d=v(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a>n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},$b={kernelName:le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;_y(a,"argMin");let i=C(s,a.shape);const o=io(i,a.shape.length);let u=a;const l=[];null!=o&&(u=Rb({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=uo(i.length,u.shape.length)),i=[i[0]],so("argMin",i,u.shape.length);const[c,h]=ro(u.shape,i),p=z(v(c),"int32"),d=v(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const a=f[t+e];a<n&&(n=a,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},Ob=My(ce,(e=>Math.asin(e))),Mb={kernelName:ce,backendName:"cpu",kernelFunc:Ob},Lb=My(he,(e=>Math.asinh(e))),Bb={kernelName:he,backendName:"cpu",kernelFunc:Lb},Pb=My(pe,(e=>Math.atan(e))),zb={kernelName:pe,backendName:"cpu",kernelFunc:Pb},Wb=Gy(((e,t)=>Math.atan2(e,t))),Vb=cb(fe,Wb),Ub={kernelName:fe,backendName:"cpu",kernelFunc:Vb},Gb=My(de,(e=>Math.atanh(e))),Hb={kernelName:de,backendName:"cpu",kernelFunc:Gb};function qb(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Qa(a.outShape,n),g=m.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],b=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*v,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outHeight;++v){const x=v*i-p,w=Math.max(0,x),k=Math.min(a.inHeight,c+x),I=n+v*y;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(a.inWidth,h+i);let v=f,y=0,x=0;for(let n=w;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>v?v=i:"avg"===s&&(y+=i,x++)}if(isNaN(v))break}g[I+n*b+t]="avg"===s?y/x:v}}}return m}function jb(e,t,n,r,a=!1,s=!1){const i=Qa(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Qa(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let v=g;for(;v<0;)v+=l;const y=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const b=Math.min(r.inWidth,p+h);let x=Number.NEGATIVE_INFINITY,w=-1;for(let n=v;n<y;n+=l){const i=n-g;for(let o=d;o<b;o+=c){const u=o-h,l=m.get(e,n,o,t);l>x&&(x=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(w,e,n,o,t)}}return i}function Kb(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,h=a.dilationWidth,p=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,v=a.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,b=Qa(a.outShape,n),x=b.values,w=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],C=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*w,b=t*r[0];for(let t=0;t<a.inChannels;++t)for(let w=0;w<a.outDepth;++w){const N=w*i-m;let S=N;for(;S<0;)S+=l;const E=Math.min(a.inDepth,p+N),T=n+w*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(a.inHeight,d+i),w=T+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-v;let o=i;for(;o<0;)o+=h;const d=Math.min(a.inWidth,f+i),g=w+n*C;let k=y,I=0,N=0;for(let n=S;n<E;n+=l){const a=b+n*r[1];for(let n=p;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=h){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+t]="avg"===s?I/N:k}}}}return b}const Xb={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;_y(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d(ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Hs(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))c=zy({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=M(a.shape),r=qb(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},Yb={kernelName:ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;_y(a,"avgPool3d");const c=qs(a.shape,s,i,1,o,u,l),h=Kb(n.data.get(a.dataId).values,a.shape,a.dtype,M(a.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},Jb={kernelName:ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;_y([a,s],"avgPool3DGrad");const c=qs(s.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,v=c.dilationDepth,y=c.dilationHeight,b=c.dilationWidth,x=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=x-1-c.padInfo.front,C=k-1-c.padInfo.left,N=w-1-c.padInfo.top,S=Qa(s.shape,"float32"),E=1/(f*m*g),T=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-C;let u=0;for(let n=0;n<x;n+=v){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const a=(i+n)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=b){const s=(o+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=T.get(e,r,a,s,t))}}}S.set(u*E,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Zb={kernelName:ge,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;_y([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Hs(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,v=c.effectiveFilterHeight,y=c.effectiveFilterWidth,b=y-1-c.padInfo.left,x=v-1-c.padInfo.top,w=Qa(i.shape,"float32"),k=1/(d*f),I=n.data.get(a.dataId).values,C=Qa(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-x,s=r-b;let i=0;for(let n=0;n<v;n+=m){const r=(a+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=g){const a=(s+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=C.get(e,r,a,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},Qb={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;d(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),_y([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),v=m.length,y=f.length,b=p.length,x=h.length;let w=0,k=0,I=0,C=0;for(let e=0;e<c.length;++e)g[e]=m[w++]+(c[e]-h[k++])*f[I++]/Math.sqrt(p[C++]+l),w>=v&&(w=0),k>=x&&(k=0),I>=y&&(I=0),C>=b&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};function ex(e,t,n,r,a){const s=Is(r,t,n),i=v(n),o=M(r);if(s){const n=Cs(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=Qa(r,a,"string"===a?ec(e):e),l=Qa(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===a?tc(l.values):l.values}function tx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;_y(a,"slice");const[o,u]=Ns(a,s,i);hs(a,o,u);const l=ex(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const nx={kernelName:yn,backendName:"cpu",kernelFunc:tx},rx={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;_y([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=yl(a.shape,s,o),l=bl(u.length,s.length),c=xl(a.shape,s,o),h=wl(i,s.length),p=kl(c,i,s.length),d=gb({inputs:{x:a},backend:n,attrs:{shape:u}}),f=Rb({inputs:{x:d},backend:n,attrs:{perm:l}}),m=gb({inputs:{x:f},backend:n,attrs:{shape:c}}),g=tx({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ax(e,t,n,r,a){const s=v(r),i=z(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function sx(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Qa([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const ix={kernelName:we,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=ax(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},ox={kernelName:"BroadcastArgs",backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Ri(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},ux=Zy((e=>Math.ceil(e))),lx=Ly(Ie,ux),cx={kernelName:Ie,backendName:"cpu",kernelFunc:lx},hx=My(Ce,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),px={kernelName:Ce,backendName:"cpu",kernelFunc:hx},dx={kernelName:Se,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(v(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function fx(e,t,n,r){const a=E(n,v(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=v(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?ec(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function mx(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const gx={kernelName:ft,backendName:"cpu",kernelFunc:mx};function vx(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=C(a,t[0].shape)[0];let i=fl(t.map((e=>e.shape)),s);if(0===v(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>v(e.shape)>0));if(1===o.length)return zy({inputs:{x:o[0]},backend:n});if(dl(o.map((e=>e.shape)),s),"complex64"===o[0].dtype){const e=o.map((e=>ib({inputs:{input:e},backend:n}))),t=o.map((e=>mx({inputs:{input:e},backend:n}))),r=vx({inputs:e,backend:n,attrs:{axis:s}}),a=vx({inputs:t,backend:n,attrs:{axis:s}}),i=rb({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=o.map((e=>{const t=v(e.shape.slice(s));return gb({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=fl(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=fx(l,i,t[0].dtype,c),p=fl(o.map((e=>e.shape)),s),d=n.makeTensorInfo(p,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const yx={kernelName:Ee,backendName:"cpu",kernelFunc:vx};function bx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;_y([a,s],"conv2d");const h=ni(u),p=js(a.shape,s.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,v=p.padInfo.left,y=p.padInfo.top,b="channelsLast"===p.dataFormat,x=new Br(p.outShape,a.dtype),w=M(a.shape),k=M(s.shape),I=w[0],C=b?w[1]:w[2],N=b?w[2]:1,S=b?1:w[1],E=x.strides[0],T=b?x.strides[1]:x.strides[2],R=b?x.strides[2]:1,A=b?1:x.strides[1],D=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,_=x.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*E;for(let e=0;e<p.outHeight;++e){const r=n+e*T,a=e*p.strideHeight-y;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=p.inHeight)continue;const s=e*k[0],i=t+n*C;for(let e=0;e<p.outWidth;++e){const t=r+e*R,n=e*p.strideWidth-v;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<p.inChannels;++e){const n=D[a+e*S];for(let e=0;e<p.outChannels;++e)_[t+e*A]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,_)}const xx={kernelName:Te,backendName:"cpu",kernelFunc:bx},wx={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;_y([a,s],"conv2dBackpropFilter");const h=ni(u),p=js(a.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,v="channelsLast"===p.dataFormat,y=new Br(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Br(a.shape,a.dtype,w),C=new Br(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/d)),n=Math.min(p.outHeight,(p.inHeight+x-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-x;for(let e=a;e<s;++e){const n=r+e*f-b;u+=v?I.get(l,t,n,i)*C.get(l,c,e,o):I.get(l,i,t,n)*C.get(l,o,c,e)}}y.set(u,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},kx={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;_y([a,s],"conv2dBackpropInput");const h=M(s.shape),p=M(a.shape);let d=ni(l);const f=js(i,s.shape,o,1,u,c,!1,d),m=new Br(f.inShape,"float32"),g=m.values,v=n.data.get(a.dataId).values,y=n.data.get(s.dataId).values,[b,x,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:N,inHeight:S,inWidth:E,outChannels:T,outHeight:R,outWidth:A,strideHeight:D,strideWidth:F}=f;d=f.dataFormat;const _=I-1-f.padInfo.top,$=C-1-f.padInfo.left,O="channelsLast"===d,L=m.strides[0],B=O?m.strides[1]:m.strides[2],P=O?m.strides[2]:1,z=O?1:m.strides[1],W=p[0],V=O?p[1]:p[2],U=O?p[2]:1,G=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<S;++n){const r=n-_,a=Math.max(0,Math.ceil(r/D)),s=Math.min(R,(I+r)/D);for(let i=0;i<E;++i){const o=i-$,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(C+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*D-r;for(let r=u;r<l;++r){const s=W*e+V*n+U*r,i=b*(I-1-a)+x*(C-1-(r*F-o))+w*t;for(let e=0;e<T;++e)c+=v[s+G*e]*y[i+e]}}g[L*e+B*n+P*i+z*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Ix={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;_y([a,s],"conv3d");const l=Ks(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,v=g.front,y=g.left,b=g.top,x=new Br(l.outShape,a.dtype),w=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=x.values,C=M(a.shape),N=M(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*C[0],n=e*x.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*x.strides[1],a=e*l.strideDepth-v;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*C[1];for(let e=0;e<l.outHeight;++e){const t=r+e*x.strides[2],n=e*l.strideHeight-b;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*C[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-y;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=w[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},Cx={kernelName:Fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;_y([a,s],"conv3dBackpropFilterV2");const l=M(a.shape),c=M(s.shape),h=Ks(a.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,v=h.filterWidth,y=new Br(h.filterShape,"float32"),b=y.values,[x,w,k,I]=y.strides,C=n.data.get(s.dataId).values,[N,S,E,T]=c,R=n.data.get(a.dataId).values,[A,D,F,_]=l,$=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil(($-e)/p)),n=Math.min(h.outDepth,(h.inDepth+$-e)/p),r=e*x;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((L-a)/d)),i=Math.min(h.outHeight,(h.inHeight+L-a)/d),o=a*w+r;for(let r=0;r<v;++r){const u=Math.max(0,Math.ceil((O-r)/f)),l=Math.min(h.outWidth,(h.inWidth+O-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,v=m*N;for(let m=t;m<n;++m){const t=(e+m*p-$)*D+h,n=m*S+v;for(let e=s;e<i;++e){const s=(a+e*d-L)*F+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*T+i;g+=R[(r+e*f-O)*_+s+o]*C[t+c]}}}}b[m+c]=g}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Nx={kernelName:_e,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;_y([a],"conv3dBackpropInputV2");const l=M(a.shape),c=M(s.shape),h=Ks(u,s.shape,o,1,i),p=new Br(h.inShape,"float32"),d=p.values,[f,m,g,v]=p.strides,y=n.data.get(a.dataId).values,[b,x,w,k]=l,I=n.data.get(s.dataId).values,[C,N,S,E]=c,{batchSize:T,filterDepth:R,filterHeight:A,filterWidth:D,inChannels:F,inDepth:_,inHeight:$,inWidth:O,outChannels:L,outDepth:B,outHeight:P,outWidth:z,strideDepth:W,strideHeight:V,strideWidth:U}=h,G=R-1-h.padInfo.front,H=A-1-h.padInfo.top,q=D-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<F;++t)for(let n=0;n<_;++n){const r=n-G,a=Math.max(0,Math.ceil(r/W)),s=Math.min(B,(R+r)/W);for(let i=0;i<$;++i){const o=i-H,u=Math.max(0,Math.ceil(o/V)),l=Math.min(P,(A+o)/V);for(let c=0;c<O;++c){const h=c-q,p=Math.max(0,Math.ceil(h/U)),T=Math.min(z,(D+h)/U);let F=0;for(let n=a;n<s;++n){const a=n*W-r;for(let r=u;r<l;++r){const s=r*V-o;for(let i=p;i<T;++i){const o=b*e+x*n+w*r+k*i,u=C*(R-1-a)+N*(A-1-s)+S*(D-1-(i*U-h))+E*t;for(let e=0;e<L;++e)F+=y[o+e]*I[u+e]}}}d[f*e+m*n+g*i+v*c+t]=F}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},Sx=My($e,(e=>Math.cos(e))),Ex={kernelName:$e,backendName:"cpu",kernelFunc:Sx},Tx=My(Oe,(e=>Math.cosh(e))),Rx={kernelName:Oe,backendName:"cpu",kernelFunc:Tx},Ax={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=a.shape,f=s.shape[0],[m,g]=o,v=Qa([f,m,g,d],"float32"),y=n.data.get(s.dataId).values,b=n.data.get(i.dataId).values,x=n.data.get(a.dataId).values,w=M(a.shape),k=M(v.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],s=y[t+3],i=b[e];if(i>=c)continue;const o=m>1?(a-n)*(h-1)/(m-1):0,f=g>1?(s-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+a)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+s)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];v.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),y=c-h;for(let r=0;r<d;r++){let s=r+h*w[2]+n*w[1]+i*w[0];const l=x[s];s=r+m*w[2]+n*w[1]+i*w[0];const c=x[s];s=r+h*w[2]+a*w[1]+i*w[0];const p=x[s];s=r+m*w[2]+a*w[1]+i*w[0];const d=l+(c-l)*y,f=p+(x[s]-p)*y;s=r+u*k[2]+t*k[1]+e*k[0],v.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(p-1)+n*f:.5*(r+s)*(p-1);if(a<0||a>p-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];v.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<d;r++){const a=r+o*w[2]+u*w[1]+i*w[0],s=r+n*k[2]+t*k[1]+e*k[0];v.values[s]=x[a]}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Dx={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;_y(a,"cumsum");const u=io([s],a.shape.length);let l=a;null!=u&&(l=Rb({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=uo(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=Jr(l.dtype,"int32"),p=z(v(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=Rb({inputs:{x:g},backend:n,attrs:{perm:oo(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},Fx={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=ax(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=sx(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},_x={kernelName:Pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;d("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),d(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],h=u*s,p=l*s,f=c/(s*s),m=n.data.get(a.dataId).values,g=new Float32Array(o*h*p*f);let v=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<p;++t){const a=Math.floor(t/s),i=(r*s+t%s)*f;for(let t=0;t<f;++t){const r=t+i+c*(a+l*(n+u*e));g[v++]=m[r]}}}return n.makeTensorInfo([o,h,p,f],a.dtype,g)}};function $x(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;_y([a,s],"depthwiseConv2DNative");const c=M(a.shape),h=M(s.shape);let p=u;null==p&&(p=[1,1]),d(ti(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const f=js(a.shape,s.shape,i,p,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:v,dilationWidth:y,padInfo:b}=f,x=b.left,w=b.top,k=f.outChannels/f.inChannels,I=new Br(f.outShape,a.dtype),C=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,S=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],a=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=a+e*v;if(n<0||n>=f.inHeight)continue;const s=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-x;for(let e=0;e<g;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const a=s+e*h[1],o=i+r*f.inChannels;let u=t,l=a;for(let e=0;e<f.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)S[u+e]+=t*N[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Ox={kernelName:ze,backendName:"cpu",kernelFunc:$x},Mx={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;_y([a,s],"depthwiseConv2dNativeBackpropFilter");const h=js(a.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Br(h.filterShape,"float32"),v=h.padInfo.left,y=h.padInfo.top,b=h.outChannels/h.inChannels,x=n.data.get(a.dataId).values,w=new Br(a.shape,a.dtype,x),k=n.data.get(s.dataId).values,I=new Br(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/p)),n=Math.min(h.outHeight,(h.inHeight+y-e)/p);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((v-r)/d)),s=Math.min(h.outWidth,(h.inWidth+v-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/b),u=i%b;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-y;for(let e=a;e<s;++e){const n=r+e*d-v;l+=w.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Lx={kernelName:Ve,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;_y([a,s],"depthwiseConv2DNativeBackpropInput");const h=M(a.shape),p=M(s.shape),d=js(c,s.shape,i,o,u,l,!0),f=new Br(d.inShape,"float32"),m=f.values,[g,v,y]=f.strides,b=n.data.get(a.dataId).values,[x,w,k]=h,I=n.data.get(s.dataId).values,[C,N,S]=p,{batchSize:E,filterHeight:T,filterWidth:R,inChannels:A,inHeight:D,inWidth:F,outChannels:_,outHeight:$,outWidth:O,strideHeight:L,strideWidth:B}=d,P=T-1-d.padInfo.top,z=R-1-d.padInfo.left,W=_/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<D;++n){const r=n-P,a=Math.max(0,Math.ceil(r/L)),s=Math.min($,(T+r)/L);for(let i=0;i<F;++i){const o=i-z,u=Math.max(0,Math.ceil(o/B)),l=Math.min(O,(R+o)/B);let c=0;for(let n=a;n<s;++n){const a=n*L-r;for(let r=u;r<l;++r){const s=x*e+w*n+k*r,i=C*(T-1-a)+N*(R-1-(r*B-o))+S*t;for(let e=0;e<W;++e)c+=b[s+(t*W+e)]*I[i+e]}}m[g*e+v*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Bx={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=v(r.shape),s=n.data.get(r.dataId).values,i=Qa([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Px={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(a.dataId).values,p=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:N,dilationWidth:S,outShape:T}=Gs(r.shape,a.shape,s,i,"NHWC",o),R=v(T),A=T.length,D=E(r.dtype,R);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*k-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const s=n+t*N;if(s>=0&&s<f)for(let n=0;n<C;++n){const d=i+n*S;if(d>=0&&d<m){const i=U([e,s,d,o],c,M(r.shape)),f=U([t,n,o],p,M(a.shape)),m=l[i]+h[f];m>u&&(u=m)}}}D[U([e,t,s,o],A,M(T))]=u}}}return{dataId:u.write(Sr(D,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},zx={kernelName:qe,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=B(r.shape,l.data.get(r.dataId).values),h=B(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:v,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:S}=Gs(r.shape,a.shape,i,o,"NHWC",u);d(s.rank===S.length,(()=>`Error in Dilation2DBackpropFilter, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const E=B(S,l.data.get(s.dataId).values),T=W(a.shape,a.dtype);for(let e=0;e<p;++e)for(let t=0;t<v;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=t,u=n)}}}T[o][u][s]+=E[e][t][r][s]}}}return{dataId:l.write(Sr(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Wx={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=B(r.shape,l.data.get(r.dataId).values),h=B(a.shape,l.data.get(a.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:v,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:N,outShape:S}=Gs(r.shape,a.shape,i,o,"NHWC",u);d(s.rank===S.length,(()=>`Error in Dilation2DBackpropInput, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const E=B(S,l.data.get(s.dataId).values),T=W(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<v;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=c[e][r][l][s]+h[t][n][s];a>i&&(i=a,o=r,u=l)}}}T[e][o][u][s]+=E[e][t][r][s]}}}return{dataId:l.write(Sr(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Vx=Gy(((e,t)=>e*t)),Ux=hb(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),Gx=cb(Vt,Vx,Ux),Hx={kernelName:Vt,backendName:"cpu",kernelFunc:Gx};function qx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;_y(a,"sum"),o="bool"===a.dtype?ub({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):zy({inputs:{x:a},backend:n});const u=o.shape.length,l=C(s,o.shape),c=io(l,u);let h=l,p=o;null!=c&&(p=Rb({inputs:{x:o},backend:n,attrs:{perm:c}}),h=uo(h.length,u)),so("sum",h,p.shape.length);const[d,f]=ro(p.shape,h);let m=sb(n,d,Jr(p.dtype,"int32"));const g=v(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=gb({inputs:{x:m},backend:n,attrs:{shape:ao(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const jx={kernelName:Nn,backendName:"cpu",kernelFunc:qx},Kx={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Gl(a,s.length);ql(i.length,u,s);const{path:l,steps:c}=jl(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Hl(d,u[t]);let a;Kl(e)?a=s[t]:(a=Rb({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);y(a.shape,i)||(a=gb({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=Gx({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=qx({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},Xx={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;_y([r,a],"eluGrad");const s=new Float32Array(v(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},Yx=Gy(((e,t)=>e===t?1:0)),Jx=cb(Ze,Yx,null,"bool"),Zx={kernelName:Ze,backendName:"cpu",kernelFunc:Jx},Qx=Rl,ew=Al,tw=Dl,nw=Fl,rw=_l,aw=$l,sw=My(Je,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Qx*n);return t*(1-((((aw*r+rw)*r+nw)*r+tw)*r+ew)*r*Math.exp(-n*n))})),iw={kernelName:Je,backendName:"cpu",kernelFunc:sw},ow=Zy((e=>Math.exp(e))),uw=Ly(Qe,ow),lw={kernelName:Qe,backendName:"cpu",kernelFunc:uw};function cw(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(d(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),gb({inputs:{x:a},backend:n,attrs:{shape:o}})}const hw={kernelName:et,backendName:"cpu",kernelFunc:cw},pw=Zy((e=>Math.expm1(e))),dw=Ly(tt,pw),fw={kernelName:tt,backendName:"cpu",kernelFunc:dw},mw=Gy(((e,t)=>e/t)),gw=cb(je,mw),vw={kernelName:je,backendName:"cpu",kernelFunc:gw},yw=Gy(((e,t)=>e-t)),bw=hb(((e,t,n,r)=>({real:e-n,imag:t-r}))),xw=cb(zn,yw,bw),ww={kernelName:zn,backendName:"cpu",kernelFunc:xw};function kw(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=v(l),h=S("float32",c),p=S("float32",c);for(let e=0;e<a;e++){const r=tx({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=tx({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=rb({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=Iw(i,t,n),d=Ol(l,c);for(let t=0;t<s;t++){const n=Pl(d,t);h[e*s+t]=n.real,p[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=rb({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function Iw(e,t,n){const r=v(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=Cw(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Nr(r,"float32")),i=zy({inputs:{x:s},backend:n}),u=vw.kernelFunc({inputs:{a:e,b:s},backend:n}),l=vw.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=Vl(a*r,t,n),u=Pl(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),zl(r,s,i,a)}return r}(Ol(s,i),r,t);return Ml(e)}var o}function Cw(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=Ol(e,t),i=n/2,o=Ll(s),u=o.real,l=o.imag,c=[u.length],h=a.makeTensorInfo(c,"float32",u),p=a.makeTensorInfo(c,"float32",l),d=rb({inputs:{real:h,imag:p},backend:a}),f=Bl(s),m=f.real,g=f.imag,v=[m.length],y=a.makeTensorInfo(v,"float32",m),b=a.makeTensorInfo(v,"float32",g),x=rb({inputs:{real:y,imag:b},backend:a}),w=Cw(u,l,i,r,a),k=w.real,I=w.imag,C=[k.length],N=a.makeTensorInfo(C,"float32",k),S=a.makeTensorInfo(C,"float32",I),E=rb({inputs:{real:N,imag:S},backend:a}),T=Cw(m,g,i,r,a),R=T.real,A=T.imag,D=[R.length],F=a.makeTensorInfo(D,"float32",R),_=a.makeTensorInfo(D,"float32",A),$=rb({inputs:{real:F,imag:_},backend:a}),O=Wl(n,r),M=[O.real.length],L=a.makeTensorInfo(M,"float32",O.real),B=a.makeTensorInfo(M,"float32",O.imag),P=rb({inputs:{real:L,imag:B},backend:a}),z=Gx({inputs:{a:P,b:$},backend:a}),W=fb({inputs:{a:E,b:z},backend:a}),V=xw({inputs:{a:E,b:z},backend:a}),U=ib({inputs:{input:W},backend:a}),G=ib({inputs:{input:V},backend:a}),H=mx({inputs:{input:W},backend:a}),q=mx({inputs:{input:V},backend:a}),j=vx({inputs:[U,G],backend:a,attrs:{axis:0}}),K=vx({inputs:[H,q],backend:a,attrs:{axis:0}}),X=a.data.get(j.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(E),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Nw={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=v(r.shape),s=r.shape[r.shape.length-1],i=gb({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=kw(i,!1,n),u=gb({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Sw(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||_(a),o=E(i,v(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const Ew={kernelName:rt,backendName:"cpu",kernelFunc:Sw},Tw={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=S(r.dtype,v(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+a]),s[o]=h}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Rw=Zy((e=>Math.floor(e))),Aw=Ly(st,Rw),Dw={kernelName:st,backendName:"cpu",kernelFunc:Aw},Fw=Gy(((e,t)=>Math.floor(e/t))),_w=cb(it,Fw,null,"int32"),$w={kernelName:it,backendName:"cpu",kernelFunc:_w},Ow={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=bx({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=fb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=nb(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},Mw={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=$x({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=fb({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=nb(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function Lw(e,t,n,r,a,s,i,o,u){const l=Qa([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const Bw={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=v(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,h]=Il(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=Lw(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,s);return n.makeTensorInfo(u,r.dtype,p.values)}};function Pw(e,t,n){const r=Qa(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}const zw={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;_y([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=v(s.shape),c=Ql(a,s,C(i,a.shape)[0],u),h=gb({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=gb({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}}),d=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize],f=n.bufferSync(p),m=Pw(n.bufferSync(h),f,d);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(c.outputShape,m.dtype,m.values)}},Ww=Gy(((e,t)=>e>t?1:0)),Vw=cb(ct,Ww,null,"bool"),Uw={kernelName:ct,backendName:"cpu",kernelFunc:Vw},Gw=Gy(((e,t)=>e>=t?1:0)),Hw=cb(ht,Gw,null,"bool"),qw={kernelName:ht,backendName:"cpu",kernelFunc:Hw},jw={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=v(r.shape),s=r.shape[r.shape.length-1],i=gb({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=kw(i,!0,n),u=gb({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Kw=My(mt,(e=>Number.isFinite(e)?1:0),"bool"),Xw={kernelName:mt,backendName:"cpu",kernelFunc:Kw},Yw=My(gt,(e=>Math.abs(e)===1/0?1:0),"bool"),Jw={kernelName:gt,backendName:"cpu",kernelFunc:Yw},Zw=My(vt,(e=>Number.isNaN(e)?1:0),"bool"),Qw={kernelName:vt,backendName:"cpu",kernelFunc:Zw},ek=Gy(((e,t)=>e<t?1:0)),tk=cb(bt,ek,null,"bool"),nk={kernelName:bt,backendName:"cpu",kernelFunc:tk},rk=Gy(((e,t)=>e<=t?1:0)),ak=cb(xt,rk,null,"bool"),sk={kernelName:xt,backendName:"cpu",kernelFunc:ak};function ik(e,t,n){const r=(t-e)/(n-1),a=z(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const ok={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ik(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},uk=Zy((e=>Math.log(e))),lk=Ly(kt,uk),ck={kernelName:kt,backendName:"cpu",kernelFunc:lk},hk=My(It,(e=>Math.log1p(e))),pk={kernelName:It,backendName:"cpu",kernelFunc:hk},dk=Gy(((e,t)=>e&&t)),fk=cb(Ct,dk,null,"bool"),mk={kernelName:Ct,backendName:"cpu",kernelFunc:fk},gk=My(Nt,(e=>e?0:1),"bool"),vk={kernelName:Nt,backendName:"cpu",kernelFunc:gk},yk=Gy(((e,t)=>e||t)),bk=cb(St,yk,null,"bool"),xk={kernelName:St,backendName:"cpu",kernelFunc:bk},wk={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;_y(a,"LRN");const l=a.shape[3],c=l-1,h=n.data.get(a.dataId).values,p=v(a.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=h[n];a+=e*e}return a}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}},kk={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;_y(i,"LRNGrad");const h=v(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function Ik(e,t,n,r){const a=S(r,v(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function Ck(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=C(s,u);let h=c;const p=io(h,l);let d=o.data.get(a.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=Tb(d,u,a.dtype,p,e),h=uo(h.length,l),u=e}_y(a,"max"),so("max",h,l);const[f,m]=ro(u,h),g=Ik(d,v(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=ao(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const Nk={kernelName:Rt,backendName:"cpu",kernelFunc:Ck},Sk=Gy(((e,t)=>Math.max(e,t))),Ek=cb(At,Sk),Tk={kernelName:At,backendName:"cpu",kernelFunc:Ek},Rk={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;_y(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d(ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Hs(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))c=zy({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=M(a.shape),r=qb(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},Ak={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;_y(a,"maxPool3d");const c=qs(a.shape,s,i,1,o,u,l),h=Kb(n.data.get(a.dataId).values,a.shape,a.dtype,M(a.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},Dk={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;_y([a,s],"maxPool3DGrad");const c=qs(s.shape,i,o,1,u,l),h=function(e,t){const n=Qa(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let v=0;v<t.outDepth;++v){const y=v*r-p;let b=y;for(;b<0;)b+=i;const x=Math.min(t.inDepth,l+y);for(let r=0;r<t.outHeight;++r){const l=r*a-d;let p=l;for(;p<0;)p+=o;const w=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let C=Number.NEGATIVE_INFINITY,N=-1;for(let t=b;t<x;t+=i){const n=t-y;for(let r=p;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-d,o=e.get(m,t,r,s,g);o>=C&&(C=o,N=n*c*h+a*c+i)}}}n.set(N,m,v,r,a,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,v=c.dilationWidth,y=c.effectiveFilterDepth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=x-1-c.padInfo.left,I=b-1-c.padInfo.top,C=Qa(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-w,i=r-I,o=a-k;let u=0;for(let n=0;n<y;n+=m){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<b;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<x;i+=v){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=y*b*x-1-h.get(e,r,s,l,t)===n*b*x+a*x+i?1:0;0!==p&&(u+=N.get(e,r,s,l,t)*p)}}}C.set(u,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Fk={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;_y([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Hs(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=Qa(p.outShape,o.dtype,jb(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,v=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterHeight,x=p.effectiveFilterWidth,w=x-1-p.padInfo.left,k=b-1-p.padInfo.top,I=Qa(o.shape,"float32"),C=n.data.get(a.dataId).values,N=Qa(a.shape,"float32",C);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const a=n-k,s=r-w;let i=0;for(let n=0;n<b;n+=v){const r=(a+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let a=0;a<x;a+=y){const o=(s+a)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=b*x-1-f.get(e,r,o,t)===n*x+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},_k={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;_y(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Hs(r.shape,a,s,[1,1],i),[h,p]=function(e,t,n,r,a){const s=qb(e,0,n,M(t),a,"max"),i=jb(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},$k={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=C(s,a.shape),u=v(ro(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=ub({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=gw({inputs:{a:h,b:c},backend:n});l.push(p);const d=qx({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Ok={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;_y(a,"min");const o=C(s,a.shape);let u=o;const l=io(u,a.shape.length);let c=a;null!=l&&(c=Rb({inputs:{x:a},backend:n,attrs:{perm:l}}),u=uo(u.length,a.shape.length)),so("min",u,c.shape.length);const[h,p]=ro(c.shape,u),d=v(p),f=z(v(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=gb({inputs:{x:g},backend:n,attrs:{shape:ao(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Mk=Gy(((e,t)=>Math.min(e,t))),Lk=cb(Bt,Mk),Bk={kernelName:Bt,backendName:"cpu",kernelFunc:Lk},Pk={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;_y(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,h=n.data.get(a.dataId).values,p=a.shape.length,d=M(a.shape),f=v(o),m=o.length,g=M(o),y=S(a.dtype,f);for(let e=0;e<f;e++){let t=G(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=U(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},zk=Gy(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Wk=cb(zt,zk),Vk={kernelName:zt,backendName:"cpu",kernelFunc:Wk};function Uk(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=C([o],a.shape),l=Ck({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=ao(l.shape,u),h=gb({inputs:{x:l},backend:n,attrs:{shape:c}}),p=xw({inputs:{a,b:h},backend:n}),d=uw({inputs:{x:p},backend:n}),f=qx({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=gb({inputs:{x:f},backend:n,attrs:{shape:c}}),g=gw({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const Gk={kernelName:Tn,backendName:"cpu",kernelFunc:Uk},Hk={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;_y(a,"multinomial");const u=o?a:Uk({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,s],d=z(v(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=xo.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};function qk(e,t,n){const r=Nr(-1,n);return Vx([],t,r,e,n)}const jk={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;_y(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=qk(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Kk=Nu,Xk={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;_y(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:h}=Kk(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Yk=Su,Jk={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;_y(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:d}=Yk(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Zk=Eu,Qk={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;_y(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,h=n.data.get(s.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=Zk(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}},eI=Gy(((e,t)=>e!==t?1:0)),tI=cb(Gt,eI,null,"bool"),nI={kernelName:Gt,backendName:"cpu",kernelFunc:tI},rI={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;_y(a,"oneHot");const u=v(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function aI(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ib({inputs:{input:r},backend:n}),t=aI({inputs:{x:e},backend:n}),a=mx({inputs:{input:r},backend:n}),s=aI({inputs:{x:a},backend:n}),i=rb({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Sw({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const sI={kernelName:Yn,backendName:"cpu",kernelFunc:aI},iI={kernelName:Kt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=ib({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=mx({inputs:{input:a},backend:r}),i=aI({inputs:{x:s},backend:r}),o=rb({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Sw({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function oI(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return cw({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(s,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=vx({inputs:t.map((e=>{const t=cw({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const uI={kernelName:Yt,backendName:"cpu",kernelFunc:oI},lI={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;_y(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=v(a.shape),h=a.shape.length,p=M(a.shape),d=v(o),f=o.length,m=M(o),g=S(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[U(G(e,h,p).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},cI=Gy(((e,t)=>Math.pow(e,t))),hI=cb(Zt,cI),pI={kernelName:Zt,backendName:"cpu",kernelFunc:hI};function dI(e,t,n,r){const[a,s]=ro(e,r),i=Jr(t,"int32"),o=z(v(a),i),u=v(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const fI={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;_y(a,"prod");const o=a.shape.length,u=C(s,a.shape),l=io(u,o);let c=u,h=a;const p=[];null!=l&&(h=Rb({inputs:{x:a},backend:n,attrs:{perm:l}}),p.push(h),c=uo(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=dI(h.shape,h.dtype,d,c);let v=m;return i&&(v=ao(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,g,f)}};function mI(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return z(0,r);const a=z(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const gI={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=mI(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},vI=My(rn,(e=>1/e)),yI={kernelName:rn,backendName:"cpu",kernelFunc:vI},bI={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;_y(a,"resizeBilinear");const u=M(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(v([h,l,c,f])),y=[s&&l>1?p-1:p,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],k=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+s*u[2],v=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[v+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},xI={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;_y([s,a],"resizeBilinearGrad");const o=M(a.shape),[u,l,c,h]=a.shape,[,p,d]=s.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],v=m[0]/g[0],y=m[1]/g[1],b=n.data.get(s.dataId).values;let x=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*v,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],v=i+r*o[2],w=p*l,k=p*a,I=u*l,C=u*a;for(let e=0;e<h;e++){const t=b[x++];f[d+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*I,f[v+e]+=t*C}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},wI={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;_y(a,"resizeNearestNeighbor");const u=M(a.shape),[l,c]=o,[h,p,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(h*l*c*f),v=[s&&l>1?p-1:p,s&&c>1?d-1:d],y=[s&&l>1?l-1:l,s&&c>1?c-1:c],b=v[0]/y[0],x=v[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?b*(e+.5):b*e;let r=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?x*(e+.5):x*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[w++]=t}}}}return n.makeTensorInfo([h,l,c,f],a.dtype,g)}},kI={kernelName:un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;_y([s,a],"resizeNearestNeighborGrad");const o=M(a.shape),u=M(s.shape),[l,c,h,p]=a.shape,[,d,f]=s.shape,m=new Float32Array(l*c*h*p),g=n.data.get(s.dataId).values,v=[i&&d>1?c-1:c,i&&f>1?h-1:h],y=[i&&d>1?d-1:d,i&&f>1?f-1:f],b=v[0]/y[0],x=v[1]/y[1],w=1/b,k=1/x,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),a=Math.floor(r-I/2);for(let r=0;r<h;r++){const s=n+r*o[2],l=Math.floor(r*k),v=Math.floor(l-C/2);for(let n=0;n<p;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*b;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<C;e++){const t=e+v;if(t<0||t>=f)continue;const a=p+t*u[2],s=t*x;r===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},II={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;_y(a,"reverse");const i=a.shape.length,o=C(s,a.shape);if(0===i)return zy({inputs:{x:a},backend:n});const u=new Br(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},CI={kernelName:Qn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=S(r.dtype,v(r.shape)),[l,c,h,p]=r.shape,[d,f]=vl(i,c,h),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const a=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],v=o[2],b=o[1];let x=(v-d)*g-(b-f)*m,w=(v-d)*m+(b-f)*g;x=Math.round(x+d),w=Math.round(w+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),x>=0&&x<h&&w>=0&&w<c&&(k=y[t+w*(h*p)+x*p+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},NI=My(dn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),SI={kernelName:dn,backendName:"cpu",kernelFunc:NI},EI=Zy((e=>1/Math.sqrt(e))),TI=Ly(fn,EI),RI={kernelName:fn,backendName:"cpu",kernelFunc:TI};function AI(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],h=e.values,p=t.values;if(0===r)return Qa(n,t.dtype);const d=Qa(c,t.dtype);d.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?d.values[u*a+n]+=p[e*a+n]:d.values[u*a+n]=0===t.rank?p[0]:p[e*a+n]}return d}const DI={kernelName:mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Sl(0,a,i),p=AI(n.bufferSync(a),n.bufferSync(s),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},FI={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;_y([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=Jr(a.dtype,s.dtype),h=z(v(a.shape),c);let p=0;const d=0===i||i>1||1===a.shape.length?1:v(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(a.shape,c,h)}},_I=El,$I=Tl,OI=My(vn,(e=>e>=0?$I*e:_I*(Math.exp(e)-1))),MI={kernelName:vn,backendName:"cpu",kernelFunc:OI},LI=My(wn,(e=>e<0?-1:e>0?1:0)),BI={kernelName:wn,backendName:"cpu",kernelFunc:LI},PI=My(bn,(e=>Math.sin(e))),zI={kernelName:bn,backendName:"cpu",kernelFunc:PI},WI=My(xn,(e=>Math.sinh(e))),VI={kernelName:xn,backendName:"cpu",kernelFunc:WI},UI=Math.log(1.1920928955078125e-7)+2,GI=My(In,(e=>{const t=e>-UI,n=e<UI,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),HI={kernelName:In,backendName:"cpu",kernelFunc:GI},qI={kernelName:Sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;_y([a],"spaceToBatchND");const o=v(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=lI.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=yl(l.shape,s,o,!1),h=bl(c.length,s.length,!1),p=xl(l.shape,s,o,!1),d=gb({inputs:{x:l},backend:n,attrs:{shape:c}}),f=Rb({inputs:{x:d},backend:n,attrs:{perm:h}}),m=gb({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function jI(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[E(n,0),[0,h],E(a,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],s=E(n,t*h),p=E(a,t),d=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],a=d[n],i=(0===n?0:f[n-1])+a;d[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===d[e]){const t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;p[t]=i}return[s,[t,h],p,l,c]}}const KI={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=jI(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function XI(e,t,n,r,a){const s=v(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const h=v(u);if(h!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${h}. inputShape=${r} outputShape=${u}`);const p=r.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=E(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*d[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}const YI={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,h]=XI(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}};function JI(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=E(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=a[d];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(`Segment id ${g} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);g>m&&p.fill(i,m*l,g*l);for(let t=d;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)p[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[g*l+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*l,c*l),[p,h]}const ZI={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=JI(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},QI={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=JI(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},eC={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=Sl(0,a,o),d=AI(n.bufferSync(a),n.bufferSync(s),o,p,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},tC={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=C(i,a.shape)[0],u=Yl(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=tx({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},nC=Zy((e=>Math.sqrt(e))),rC=My(Cn,(e=>Math.sqrt(e))),aC={kernelName:Cn,backendName:"cpu",kernelFunc:rC},sC={kernelName:On,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;_y(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},iC=Gy(((e,t)=>{const n=e-t;return n*n})),oC=cb($n,iC),uC={kernelName:$n,backendName:"cpu",kernelFunc:oC},lC=My(Jn,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),cC={kernelName:Jn,backendName:"cpu",kernelFunc:lC};function hC(e,t,n,r){const a=Qa(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const pC={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;_y(a,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:v,outShape:y}=Ss(a.shape,s,i,o,u,l,c,h,p),b=gb({inputs:{x:a},backend:n,attrs:{shape:v}});let x;if(d){const e=tx({inputs:{x:b},backend:n,attrs:{begin:f,size:g}});x=gb({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))x=n.makeTensorInfo(y,a.dtype,[]);else{const e=hC(y,n.bufferSync(b),m,f);x=n.makeTensorInfo(e.shape,e.dtype,e.values)}const w=gb({inputs:{x},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),w}};class dC{constructor(e,t,n,r,a,s){this.separator=Tr(e),this.nGramWidths=t,this.leftPad=Tr(n),this.rightPad=Tr(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=E("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach((s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u})),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}function fC(e,t,n,r,a,s,i,o){return new dC(n,r,a,s,i,o).compute(e,t)}const mC={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=fC(p,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function gC(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function vC(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;gC(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=E("int32",2*s),l=new Array(s),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=a[h],++h;return[u,l,c]}const yC={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=vC(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function bC(e,t){const n=E("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Cr(e[r]).modulo(t).getLowBitsUnsigned();return n}const xC={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=bC(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},wC=My(Wn,(e=>Math.tan(e))),kC={kernelName:Wn,backendName:"cpu",kernelFunc:wC},IC=My(Vn,(e=>Math.tanh(e)));function CC(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Qa(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const NC=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function SC(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);SC(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(p(e,n,t),NC(e[r],a)>0&&p(e,n,r);s<i;){for(p(e,s,i),s++,i--;NC(e[s],a)<0;)s+=1;for(;NC(e[i],a)>0;)i-=1}0===NC(e[n],a)?p(e,n,i):(i+=1,p(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function EC(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=S(n,i*r),l=S("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(SC(i,r),i=i.slice(0,r)),a&&i.sort(NC);const c=t*r,h=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Qa(c,n,u),Qa(c,"int32",l)]}const TC={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=M(a.shape),b=y[0],x=y[1],w=y[2],k=S(a.dtype,v(g));k.fill(u);const I=r.data.get(a.dataId).values,C=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?C:C.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=RC(c,p,o),m=RC(d,h,o);switch(i){case"nearest":s=DC(I,h,p,b,x,w,e,m,f,a,u);break;case"bilinear":s=FC(I,h,p,b,x,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*b+n*x+r*w+a]=s}return r.makeTensorInfo(g,a.dtype,k)}return{dataId:r.write(k,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function RC(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return c(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return c(0,n,t-1)}(e,t);case"nearest":return function(e,t){return c(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function AC(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function DC(e,t,n,r,a,s,i,o,u,l,c){return AC(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function FC(e,t,n,r,a,s,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*AC(e,t,n,r,a,s,i,h,p,l,c)+(u-p)*AC(e,t,n,r,a,s,i,h,f,l,c))+(o-h)*((f-u)*AC(e,t,n,r,a,s,i,d,p,l,c)+(u-p)*AC(e,t,n,r,a,s,i,d,f,l,c))}function _C(e,t,n,r){const a=C(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Br(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=s.slice();h[1]=Object.keys(i).length;const p=new Br(h,r);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[a]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const $C={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;_y(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=cw({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Nr(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=Jx({inputs:{a:r,b:c},backend:n}),i=ub({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=Gx({inputs:{a:i,b:a},backend:n}),h=qx({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(s),u.push(i),u.push(l),u.push(h)}const h=oI({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},OC=[xb,kb,Cb,Sb,mb,Eb,Db,Fb,_b,$b,Mb,Bb,zb,Ub,Hb,Xb,Yb,Jb,Zb,bb,Qb,rx,ix,ox,lb,cx,px,ab,dx,yx,wx,kx,xx,Cx,Nx,Ix,Ex,Rx,Ax,Dx,Fx,_x,Ox,Mx,Lx,Bx,Px,Wx,zx,vw,Kx,Py,Xx,Zx,iw,lw,hw,fw,Nw,Ew,Tw,Dw,$w,Ow,Mw,Bw,zw,Uw,qw,Wy,jw,gx,Xw,Jw,Qw,Uy,nk,sk,ok,ck,pk,mk,vk,xk,wk,kk,Tk,Rk,Ak,Dk,Fk,_k,Nk,$k,Ok,Bk,Pk,Vk,Hk,Hx,jk,Xk,Jk,Qk,nI,rI,iI,uI,lI,pI,jy,fI,gI,ob,yI,Xy,Jy,vb,bI,xI,wI,kI,II,CI,SI,RI,DI,FI,MI,tb,BI,zI,VI,nx,Gk,HI,qI,KI,YI,ZI,QI,eC,tC,aC,sC,uC,cC,pC,mC,yC,xC,ww,jx,kC,{kernelName:Vn,backendName:"cpu",kernelFunc:IC},{kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;_y(a,"tile");const i=CC(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;_y(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=EC(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Ab,TC,{kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;_y(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=_C(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),h=a.shape.slice();h[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=tx({inputs:{x:a},backend:n,attrs:{begin:c,size:h}});p[e]=gb({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},$C,sI];for(const e of OC)ur(e);const MC={},LC={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function BC(e){if(!(e in MC)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete MC[e]}),!1),1===e?t.getContext("webgl",LC)||t.getContext("experimental-webgl",LC):t.getContext("webgl2",LC)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;MC[e]=t}const t=MC[e];return t.isContextLost()?(delete MC[e],BC(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),MC[e])}var PC,zC,WC;function VC(e,t){return[t,e]}function UC(e){const t=v(e);return x(Math.ceil(t/4))}function GC(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function HC(e,t){const n=e;let r,a,s,i,o,u,l,c,h,p;return 2===Y().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function qC(e,t){const n=t();return Y().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function jC(e){return!!(Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function KC(e,t){return nN(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(PC||(PC={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(zC||(zC={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(WC||(WC={}));const XC=/ERROR: [0-9]+:([0-9]+):/g;function YC(e,t){if(qC(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function JC(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(qC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),qC(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),qC(e,(()=>e.enableVertexAttribArray(o))),!0)}function ZC(e,t,n,r){qC(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),qC(e,(()=>e.activeTexture(e.TEXTURE0+n))),qC(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),qC(e,(()=>e.uniform1i(n,r)))}function QC(e,t,n){qC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),qC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function eN(e,t){qC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),qC(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function tN(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function nN(e,t,n){const r=qC(e,(()=>t()));if(null==r)throw new Error(n);return r}function rN(e,t=2){return v(e.slice(0,e.length-t))}function aN(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function sN(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[rN(e),...aN(e)]),t}function iN(e){return e%2==0}function oN(e,t){if(y(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(iN(n)&&iN(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&iN(e[0])&&iN(t[0])}let uN,lN;function cN(e,t){return null!=e.getExtension(t)}function hN(e){try{if(null!=BC(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function pN(e){const t=HC(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function dN(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const fN=Y();function mN(){let e,t,n,r,a,s,i,o,u,l;return 2===Y().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function gN(e,t,n="index"){const r=M(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function vN(e,t,n="index"){const r=M(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function yN(e){const t=M(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}fN.registerFlag("HAS_WEBGL",(()=>fN.getNumber("WEBGL_VERSION")>0)),fN.registerFlag("WEBGL_VERSION",(()=>hN(2)?2:hN(1)?1:0)),fN.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),fN.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===fN.get("WEBGL_VERSION"))),fN.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),fN.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),fN.registerFlag("WEBGL_PACK",(()=>fN.getBool("HAS_WEBGL"))),fN.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_CLIP",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_PACK_REDUCE",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_LAZILY_UNPACK",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_CONV_IM2COL",(()=>fN.getBool("WEBGL_PACK"))),fN.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==uN){const t=BC(e);uN=t.getParameter(t.MAX_TEXTURE_SIZE)}return uN}(fN.getNumber("WEBGL_VERSION")))),fN.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==lN){const t=BC(e);lN=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,lN)}(fN.getNumber("WEBGL_VERSION")))),fN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=fN.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=BC(e);return t=cN(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:cN(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),fN.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>fN.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!la())),fN.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=BC(e);if(1===e){if(!cN(t,"OES_texture_float"))return!1}else if(!cN(t,"EXT_color_buffer_float"))return!1;return pN(t)}(fN.getNumber("WEBGL_VERSION")))),fN.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!fN.getBool("WEBGL_FORCE_F16_TEXTURES")&&fN.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),fN.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=BC(e);if(1!==e){if(cN(t,"EXT_color_buffer_float"))return pN(t);const e="EXT_color_buffer_half_float";if(cN(t,e)){const n=t.getExtension(e);return function(e,t){const n=HC(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!cN(t,"OES_texture_float")&&!!cN(t,"WEBGL_color_buffer_float")&&pN(t)}(fN.getNumber("WEBGL_VERSION")))),fN.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=fN.getNumber("WEBGL_VERSION"))&&null!=BC(e).fenceSync;var e})),fN.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>fN.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),fN.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),fN.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>la()&&fN.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),fN.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),fN.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),fN.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),fN.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const bN="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:xN}=r;function wN(e,t,n){const r=[];if(e.forEach((e=>{const t=v(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=DN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?IN(e,r):kN(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=xN(e.shapeInfo.logicalShape,t.logicalShape),u=AN(i),l=i-s;let c;const h=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===v(e.shapeInfo.logicalShape),m=1===v(t.logicalShape);if(1!==s||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&y(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=AN(u),c=xN(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=mN(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${CN}\n    ${NN}\n    ${SN}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return y(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${vN(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=gN(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${vN(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=gN(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=gN(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=gN(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=EN),[h,u,c,a,l,s,n.userCode].join("\n")}function kN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=TN(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${RN(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=TN(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&y(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=N(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${kN(FN(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${_N(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${RN(e)}\n      }\n    `;const l=s[0],c=s[1],h=TN(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=N(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${kN(FN(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${_N(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${RN(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=TN(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=N(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${kN(FN(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${_N(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${RN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const v=TN(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${v});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=N(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${kN(FN(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${_N(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${RN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${TN(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=N(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${kN(FN(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${_N(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${RN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${TN(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function IN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${mN().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=mN();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=mN();if(null!=s&&y(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${IN(FN(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${_N(s,r)});\n        }\n      `}const o=mN();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=mN();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(s[i-1]/2);let p=h*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const CN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",NN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",SN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",EN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function TN(e){return`offset${e}`}function RN(e){const t=e.name,n=v(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function AN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function DN(e,t,n){const{newShape:r,keptDims:a}=N(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!y(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function FN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function _N(e,t){return t.map((t=>e[t])).join(", ")}function $N(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!y(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!y(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function ON(e){return Y().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class MN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=PC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=mN();this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?vN(["r","c","d"],e):gN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class LN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=PC.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=mN();this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?vN(["r","c","d"],e):gN(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class BN{constructor(e){this.variableNames=["A"],this.outTexUsage=zC.DOWNLOAD;const t=mN();this.outputShape=e,this.userCode=`\n      ${bN}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class PN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=zC.DOWNLOAD;const t=mN();this.outputShape=e,this.userCode=`\n      ${bN}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class zN{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=mN();this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yN(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class WN{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=mN();this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yN(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function VN(e,t,n,r,a,s){!function(e,t){const n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return nN(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return qC(e,(()=>e.bindTexture(o,i))),qC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),qC(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),qC(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),qC(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),qC(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),qC(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function UN(e){return e.internalFormatFloat}function GN(e){return e.internalFormatHalfFloat}function HN(e){return e.downloadTextureFormat}function qN(e){return e.internalFormatPackedFloat}function jN(e){return e.internalFormatPackedHalfFloat}class KN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Y().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){MC[e]=t}(t,e)):this.gl=BC(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Y().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=KC(this.gl,e),cN(this.gl,t))this.textureHalfFloatExtension=KC(this.gl,t);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),cN(this.gl,r))this.colorBufferHalfFloatExtension=KC(this.gl,r);else if(Y().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",cN(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!cN(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=nN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return qC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),qC(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=nN(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return qC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),qC(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return nN(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=HC(this.gl,this.textureHalfFloatExtension)}get debug(){return Y().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;qC(e,(()=>e.finish())),qC(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),qC(e,(()=>e.deleteFramebuffer(this.framebuffer))),qC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),qC(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),qC(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=VC(t,n);return VN(e,a,s,UN(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=VC(t,n);return VN(e,a,s,GN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=VC(t,n);return VN(e,a,s,HN(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){qC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?qC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):qC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),qC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;qC(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),qC(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),qC(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=GC(t,n);return VN(e,a,s,jN(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=GC(t,n);return VN(e,a,s,qN(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(eN(this.gl,this.framebuffer),this.outputTexture=null),qC(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=VC(t,n),i=new Uint8Array(t*n*4);return qC(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=GC(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();qC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return qC(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),qC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),qC(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Y().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return qC(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=nN(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(qC(e,(()=>e.shaderSource(n,t))),qC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=XC.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>w((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${w(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=mN();return function(e,t){const n=nN(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(qC(e,(()=>e.shaderSource(n,t))),qC(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return nN(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return qC(t,(()=>t.attachShader(r,this.vertexShader))),qC(t,(()=>t.attachShader(r,n))),function(e,t){if(qC(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&YC(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return qC(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),JC(e,t,"clipSpacePos",n,3,20,0)&&JC(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&qC(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&YC(this.gl,this.program),qC(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return nN(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),qC(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ZC(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=GC(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&YC(this.gl,this.program),tN(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),qC(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),qC(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=KC(this.gl,2===Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await k((()=>this.disposed||this.isQueryAvailable(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||k((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),QC(this.gl,e,this.framebuffer),this.debug&&tN(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(QC(this.gl,this.outputTexture,this.framebuffer),this.debug&&tN(this.gl)):eN(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;QC(r,e,this.framebuffer),this.debug&&tN(r),this.outputTexture=e,qC(r,(()=>r.viewport(0,0,t,n))),qC(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),qC(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:XN,bincountImpl:YN,bincountReduceImpl:JN,ceilImpl:ZN,concatImpl:QN,equalImpl:eS,expImpl:tS,expm1Impl:nS,floorImpl:rS,gatherNdImpl:aS,gatherV2Impl:sS,greaterImpl:iS,greaterEqualImpl:oS,lessImpl:uS,lessEqualImpl:lS,linSpaceImpl:cS,logImpl:hS,maxImpl:pS,maximumImpl:dS,minimumImpl:fS,multiplyImpl:mS,negImpl:gS,notEqualImpl:vS,prodImpl:yS,rangeImpl:bS,rsqrtImpl:xS,sigmoidImpl:wS,simpleAbsImpl:kS,sliceImpl:IS,sparseFillEmptyRowsImpl:CS,sparseReshapeImpl:NS,sparseSegmentReductionImpl:SS,sqrtImpl:ES,stridedSliceImpl:TS,stringNGramsImpl:RS,stringSplitImpl:AS,stringToHashBucketFastImpl:DS,subImpl:FS,tileImpl:_S,topKImpl:$S,transposeImpl:OS,uniqueImpl:MS}=a;function LS(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function BS(e,t){return 1===t?[e]:LS(e,t)}class PS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=BS("rc",t),r=AN(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class zS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map(((e,t)=>t)),t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`)).join("")}(["r","c","d"],"inputShape"):gN(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":yN(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class WS{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=US(t,n),a=GS(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=VS(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===WC.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===WC.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===WC.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===WC.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===WC.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=US(n,r),s=GS(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=VS(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Y().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function VS(e,t,n,r,a){const s=function(e,t){switch(e){case WC.PACKED_2X2_FLOAT32:return qN(t);case WC.PACKED_2X2_FLOAT16:return jN(t);case WC.UNPACKED_FLOAT32:return UN(t);case WC.UNPACKED_FLOAT16:return GN(t);case WC.PACKED_4X1_UNSIGNED_BYTE:return HN(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=GC(e[0],e[1]);i=t*n}else{const[t,n]=VC(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function US(e,t){if(e===zC.UPLOAD)return WC.PACKED_2X2_FLOAT32;if(e===zC.RENDER||null==e)return function(e){return Y().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?WC.PACKED_2X2_FLOAT32:WC.UNPACKED_FLOAT32:e?WC.PACKED_2X2_FLOAT16:WC.UNPACKED_FLOAT16}(t);if(e===zC.DOWNLOAD||e===zC.PIXELS)return WC.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function GS(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class HS{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const qS="return abs(x);",jS="return x;";class KS{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class XS{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=BS("rc",t),r=AN(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const YS=nc,JS={},ZS=Y().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class QS extends o{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Y().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=BC(Y().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Y().getNumber("WEBGL_VERSION"))in JS||(JS[t]={}),JS[t]),this.gpgpu=new KN(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new WS(this.gpgpu),this.numMBBeforeWarning=null==Y().global.screen?1024:Y().global.screen.height*Y().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i(this,As())}nextDataId(){return QS.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Y().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Y().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:zC.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Y().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:zC.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new KS(i,jS):new HS(i,jS);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Er()),c="complex64"===r?Ol(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Er()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new KS(r,jS):new HS(r,jS);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Y().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Y().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...UC(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Ol(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=v(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;qC(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&As().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Rr(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Qa(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!jC(n)){if(Y().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=v(t);if(Y().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...UC(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Y().getBool("WEBGL_PACK")&&!0===r,i=s?sN(t):t,o=s?new PN(i):new BN(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=g(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=g(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Er(),endMs:null}}endTimer(e){return Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Er(),e)}async getQueryTime(e){if(Y().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=ZS){return Y().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&v(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){q("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return YS(e.shape,t)}packedUnaryOp(e,t,n){const r=new KS(e.shape,t),a=this.compileAndRun(r,[e],n);return As().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=kS(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Y().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,qS,e.dtype);const t=new HS(e.shape,qS),n=this.compileAndRun(t,[e]);return As().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&D(n[0])){const a=n.map((e=>Tr(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return As().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new XS(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new PS(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[rN(e.shape),...aN(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[rN(t),...aN(t)],s=new zS(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=sN(r);let i;const o=UC(s);i=n?new LN(s):new MN(s);const u=[o];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===PC.DENSE){const t=UC(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===v(s.shape))return i.values=S(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&v(t.shape)<=Y().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!oN(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=DN(e.packedInputs,t.shape,s);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=M(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&y(t.shape,s),f=1===v(t.shape),m=Ei(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&y(s,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${d}_${l}_${c}_${h}_${b}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Y().getNumber("WEBGL_VERSION")}`,s}(e,u,l),h=this.getAndSaveBinary(c,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=wN(a,i,t),u=e.createProgram(o);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===Y().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const h=!1,p={},d={},f={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(u,r,h),p[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,h),t.enableShapeUniforms&&(d[`${r}Shape`]=e.getUniformLocation(u,`${r}Shape`,h),f[`${r}TexShape`]=e.getUniformLocation(u,`${r}TexShape`,h))}let m,g,v;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",h),v=e.getUniformLocation(u,"outShapeStrides",h),g=e.getUniformLocation(u,"outTexShape",h));const y=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{y[n]=e.getUniformLocation(u,t.name,h)})),{program:t,source:o,webGLProgram:u,uniformLocations:p,customUniformLocations:y,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:c,inShapesLocations:d,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:v,outTexShapeLocation:g}}(this.gpgpu,e,u,l))),p=null!=this.activeTimers;let d;p&&(d=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||($N(t.inShapeInfos,n),$N([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Y().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=DN(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(v(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=M(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,u,l,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(d=this.endTimer(d),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(d)}));const f=Y().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Er();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Y().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Y().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Fs((()=>{if(!Y().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Y().getBool("DEBUG");Y().set("DEBUG",!1);const t=this.abs(Ls(1e-8)).dataSync()[0];if(Y().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Er());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Y().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?h(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=N(e);e=t.newShape}let r=v(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=rN(e);let n=2,a=2;return e.length&&([n,a]=aN(e)),r=t*(n/2)*(a/2),x(r).map((e=>2*e))}return x(r)}(n,o),t.texShape=c),null!=a){const e=sN(n);let s,i=c[1],h=c[0];const p=a instanceof Uint8Array;o?([i,h]=GC(c[0],c[1]),s=new WN(e,p)):s=new zN(e,p);const d=this.makeTensorInfo([h,i],r);this.texData.get(d.dataId).usage=p?zC.PIXELS:zC.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(d.dataId),i,h,a);const f=[[h,i]],m=!0,g=this.runWebGLProgram(s,[d],r,f,m),v=this.texData.get(g.dataId);t.texture=v.texture,t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,this.disposeIntermediateTensorInfo(d),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=Er()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*A(t)}}QS.nextDataId=0,ca()&&Os("webgl",(()=>new QS),2);class eE{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ri(t,n),this.enableShapeUniforms=ON(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class tE{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ri(t,n);const a=this.outputShape.length;this.enableShapeUniforms=ON(a);let s="";if(r)if(0===a||1===v(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${AN(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=BS("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function nE(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rE={kernelName:pt,backendName:"webgl",kernelFunc:nE};function aE(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=nE({inputs:{x:r},backend:n}),u=nE({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const sE={kernelName:Ne,backendName:"webgl",kernelFunc:aE},iE="return (a < 0.) ? b * a : a;",oE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",uE={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Nr(s,"float32")),o=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tE(oE,a.shape,i.shape):new eE(iE,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},lE="return (a < 0.) ? b * a : a;",cE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",hE={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tE(cE,r.shape,a.shape):new eE(lE,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function pE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new KS(i.shape,t):new HS(i.shape,e),o.runWebGLProgram(l,[i],u)}}function dE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new eE(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],Jr(n.dtype,r.dtype))})),s=aE({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const h=s||Jr(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?ec(e):e,r="string"===u.dtype?ec(t):t,[s,i]=a(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=s,o}let p;return p=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new tE(t,u.shape,l.shape,n):new eE(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function fE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?cE:lE;if("leakyrelu"===e)return t?oE:iE;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class mE{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ON(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const v=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(b=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${b};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${v}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class gE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ri(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const vE="return a * b;";function yE(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Jr(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new gE("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new gE("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=aE({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=mS(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tE(vE,r.shape,a.shape):new eE(vE,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const bE={kernelName:Vt,backendName:"webgl",kernelFunc:yE};function xE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=v(a.shape),u=I(s,o),l=v(u);d(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(a.dataId);return!c.isPacked||oN(a.shape,u)||null!==c.texture&&oN(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[rN(e.shape),...aN(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[rN(t),...aN(t)],i=new zS(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}const wE={kernelName:sn,backendName:"webgl",kernelFunc:xE};class kE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${b(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class IE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function CE(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=gl(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,h;c="mean"===n?0===i?new kE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new kE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new IE({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=s,s=r.runWebGLProgram(c,[s],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return s}class NE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=AN(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class SE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=AN(this.rank),a=LS("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function EE(e,t,n){const r=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SE(e.shape,t):new NE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function TE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=C(a,e.shape);let o=i;const u=io(o,s),l=null!=u;let c=e;l&&(c=EE(e,u,r),o=uo(o.length,s)),so("sum",o,s);const[h,p]=ro(c.shape,o);let d=h;n&&(d=ao(h,i));const f=v(p),m=xE({inputs:{x:c},attrs:{shape:[v(e.shape)/f,f]},backend:r}),g=CE(m,Zr(e.dtype),"sum",r),y=xE({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const RE={kernelName:Nn,backendName:"webgl",kernelFunc:TE};function AE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=OS(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=EE(a,s,i);return l}const DE={kernelName:qn,backendName:"webgl",kernelFunc:AE};function FE({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[l-1]:e.shape[l-2],m=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=v(g),x=v(y);d(l>=2&&c>=2&&(b===x||1===b||1===x),(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);d(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,h,f]:[b,f,h],I=r?[x,m,p]:[x,p,m],C=xE({inputs:{x:e},backend:a,attrs:{shape:k}}),N=xE({inputs:{x:t},backend:a,attrs:{shape:I}}),S=[C,N],E=Math.max(b,x),T=n?C.shape[1]:C.shape[2],R=null!=s,A=null!=i,D="leakyrelu"===u,F=null!=u?fE(u,!0):null;let _;if((1===f||1===m)&&T>1e3&&!1===(R||A||D||null!=F)){let e=C,t=N;n&&(e=AE({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=AE({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===m;let i=e;1!==m&&(i=xE({inputs:{x:e},backend:a,attrs:{shape:[E,T,1]}}),S.push(i));const o=1===m?2:1;let u=t;s&&(u=xE({inputs:{x:t},backend:a,attrs:{shape:[E,1,T]}}),S.push(u));const l=yE({inputs:{a:i,b:u},backend:a});_=TE({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=Jr(e.dtype,t.dtype),l=new mE(k,I,[E,f,m],n,r,R,F,A,D),c=[C,N];if(null!=s&&c.push(s),A&&c.push(i),D){const e=a.makeTensorInfo([],"float32",Nr(o,"float32"));c.push(e),S.push(e)}_=a.runWebGLProgram(l,c,u)}const $=xE({inputs:{x:_},backend:a,attrs:{shape:w}});S.push(_);for(const e of S)a.disposeIntermediateTensorInfo(e);return $}const _E={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return FE({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},$E="return abs(x);",OE={kernelName:te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=kS(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KS(r.shape,$E):new HS(r.shape,$E),n.runWebGLProgram(a,[r],r.dtype)}},ME=pE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),LE={kernelName:ne,backendName:"webgl",kernelFunc:ME},BE=pE({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),PE={kernelName:re,backendName:"webgl",kernelFunc:BE},zE="return a + b;",WE=dE({opSnippet:zE,packedOpSnippet:zE,supportsComplex:!0,cpuKernelImpl:XN}),VE={kernelName:ae,backendName:"webgl",kernelFunc:WE};class UE{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class GE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const HE={kernelName:se,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return nE({inputs:{x:a[0]},backend:r});if(a.length>Y().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Jr(e,t))),i=a.map((e=>e.shape)),o=Y().getBool("WEBGL_PACK")?new GE(a[0].shape,i):new UE(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},qE={kernelName:ie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=C(s,a.shape);let l=u;const c=io(l,o);let h=a;null!=c&&(h=AE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=uo(l.length,o)),so("all",l,o);const[p,d]=ro(h.shape,l),f=xE({inputs:{x:h},backend:n,attrs:{shape:[-1,v(d)]}}),m=CE(f,f.dtype,"all",n);let g;return g=xE(i?{inputs:{x:m},backend:n,attrs:{shape:ao(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},jE={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=C(s,a.shape);let l=u;const c=io(l,o);let h=a;null!=c&&(h=AE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=uo(l.length,o)),so("any",l,o);const[p,d]=ro(h.shape,l),f=xE({inputs:{x:h},backend:n,attrs:{shape:[-1,v(d)]}}),m=CE(f,f.dtype,"any",n);let g;return g=xE(i?{inputs:{x:m},backend:n,attrs:{shape:ao(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class KE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class XE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=AN(o),l=BS("coords",o);let c,h;if(1===s){h=o+1;const e=AN(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map((e=>"int "+e)),g=BS("sourceLocR",h-1).concat("inIdx.r"),v=BS("sourceLocG",h-1).concat("inIdx.g"),y=BS("sourceLocB",h-1).concat("inIdx.b"),b=BS("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${v.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function YE(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=gl(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new KE(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=YE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function JE(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=gl(a[a.length-1]),i=new XE(a,s,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=JE(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function ZE(e,t,n,r){const a=[n];if(so("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Y().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=ro(i.shape,a),l=v(u),c=xE({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=YE(e,c,r);n.push(h);const p=xE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return JE(e,t,r)}const QE={kernelName:ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=C(s,a.shape);const o=io(i,a.shape.length);let u=a;const l=[];null!=o&&(u=AE({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=uo(i.length,u.shape.length)),so("argMax",[i[0]],u.shape.length);const c=ZE(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},eT={kernelName:le,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=C(s,a.shape);const o=io(i,a.shape.length);let u=a;const l=[];null!=o&&(u=AE({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=uo(i.length,u.shape.length)),so("argMin",[i[0]],u.shape.length);const c=ZE(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},tT=pE({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),nT={kernelName:ce,backendName:"webgl",kernelFunc:tT},rT=pE({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),aT={kernelName:he,backendName:"webgl",kernelFunc:rT},sT=pE({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),iT={kernelName:pe,backendName:"webgl",kernelFunc:sT},oT=dE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),uT={kernelName:fe,backendName:"webgl",kernelFunc:oT},lT=pE({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),cT={kernelName:de,backendName:"webgl",kernelFunc:lT};class hT{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let v="0.0";if(f||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const b=4*Math.floor(s/4),x=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${v};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${v});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${b}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${b};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class pT{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,v=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let b="0.0";if(y||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${v});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${v});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const dT={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dN(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d(ti(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Hs(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))return nE({inputs:{x:a},backend:n});const c=new hT(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},fT={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=qs(a.shape,s,i,[1,1,1],o,u,l),h=new pT(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class mT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gT{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vT={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=qs(i.shape,o,u,[1,1,1],l,c),p=new gT(h);return n.runWebGLProgram(p,[a],i.dtype)}},yT={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;dN([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Hs(i.shape,o,u,1,l),h=new mT(c);return n.runWebGLProgram(h,[a],i.dtype)}},bT={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return FE({a,b:s,transposeA:i,transposeB:o,backend:n})}};class xT{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Ri(e,t),Ri(e,n);let i="0.0";null!=r&&(Ri(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Ri(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class wT{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ri(e,t),Ri(e,n);let i="vec4(0.0)";null!=r&&(Ri(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Ri(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const kT={kernelName:ot,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;d(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=Y().getBool("WEBGL_PACK_NORMALIZATION")?new wT(r.shape,a.shape,s.shape,c,h,u):new xT(r.shape,a.shape,s.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class IT{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=AN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return CT.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${CT[t]} = start[${t}] + coords.${CT[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const CT=["x","y","z","w","u","v"];class NT{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=AN(this.rank),n=BS("coords",this.rank),r=BS("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function ST(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=Ns(a,s,i);if(hs(a,o,u),0===v(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=IS(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=Is(a.shape,o,u);if(l||!c){const e=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new NT(u):new IT(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Cs(t,M(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const ET={kernelName:yn,backendName:"webgl",kernelFunc:ST},TT={kernelName:xe,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;d(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=yl(a.shape,s,o),l=bl(u.length,s.length),c=xl(a.shape,s,o),h=wl(i,s.length),p=kl(c,i,s.length),f=[],m=xE({inputs:{x:a},backend:n,attrs:{shape:u}}),g=AE({inputs:{x:m},backend:n,attrs:{perm:l}}),v=xE({inputs:{x:g},backend:n,attrs:{shape:c}}),y=ST({inputs:{x:v},backend:n,attrs:{begin:h,size:p}});return f.push(m),f.push(g),f.push(v),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},RT={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=YN(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},AT=dE({opSnippet:"return float(a != b);",cpuKernelImpl:vS,dtype:"bool"}),DT={kernelName:Gt,backendName:"webgl",kernelFunc:AT};function FT(e){const{inputs:t,backend:n}=e,{input:r}=t;return nE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const _T={kernelName:nn,backendName:"webgl",kernelFunc:FT},$T={kernelName:ke,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return nE({inputs:{x:s},backend:r});const t=mo(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=aE({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=FT({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!T(s.dtype,i)){const e=nE({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new HS(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",S("bool",1)),t=AT({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},OT="return ceil(x);",MT=pE({opSnippet:OT,packedOpSnippet:OT,cpuKernelImpl:ZN}),LT={kernelName:Ie,backendName:"webgl",kernelFunc:MT};class BT{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class PT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const zT={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Y().getBool("WEBGL_PACK_CLIP")?new PT(a.shape):new BT(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};class WT{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function VT(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const UT={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new WT(r.shape),i=[VT(r,a.complexTensorInfos.real),VT(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class GT{constructor(e){this.outputShape=[],this.outputShape=fl(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class HT{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=fl(e,t);const n=this.outputShape,r=n.length,a=AN(r),s=BS("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${qT(i,u,t)}),\n            vec2(${qT(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${qT(i,u,d)}),\n          vec2(${qT(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function qT(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function jT(e){const{inputs:t,backend:n}=e,{input:r}=t;return nE({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const KT={kernelName:ft,backendName:"webgl",kernelFunc:jT};function XT(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>FT({inputs:{input:e},backend:n}))),a=e.map((e=>jT({inputs:{input:e},backend:n}))),s=XT(r,t,n),i=XT(a,t,n),o=aE({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=v(e.shape.slice(t));return xE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=fl(a.map((e=>e.shape)),1),o=1===a[0].shape[0],u=QN(s,i,r,o),l=fl(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Y().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=XT(e.slice(0,r),t,n),s=XT(e.slice(r),t,n),i=XT([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new HT(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=fl(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>xE({inputs:{x:e},attrs:{shape:[-1,v(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new GT(s.map((e=>e.shape))),u=n.runWebGLProgram(o,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=xE({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function YT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=C(a,t[0].shape)[0],i=fl(t.map((e=>e.shape)),s);if(0===v(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>v(e.shape)>0));return 1===o.length?nE({inputs:{x:o[0]},backend:n}):(dl(o.map((e=>e.shape)),s),XT(o,s,n))}const JT={kernelName:Ee,backendName:"webgl",kernelFunc:YT};class ZT{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,v=m?2:3,y=m?3:1;let b="",x="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${v}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${x}\n        setOutput(result);\n      }\n    `}}class QT{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class eR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ON(this.outputShape.length);const{dataFormat:n}=t,r=mN(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function tR({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if((1!==h&&1!==p||!(c>1e3))&&l.isPacked&&f&&null!=l.texture&&u[2]%2!=0&&y(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,d(oN(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const f=xE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(f);const v=FE({a:h,b:f,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(v.dataId);d(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,m=nE({inputs:{x:v},backend:r}),m.shape=n.outShape,g.push(v)}else{const l=xE({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=xE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=FE({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});m=xE({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function nR({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[m,g],b=[],x=xE({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=xE({inputs:{x:t},backend:r,attrs:{shape:[1,m,v(t.shape)/m]}});b.push(x),b.push(w);const k=new eR(y,n),I=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],C=r.runWebGLProgram(k,[x],"float32",I),N=xE({inputs:{x:C},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(C),b.push(N);const S=null!=a,E=null!=s,T="leakyrelu"===o,R=o?fE(o,!0):null,A=new mE(N.shape,w.shape,[1,g,n.outChannels],!0,!1,S,R,E,T),D=[N,w];if(a&&D.push(a),E&&D.push(s),T){const e=r.makeTensorInfo([],"float32",Nr(i,"float32"));D.push(e),b.push(e)}const F=r.runWebGLProgram(A,D,"float32"),_=xE({inputs:{x:F},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(F);for(const e of b)r.disposeIntermediateTensorInfo(e);return _}const rR={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=ni(u),p=js(a.shape,s.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Y().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])d=nR({x:a,filter:s,convInfo:p,backend:n});else{const e=new ZT(p);d=n.runWebGLProgram(e,[a,s],"float32")}else d=tR({x:a,filter:s,convInfo:p,backend:n});const f=xE({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class aR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class iR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uR={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=ni(u),p=js(a.shape,c,i,1,o,l,!1,h),d=new aR(p);return n.runWebGLProgram(d,[a,s],"float32")}},lR={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=ni(l),p=js(i,s.shape,o,1,u,c,!1,h),d=new sR(p);return n.runWebGLProgram(d,[a,s],"float32")}},cR={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Ks(a.shape,s.shape,i,u,o),c=new QT(l);return n.runWebGLProgram(c,[a,s],"float32")}},hR={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=Ks(a.shape,u,i,1,o),c=new iR(l);return n.runWebGLProgram(c,[a,s],"float32")}},pR={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=Ks(u,s.shape,o,1,i),c=new oR(l);return n.runWebGLProgram(c,[a,s],"float32")}},dR=pE({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),fR={kernelName:$e,backendName:"webgl",kernelFunc:dR},mR=pE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),gR={kernelName:Oe,backendName:"webgl",kernelFunc:mR};class vR{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,v]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[y,b,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${b};\n\n        float in_y = ${v};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const yR={kernelName:Le,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new vR(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class bR{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${xR(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${AN(r)} coords = getOutputCoords();\n        int end = ${wR(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${wR(r,"coords")} = idx;\n          val += getX(${xR(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function xR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function wR(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const kR={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=io([s],u);let c=a;null!=l&&(c=AE({inputs:{x:a},backend:n,attrs:{perm:l}}));const h=uo(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const p=c.shape[h];let d=nE({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new bR(c.shape,!1,o),r=[[e]],a=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new bR(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=AE({inputs:{x:d},backend:n,attrs:{perm:oo(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},IR={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=YN(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=JN(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class CR{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const NR={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;d(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],l="NHWC"===i?a.shape[2]:a.shape[3],c="NHWC"===i?a.shape[3]:a.shape[1],h=u*s,p=l*s,f=c/(s*s),m=new CR("NHWC"===i?[o,h,p,f]:[o,f,h,p],s,i);return n.runWebGLProgram(m,[a],a.dtype)}};class SR{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ON(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class ER{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ON(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<l;e++){for(let e=0;e<c;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+=`\n        xR = xRCorner + ${e} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let t=0;t<(p+1)/2;t++){const n=2*t;if(d+=`\n          xC = xCCorner + ${n*u};\n          `,1===o){if(n<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,d+=1===u&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<c)){const e=i%2==0?h(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,u>1&&(d+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),d+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):d+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else n<c&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,n+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,n+1<c&&(d+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<c&&(d+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<c&&(d+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n        }\n      "}let f="",m="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const TR={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),d(ti(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=js(a.shape,s.shape,i,c,o,l,!0);let p;p=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new ER(h):new SR(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",f)}};class RR{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class AR{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const DR={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=js(a.shape,c,i,o,u,l,!0),p=new RR(h);return n.runWebGLProgram(p,[a,s],"float32")}},FR={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=js(c,s.shape,i,o,u,l,!0),p=new AR(h);return n.runWebGLProgram(p,[a,s],"float32")}};class _R{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const $R={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=v(r.shape),i=xE({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new _R(s),u=n.runWebGLProgram(o,[i],i.dtype),l=xE({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class OR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const MR={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=Gs(a.shape,s.shape,i,o,"NHWC",u);let c;const h=new OR(l);c=n.runWebGLProgram(h,[a,s],"float32");const p=xE({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},LR={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=Gl(a,s.length);ql(i.length,u,s);const{path:l,steps:c}=jl(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Hl(d,u[t]);let a;Kl(e)?a=s[t]:(a=AE({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);y(a.shape,i)||(a=xE({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===p?p=a:(p=yE({inputs:{a,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=TE({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},BR=pE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),PR={kernelName:Xe,backendName:"webgl",kernelFunc:BR},zR={kernelName:Ye,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Y().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tE("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new eE("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},WR=dE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:eS}),VR={kernelName:Ze,backendName:"webgl",kernelFunc:WR},UR=pE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Rl};\n  float a1 = ${Al};\n  float a2 = ${Dl};\n  float a3 = ${Fl};\n  float a4 = ${_l};\n  float a5 = ${$l};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),GR={kernelName:Je,backendName:"webgl",kernelFunc:UR},HR="return exp(x);",qR=pE({opSnippet:HR,packedOpSnippet:HR,cpuKernelImpl:tS}),jR={kernelName:Qe,backendName:"webgl",kernelFunc:qR};function KR(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(d(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),xE({inputs:{x:s},backend:r,attrs:{shape:o}})}const XR={kernelName:et,backendName:"webgl",kernelFunc:KR},YR="return exp(x) - 1.0;",JR=pE({opSnippet:YR,packedOpSnippet:YR,cpuKernelImpl:nS}),ZR={kernelName:tt,backendName:"webgl",kernelFunc:JR};class QR{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function eA(e,t,n){const r=n.texData.get(e.dataId),a=v(e.shape),s=e.shape[e.shape.length-1],i=xE({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new QR("real",o,t),l=new QR("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=aE({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=xE({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const tA={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eA(r,!1,n)}};class nA{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function rA(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||_(a),"string"===s){const e=E(s,v(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new nA(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const aA={kernelName:rt,backendName:"webgl",kernelFunc:rA};class sA{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const iA={kernelName:at,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new sA(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},oA="return floor(x);",uA=pE({opSnippet:oA,packedOpSnippet:oA,cpuKernelImpl:rS}),lA={kernelName:st,backendName:"webgl",kernelFunc:uA},cA=dE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),hA={kernelName:it,backendName:"webgl",kernelFunc:cA};class pA{constructor(e){this.variableNames=["A"];const t=mN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class dA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=mN(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const fA={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],h=[l,u,s];(o||i)&&(null==mA&&(mA=document.createElement("canvas").getContext("2d")),mA.canvas.width=u,mA.canvas.height=l,mA.drawImage(a,0,0,u,l),a=mA.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=zC.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const d=Y().getBool("WEBGL_PACK")?new dA(h):new pA(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let mA;const gA={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=ni(c),g=js(a.shape,s.shape,u,h,l,p,!1,m);let v;const y=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Y().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])v=nR({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,u=d?fE(d,!1):null,l=new ZT(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Nr(f,"float32"));c.push(e),y.push(e)}v=n.runWebGLProgram(l,c,"float32")}else v=tR({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const b=xE({inputs:{x:v},backend:n,attrs:{shape:g.outShape}});return y.push(v),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},vA={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=[];let g=c;null==g&&(g=[1,1]),d(ti(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const v=js(a.shape,s.shape,u,g,l,h,!0),y=Y().getBool("WEBGL_PACK_DEPTHWISECONV")&&v.strideWidth<=2&&v.outChannels/v.inChannels==1,b=p?fE(p,y):null,x=[a,s],w=null!=i,k=null!=o,I="leakyrelu"===p;if(w&&x.push(i),k&&x.push(o),I){const e=n.makeTensorInfo([],"float32",Nr(f,"float32"));x.push(e),m.push(e)}let C;C=y?new ER(v,w,b,k,I):new SR(v,w,b,k,I);const N=[[v.padInfo.top,v.padInfo.left],[v.strideHeight,v.strideWidth],[v.dilationHeight,v.dilationWidth],[v.inHeight,v.inWidth]],S=n.runWebGLProgram(C,x,"float32",N);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class yA{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=AN(t.length),a=AN(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const bA={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=v(r.shape),[u,l,c,h]=Il(r,a),p=xE({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),d=xE({inputs:{x:r},backend:n,attrs:{shape:[v(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=aS(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new yA(i,h,[l,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=xE({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class xA{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=AN(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function wA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=Ql(a,s,C(i,a.shape)[0],o),l=v(s.shape),c=[],h=xE({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=xE({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(h),c.push(p);const d=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=sS(t,e,d);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const f=new xA(h.shape,d),m=n.runWebGLProgram(f,[h,p],h.dtype);c.push(m);const g=xE({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const kA={kernelName:ut,backendName:"webgl",kernelFunc:wA},IA=dE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:iS,dtype:"bool"}),CA={kernelName:ct,backendName:"webgl",kernelFunc:IA},NA=dE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:oS}),SA={kernelName:ht,backendName:"webgl",kernelFunc:NA},EA={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return eA(r,!0,n)}},TA=pE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),RA={kernelName:mt,backendName:"webgl",kernelFunc:TA},AA=pE({opSnippet:"return float(isinf(x));",dtype:"bool"}),DA={kernelName:gt,backendName:"webgl",kernelFunc:AA},FA=pE({opSnippet:"return float(isnan(x));",dtype:"bool"}),_A={kernelName:vt,backendName:"webgl",kernelFunc:FA},$A=dE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:uS,dtype:"bool"}),OA={kernelName:bt,backendName:"webgl",kernelFunc:$A},MA=dE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:lS,dtype:"bool"}),LA={kernelName:xt,backendName:"webgl",kernelFunc:MA},BA={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=cS(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},PA=pE({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:hS}),zA={kernelName:kt,backendName:"webgl",kernelFunc:PA},WA=pE({opSnippet:"return log(1.0 + x);"}),VA={kernelName:It,backendName:"webgl",kernelFunc:WA},UA=dE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),GA={kernelName:Ct,backendName:"webgl",kernelFunc:UA},HA=pE({opSnippet:"return float(!(x >= 1.0));"}),qA={kernelName:Nt,backendName:"webgl",kernelFunc:HA},jA=dE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),KA={kernelName:St,backendName:"webgl",kernelFunc:jA};class XA{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class YA{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const JA={kernelName:Et,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Y().getBool("WEBGL_PACK_NORMALIZATION")?new YA(a.shape,s,i,o,u):new XA(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};class ZA{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const QA={kernelName:Tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new ZA(a.shape,o,u,l,c);return n.runWebGLProgram(h,[a,s,i],a.dtype)}};function eD(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=C(s,a.shape);let l=u;const c=io(l,o),h=null!=c,p=n.shouldExecuteOnCPU([a]);let d=a;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=OS(e,a.shape,a.dtype,c,t);d=n.makeTensorInfo(t,a.dtype),n.texData.get(d.dataId).values=r}else d=EE(a,c,n);l=uo(l.length,o)}so("max",l,o);const[f,m]=ro(d.shape,l);let g,y=f;if(i&&(y=ao(f,u)),p){const e=n.texData.get(d.dataId).values,t=pS(e,v(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=v(t),s=xE({inputs:{x:e},attrs:{shape:[v(e.shape)/a,a]},backend:r}),i=CE(s,e.dtype,"max",r),o=xE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const tD={kernelName:Rt,backendName:"webgl",kernelFunc:eD},nD=dE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:dS}),rD={kernelName:At,backendName:"webgl",kernelFunc:nD},aD={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;dN(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;d(ti(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Hs(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&y(l.inShape,l.outShape))return nE({inputs:{x:a},backend:n});const c=new hT(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},sD={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=qs(a.shape,s,i,[1,1,1],o,l,u),h=new pT(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class iD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oD{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const uD={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=qs(i.shape,o,u,[1,1,1],l,c),p=new pT(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new oD(h),m=n.runWebGLProgram(f,[a,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},lD={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;dN([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Hs(o.shape,u,l,1,c,h),d=new hT(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new iD(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},cD={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;d(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];d(ti(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const c=Hs(r.shape,a,s,l,i),[h,p]=function(e,t,n,r){let a=new hT(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new hT(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[h,p]}},hD={kernelName:Mt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=C(s,r.shape);let l=u;const c=io(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=OS(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=EE(r,c,i);d.push(f),l=uo(l.length,o)}so("sum",l,o);const[m,g]=ro(f.shape,l);let y=m;a&&(y=ao(m,u));const b=function(e,t,n,r){const a=v(t),s=xE({inputs:{x:e},attrs:{shape:[v(e.shape)/a,a]},backend:r}),i=CE(s,"float32","mean",r),o=xE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},pD={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=C(s,a.shape);let l=u;const c=io(l,o);let h=a;null!=c&&(h=AE({inputs:{x:a},backend:n,attrs:{perm:c}}),l=uo(l.length,a.shape.length)),so("min",l,o);const[p,d]=ro(h.shape,l),f=xE({inputs:{x:h},backend:n,attrs:{shape:[-1,v(d)]}}),m=CE(f,f.dtype,"min",n);let g;return g=xE(i?{inputs:{x:m},backend:n,attrs:{shape:ao(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},dD=dE({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:fS}),fD={kernelName:Bt,backendName:"webgl",kernelFunc:dD};class mD{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=AN(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class gD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=AN(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=BS("rc",r),u=BS("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const vD={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gD(r.shape,a,s):new mD(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},yD=dE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),bD={kernelName:zt,backendName:"webgl",kernelFunc:yD};class xD{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const wD=dE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),kD={kernelName:je,backendName:"webgl",kernelFunc:wD},ID="return a - b;",CD=dE({opSnippet:ID,packedOpSnippet:ID,supportsComplex:!0,cpuKernelImpl:FS}),ND={kernelName:zn,backendName:"webgl",kernelFunc:CD};function SD(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=C([s],a.shape),o=eD({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=ao(o.shape,i),l=xE({inputs:{x:o},backend:n,attrs:{shape:u}}),c=CD({inputs:{a,b:l},backend:n}),h=qR({inputs:{x:c},backend:n}),p=TE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=xE({inputs:{x:p},backend:n,attrs:{shape:u}}),f=wD({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const ED={kernelName:Tn,backendName:"webgl",kernelFunc:SD},TD={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:SD({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new xD(l,c,s),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},RD="return -x;",AD={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=gS(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Y().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new KS(r.shape,RD):new HS(r.shape,RD),n.runWebGLProgram(a,[r],r.dtype)}},DD=Nu,FD={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){q("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:h}=DD(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},_D=Su,$D={kernelName:qt,backendName:"webgl",kernelFunc:function(e){q("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:p,validOutputs:d}=_D(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},OD=Eu,MD={kernelName:jt,backendName:"webgl",kernelFunc:function(e){q("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),h=n.readSync(s.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:v}=OD(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([v.length],"float32",new Float32Array(v))]}};class LD{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const BD={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=v(a.shape),l=new LD(u,s,i,o),c=xE({inputs:{x:a},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=xE({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),p}};function PD(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=FT({inputs:{input:r},backend:n}),t=PD({inputs:{x:e},backend:n}),a=jT({inputs:{input:r},backend:n}),s=PD({inputs:{x:a},backend:n}),i=aE({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return rA({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const zD={kernelName:Yn,backendName:"webgl",kernelFunc:PD},WD={kernelName:Kt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=FT({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=jT({inputs:{input:a},backend:r}),i=PD({inputs:{x:s},backend:r}),o=aE({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return rA({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},VD={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return KR({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{f(s,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=YT({inputs:t.map((e=>{const t=KR({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class UD{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=AN(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class GD{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=AN(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=BS("rc",r),u=BS("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const HD=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===v(a.shape)){const e=s.map(((e,t)=>e[0]+a.shape[t]+e[1]));return rA({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GD(a.shape,s,i):new UD(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},qD={kernelName:Jt,backendName:"webgl",kernelFunc:HD},jD=dE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),KD={kernelName:Zt,backendName:"webgl",kernelFunc:jD},XD={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=C(s,a.shape);let c=l;const h=io(c,o);let p,d=a;if(null!=h&&(d=AE({inputs:{x:a},backend:n,attrs:{perm:h}}),c=uo(c.length,o),u.push(d)),so("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:a}=yS(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=ro(d.shape,c),r=v(t),s=xE({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=CE(s,Zr(a.dtype),"prod",n);p=xE({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(p);const e=ao(p.shape,l);p=xE({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},YD=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=bS(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},JD={kernelName:tn,backendName:"webgl",kernelFunc:YD},ZD=pE({opSnippet:"return 1.0 / x;"}),QD={kernelName:rn,backendName:"webgl",kernelFunc:ZD},eF=pE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),tF={kernelName:an,backendName:"webgl",kernelFunc:eF},nF=pE({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),rF={kernelName:hn,backendName:"webgl",kernelFunc:nF};class aF{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class sF{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const iF={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new sF(a.shape,u,l,s,i):new aF(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};class oF{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const uF={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new oF(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class lF{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class cF{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const hF={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Y().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cF(a.shape,u,l,s,i):new lF(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class pF{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const dF={kernelName:un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new pF(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class fF{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=AN(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class mF{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=BS("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=AN(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const gF={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=C(s,a.shape);if(0===i)return nE({inputs:{x:a},backend:n});const u=Y().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mF(a.shape,o):new fF(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class vF{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const yF={kernelName:Qn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new vF(r.shape,s),[l,c]=vl(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},bF=pE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),xF={kernelName:dn,backendName:"webgl",kernelFunc:bF},wF=pE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:xS}),kF={kernelName:fn,backendName:"webgl",kernelFunc:wF};class IF{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=AN(a.length),u=AN(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const CF={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=Sl(0,a,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,a.dtype);const d=xE({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=xE({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new IF(u,o,d.shape.length,f.shape.length,c,p),v=n.runWebGLProgram(g,[f,d,m],f.dtype),y=xE({inputs:{x:v},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(m),y}};class NF{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=AN(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const SF={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new NF(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Jr(a.dtype,s.dtype))}},EF=pE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${El};\n  float scale = ${Tl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),TF={kernelName:vn,backendName:"webgl",kernelFunc:EF},RF="return 1.0 / (1.0 + exp(-1.0 * x));",AF=pE({opSnippet:RF,packedOpSnippet:RF,cpuKernelImpl:wS}),DF={kernelName:kn,backendName:"webgl",kernelFunc:AF},FF=pE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),_F={kernelName:wn,backendName:"webgl",kernelFunc:FF},$F=pE({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),OF={kernelName:bn,backendName:"webgl",kernelFunc:$F},MF=pE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),LF={kernelName:xn,backendName:"webgl",kernelFunc:MF},BF=pE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),PF={kernelName:In,backendName:"webgl",kernelFunc:BF},zF={kernelName:Sn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;d(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=HD({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),h=yl(c.shape,s,o,!1),p=bl(h.length,s.length,!1),f=xl(c.shape,s,o,!1),m=xE({inputs:{x:c},backend:n,attrs:{shape:h}}),g=AE({inputs:{x:m},backend:n,attrs:{perm:p}}),v=xE({inputs:{x:g},backend:n,attrs:{shape:f}});return l.push(c),l.push(m),l.push(g),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},WF={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=CS(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},VF={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,h]=NS(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}},UF={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=SS(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},GF={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=SS(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},HF={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=Sl(0,a,o),p=new IF(l,u,a.shape.length,s.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[s,a,i],s.dtype),f=xE({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},qF={kernelName:En,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=C(i,a.shape)[0],u=Yl(a,s,o),l=a.shape.length,c=new Array(l).fill(0),h=a.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=ST({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},jF="return sqrt(x);",KF=pE({opSnippet:jF,packedOpSnippet:jF,cpuKernelImpl:ES}),XF={kernelName:Cn,backendName:"webgl",kernelFunc:KF},YF={kernelName:On,backendName:"webgl",kernelFunc:pE({opSnippet:"return x * x;"})},JF="return (a - b) * (a - b);",ZF=dE({opSnippet:JF,packedOpSnippet:JF}),QF={kernelName:$n,backendName:"webgl",kernelFunc:ZF},e_={kernelName:Jn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new HS(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class t_{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=AN(n.length),s=AN(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const n_={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{nonStrided:d,$begin:f,$strides:m,size:g,newShape:v,outShape:y}=Ss(a.shape,s,i,o,u,l,c,h,p),b=xE({inputs:{x:a},backend:n,attrs:{shape:v}});let x;if(d){const e=ST({inputs:{x:b},backend:n,attrs:{begin:f,size:g}});x=xE({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))x=n.makeTensorInfo(y,a.dtype,[]);else if(n.shouldExecuteOnCPU([b])){const e=n.texData.get(b.dataId).values,t=Qa(b.shape,b.dtype,e),r=TS(y,t,m,f);x=n.makeTensorInfo(y,b.dtype,r.values)}else{const e=new t_(f,m,y);x=n.runWebGLProgram(e,[b],b.dtype)}const w=xE({inputs:{x},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x),w}},r_={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=RS(p,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},a_={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=AS(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},s_={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=DS(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},i_=pE({opSnippet:"return tan(x);"}),o_={kernelName:Wn,backendName:"webgl",kernelFunc:i_},u_=pE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),l_={kernelName:Vn,backendName:"webgl",kernelFunc:u_};class c_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=AN(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function h_(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>Rr(e))):e,r=Qa(a.shape,a.dtype,t),i=_S(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new c_(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const p_={kernelName:Un,backendName:"webgl",kernelFunc:h_};class d_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class f_{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function m_(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function g_(e){let t=1;for(;t<e;)t*=2;return t}const v_={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Y().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Y().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=$S(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,rA({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(a):a,f=v(l)/c,m=xE({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&m_(n,d);const g=g_(s),y=g_(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const a=x(),s=new d_(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),m_(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new f_([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),m_(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let k=b;b=ST({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),m_(n,k);let I=wA({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});m_(n,m);const C=l.slice(0,-1);C.push(s),k=b,b=xE({inputs:{x:b},attrs:{shape:C},backend:n}),m_(n,k);const N=I;return I=xE({inputs:{x:I},attrs:{shape:C},backend:n}),m_(n,N),[I,b]}};class y_{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const b_={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=a.shape,[f,m]=null!=l?l:[h,p],g=new y_(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},x_={kernelName:jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;dN(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=MS(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},w_={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=ST({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=xE({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class k_{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const I_=[JA,QA,_E,OE,LE,PE,VE,HE,qE,jE,QE,eT,nT,aT,uT,iT,cT,fT,dT,vT,yT,bT,kT,TT,RT,$T,LT,zT,UT,sE,JT,uR,lR,rR,hR,pR,cR,fR,gR,yR,kR,IR,NR,DR,FR,TR,$R,MR,LR,PR,zR,VR,GR,jR,XR,ZR,tA,aA,iA,lA,hA,fA,gA,vA,bA,kA,CA,SA,rE,EA,KT,RA,DA,_A,uE,OA,LA,BA,VA,zA,GA,qA,KA,tD,sD,aD,uD,lD,cD,rD,hD,pD,fD,vD,bD,TD,bE,AD,FD,$D,MD,DT,BD,WD,VD,qD,KD,hE,XD,JD,_T,kD,QD,rF,tF,wE,iF,uF,hF,dF,gF,yF,xF,kF,CF,SF,TF,DF,_F,OF,LF,ET,ED,PF,zF,WF,VF,UF,GF,HF,qF,XF,YF,QF,e_,n_,r_,a_,s_,ND,RE,o_,l_,p_,v_,b_,DE,x_,w_,{kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=io([l],o);let h=a;null!=c&&(h=AE({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(h),l=uo(1,o)[0]);const p=Zl(h.shape,l,i),d=v([h.shape[l]]),f=xE({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=Zr(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Jl(o,s),c=new k_({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(c,[e,r],a);if(u.push(h),h.shape[1]===s)return h;const p=YD({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),d=h_({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(d),g(h,t,d,a,s)},y=xE({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=oo(c);b=AE({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},zD];for(const e of I_)ur(e);var C_,N_=function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},S_=function(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}},E_=document.querySelector("#rightEye"),T_=document.querySelector("#leftEye"),R_=document.querySelector("#webcam"),A_=document.querySelector("#text"),D_=Date.now(),F_=0;function __(){return N_(this,void 0,void 0,(function(){var e,t,n;return S_(this,(function(r){switch(r.label){case 0:return requestAnimationFrame(__),e=Date.now(),(F_=e-D_)>100?(D_=e-F_%100,a=R_,s={width:200,height:200},i=new OffscreenCanvas(s.width,s.height),(o=i.getContext("2d")).drawImage(a,0,0,i.width,i.height),t=o.getImageData(0,0,i.width,i.height),[4,C_.predictEyeOpenness(t)]):[3,2];case 1:if(!(n=r.sent()))return[2];console.log(n.right,n.left),E_.style.height=200*n.right+"px",T_.style.height=200*n.left+"px",A_.innerHTML="left: "+n.left+", right: "+n.right,r.label=2;case 2:return[2]}var a,s,i,o}))}))}!function(){N_(this,void 0,void 0,(function(){return S_(this,(function(e){switch(e.label){case 0:return[4,s.load("https://raw.githubusercontent.com/mirrory-dev/eyeblink/master/models/model.json")];case 1:return C_=e.sent(),[4,Fy(R_)];case 2:return e.sent(),__(),[2]}}))}))}()})()})();
//# sourceMappingURL=bundle.js.map